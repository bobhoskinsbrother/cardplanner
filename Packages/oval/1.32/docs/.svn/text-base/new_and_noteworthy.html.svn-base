<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">











<html xmlns="http://www.w3.org/1999/xhtml">
  <head>
    <title>OVal - the object validation framework for Java™ 5 or later - </title>
    <style type="text/css" media="all">
      @import url("./css/maven-base.css");
      @import url("./css/maven-theme.css");
      @import url("./css/site.css");
    </style>
    <link rel="stylesheet" href="./css/print.css" type="text/css" media="print" />
        <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
                                                    
<link rel="shortcut icon" type="image/x-icon" href="images/favicon.ico"/>
                    </head>
  <body class="composite">
    <div id="banner">
                  <a href="" id="bannerLeft">
    
                                            <img src="images/oval-banner.png" alt="" />
    
            </a>
                    <div class="clear">
        <hr/>
      </div>
    </div>
    <div id="breadcrumbs">
          
  

  
    
            
  
    
            <div class="xleft">
        Last Published: 2009-05-10
                  &nbsp;| Version: 1.32
                      </div>
            <div class="xright">            <a href="">Home</a>
            
  

  
    
            
  
    
  </div>
      <div class="clear">
        <hr/>
      </div>
    </div>
    <div id="leftColumn">
      <div id="navcolumn">
           
  

  
    
            
  
    
                   <h5>OVal 1.32</h5>
            <ul>
              
    <li class="none">
                    <a href="index.html">About</a>
          </li>
              
    <li class="none">
              <strong>New and Noteworthy</strong>
        </li>
              
    <li class="none">
                    <a href="license.html">License</a>
          </li>
              
    <li class="none">
                    <a href="userguide.html">User Guide</a>
          </li>
              
    <li class="none">
                    <a href="api/index.html">API (JavaDoc)</a>
          </li>
              
    <li class="none">
                    <a href="dependencies.html">Dependencies</a>
          </li>
              
    <li class="none">
                    <a href="roadmap.html">Roadmap</a>
          </li>
              
    <li class="none">
                    <a href="dashboard-report.html">Code Metrics</a>
          </li>
              
    <li class="none">
                    <a href="http://sourceforge.net/project/showfiles.php?group_id=145963" class="externalLink">Download</a>
          </li>
          </ul>
              <h5>Project Documentation</h5>
            <ul>
              
                
              
      
            
      
            
      
            
      
            
      
            
      
            
      
            
      
              
        <li class="collapsed">
                    <a href="project-info.html">Project Information</a>
                </li>
              
                
              
      
            
      
            
      
            
      
            
      
            
      
            
      
            
      
            
      
            
      
            
      
            
      
            
      
              
        <li class="collapsed">
                    <a href="project-reports.html">Project Reports</a>
                </li>
          </ul>
                                                 
                        
                        
            <a href="http://maven.apache.org/" title="Maven" class="poweredBy">
                            <img alt="Maven" src="images/logos/maven-feather.png" />
            </a>
                               
  

  
    
            
  
    
        </div>
    </div>
    <div id="bodyColumn">
      <div id="contentBox">
        <div class="section"><h2>New and Noteworthy</h2>
<div class="section"><h3>Version 1.32 (2009-05-10)</h3>
<div class="section"><h4>New Features and Improvements</h4>
<ul><li>added Brazilian Portuguese translation of the constraint violation messages [ 2593104 ] (thanks to Leonardo Pinto) </li>
<li>introduced an interface implemented by Validator for supporting easier mocking</li>
<li>French translation updated (thanks to �ric Vigeant)</li>
<li>upgraded Groovy 1.6.2, MVEL 2.0.8, Paranamer 1.3, JRuby 1.2.0, cglib 2.2,Spring 2.5.6SEC01</li>
<li>added an @Email constraint (thanks to Musachy Barosso)</li>
</ul>
</div>
<div class="section"><h4>Issues solved </h4>
<ul><li>fixed [ 2493925 ] java.util.NoSuchElementException if @AssertValid is used</li>
<li>fixed [ 2495825 ] The profile feature of Validator is not thread safe</li>
<li>fixed [ 2493379 ] array types in xml based configuration</li>
<li>fixed [ 2579897 ] xml based configuration related to post/pre checks</li>
<li>fixed [ 2723344 ] Should not call any method on not fully initialized object</li>
<li>fixed [ 2723413 ] translated JDK exception should keep the cause</li>
<li>fixed NPE in JDK Logger implementation (thanks to Carsten Siedentop)</li>
</ul>
</div>
</div>
<div class="section"><h3>Version 1.31 (2008-21-27)</h3>
<div class="section"><h4>New Features</h4>
<ul><li>added support for multi-valued constraints</li>
<li>JPAAnnotationsConfigurer now interprets @Column.precision/scale for numeric fields</li>
</ul>
</div>
<div class="section"><h4>Issues solved</h4>
<ul><li>fixed Object level constraints defined in XML were ignored by the XMLConfigurator (thanks to Niels Kirkegaard)</li>
<li>fixed [ 2063142 ] doc typo</li>
<li>fixed prefix of default constraint message codes (changed from net.sf.oval.constraints to net.sf.oval.constraint)</li>
<li>fixed an issue where OVal was translating exception thrown by guarded methods into ValidationFailedException</li>
<li>fixed bug [ 2164438 ] SerializableField bug when dealing with private fields</li>
<li>fixed bug [ 2166232 ] JPAAnnotationsConfigurer should use AssertValidCheck for @ManyToMany</li>
<li>fixed bug [ 2192175 ] Validator.validate checks the same object multiple times</li>
<li>fixed [ oval-Bugs-2406574 ] wrong scripting language enumerations in xsd and dtd</li>
</ul>
</div>
</div>
<div class="section"><h3>Version 1.30 (2008-08-10)</h3>
<div class="section"><h4>New Features</h4>
<ul><li>added support for logging via SLF4J</li>
<li>added constraint check exclusion feature which can be used for fine-grained deactivation of constraints</li>
<li>added <tt>@net.sf.oval.constraint.exclusion.Nullable</tt>
 constraint check exclusion</li>
<li>introduced <tt>net.sf.oval.localization.context.OValContextRenderer</tt>
</li>
<li><tt>@MatchPattern</tt>
 can now match against multiple patterns</li>
<li>added constraint configuration XSD as replacement for the DTD</li>
<li>ConstraintViolation now provides more details about the violated constraint (checkName, messageVariables, messageTemplate)</li>
<li>added support for using Spring AOP to enable programming by contract for Spring managed beans</li>
<li>constraints declared without any profiles are associated with a profile named &quot;default&quot; automatically</li>
<li>greatly simplified usage of the probe mode feature</li>
</ul>
</div>
<div class="section"><h4>Issues solved</h4>
<ul><li>fixed an StackOverflowError that occurs when referencing the same property via _this.<i>property_name</i>
 in scripted pre/post conditions</li>
<li>fixed some issues in the DTD</li>
<li>fixed bug [ 2023617 ] <tt>@ValidateWithMethod</tt>
 in super classes do not work</li>
</ul>
</div>
<div class="section"><h4>Migration Notes (1.20 to 1.30)</h4>
<ul><li>changed parameter substring() of annotation @HasSubstring() to value() which allows less verbose usage, e.g. @HasSubstring(&quot;foo&quot;) instead of @HasSubstring(substring=&quot;foo&quot;)</li>
<li>renamed MessageResolverImpl to ResourceBundleMessageResolver</li>
<li>moved MessageResolver classes from net.sf.oval.localization to net.sf.oval.localization.message</li>
<li>migrated from Ant to Maven as project build system</li>
<li>Guard.setInProbeMode(...) has been refactored into to separate methods Guard.enableProbeMode(...) and Guard.disableProbeMode(...)</li>
</ul>
</div>
</div>
<div class="section"><h3>Version 1.20 (2008-04-05)</h3>
<div class="section"><h4>New Features</h4>
<ul><li>added support for Apache Commons JEXL as expression language</li>
<li>added <tt>@net.sf.oval.constraint.EqualToField</tt>
 (thanks to anydoby for the idea)</li>
<li>added <tt>@net.sf.oval.constraint.NotEqualToField</tt>
 (thanks to anydoby for the idea) </li>
<li>added <tt>@net.sf.oval.constraint.DateRange</tt>
 (thanks to anydoby for the idea) </li>
<li>added Japanse translation of the constraint violation messages [ 1911078 ] (thanks to Shinpei Ohtani) </li>
</ul>
</div>
<div class="section"><h4>Issues solved</h4>
<ul><li>fixed bug [ 1885645 ] <tt>Validator.validateFieldValue</tt>
 should not return null</li>
<li>fixed bug [ 1834537 ] NullPointerException in <tt>constraintViolation.getCauses()</tt>
</li>
<li>fixed bug [ 1852088 ] Incorrect default message for NotEqual validation</li>
<li>fixed bug [ 1852087 ] Corrupt default localized messages</li>
<li>fixed bug [ 1868301 ] OVal with groovy - Performance Evaluation</li>
<li>fixed bug [ 1917978 ] Length of @Column should be ignored if @Lob is present</li>
<li>fixed bug [ 1934263 ] Versionconflict with WLS10.0 Clientlib </li>
</ul>
</div>
</div>
<div class="section"><h3>Version 1.10 (2007-11-02)</h3>
<div class="section"><h4>New Features </h4>
<ul><li>five new built-in constraints <tt>@AssertURL</tt>
, <tt>@InstanceOfAny</tt>
, <tt>@MemberOf</tt>
, <tt>@NotEqual</tt>
, <tt>@NotMemberOf</tt>
</li>
<li>errorCode and severity can now be specified for constraints</li>
<li>added support for object-level constraints (compound constraints)</li>
<li>support for Ruby as constraints expression language</li>
<li>constraints violation messages translated into Chinese, Dutch, Hungarian, Italian, Norwegian, Portuguese, Romanian, Russian, Spanish, Swedish, Turkish</li>
<li>support for different logging frameworks/facades, so far: JDK logging, Log4J, commons logging</li>
</ul>
</div>
<div class="section"><h4>Migration Notes (1.0 to 1.10)</h4>
<ul><li><tt>net.sf.oval.exception.ConstraintsViolatedException</tt>
 was moved from package <tt>net.sf.oval.guard</tt>
</li>
<li><tt>net.sf.oval.exception.ExceptionTranslator</tt>
 was moved from package <tt>net.sf.oval.guard</tt>
</li>
<li><tt>net.sf.oval.exception.ExceptionTranslatorJDKExceptionsImpl</tt>
 was moved from package <tt>net.sf.oval.guard</tt>
</li>
<li><tt>@AssertTrue</tt>
, <tt>@AssertFalse</tt>
 are now evaluating the String representation of a value if it is not of type Boolean/boolean</li>
<li><tt>@AssertValid</tt>
 now recursively checks Arrays, Lists and Maps containing List, Map and Array items</li>
<li>renamed method <tt>Validator.validateField(...)</tt>
 to <tt>Validator.validateFieldValue(...)</tt>
</li>
</ul>
</div>
</div>
<div class="section"><h3>Version 1.0 (2007-07-22)</h3>
<div class="section"><h4>New Features</h4>
<ul><li>New constraint <tt>@NotBlank</tt>
</li>
<li>Support for OGNL and MVEL as constraint expression language</li>
</ul>
</div>
<div class="section"><h4>Migration Notes (0.9 to 1.0)</h4>
<ul><li><tt>Validator.setMessageResolver</tt>
 and <tt>Validator.getMessageResolver</tt>
 are now static, this means the same message resolver instance is used with all Validator/Guard instances. </li>
<li>Class <tt>net.sf.oval.collection.CollectionFactoryHolder</tt>
 has been moved to package <tt>net.sf.oval.internal</tt>
. This class should not be used directly, the collection factory in use can be retrieved via the static method <tt>Validator.getCollectionFactory</tt>
 and set with the static method <tt>Validator.setCollectionFactory</tt>
.</li>
<li><tt>@Guarded.applyFieldConstraintsToSetter</tt>
 has been renamed to <tt>@Guarded.applyFieldConstraintsToSetters</tt>
</li>
<li>JPAAnnotationsConfigurer constraint mappings extended:<br />
<tt>@javax.persistence.OneToOne =&gt; @net.sf.oval.constraints.AssertValid<br />
@javax.persistence.OneToMany =&gt; @net.sf.oval.constraints.AssertValid<br />
@javax.persistence.ManyToOne =&gt; @net.sf.oval.constraints.AssertValid</tt>
</li>
</ul>
</div>
</div>
<div class="section"><h3>Version 0.9 (2007-03-18)</h3>
<div class="section"><h4>New Features</h4>
<ul><li>Scripting Support (Groovy, JavaScript, BeanShell) for class invariants, Pre- and Postconditions (<tt>@Assert, @Pre, @Post</tt>
)</li>
<li>Automatic check of class invariants on calls to all non-private methods</li>
<li>Check of class invariants, pre-, postconditions can be separately enabled or disabled during runtime</li>
<li>New constraints: <tt>@CheckWith, @Future, @HasSubstring, @Max, @MaxLength, @MaxSize, @Min, @MinLength, @MinSize, @Past</tt>
</li>
<li>validating/guarding of static fields and methods is now supported</li>
<li>introduced the concept of constraint profiles</li>
<li>added <tt>Guard.setExceptionTranslator()</tt>
 allowing you to change the type of exception that is thrown on constraint violations</li>
</ul>
</div>
<div class="section"><h4>Migration Notes (0.8 to 0.9)</h4>
<p>In the attempt to add all the new features and to make OVal 1.0 release ready, a large part of OVal's code base has been refactored. </p>
<p>This led to certain changes in the API:</p>
<ul><li>Packages with names in plural have been changed to singular (e.g. net.sf.oval.constraints =&gt; net.sf.oval.constraint)</li>
<li>Everything related to programming by contract has been moved into a new package called net.sf.oval.guard. This includes ConstraintsViolatedListener, GuardAspect, Guard, @PreValidateThis, @PostValidateThis and others.</li>
<li>The Guard class now extends the Validator class, therefore the Guard.getValidator() method has been removed.</li>
<li>For class invariants are now checked by default for guarded classes on every call to non-private methods. If you require the old behaviour you can disable automatic invariant checking via <tt>MyGuardAspect.aspectOf().getGuard().setInvariantCheckingActivated(false)</tt>
</li>
<li>Getter methods now need to be annotated with @IsInvariant if their return value should be checked on a object validation via <tt>Validator.validate(Object)</tt>
</li>
<li>The Guard's setReportingMode() methods have been replaced with setInProbeMode methods.</li>
</ul>
</div>
</div>
<div class="section"><h3>OVal 0.1alpha (2005-08-17) </h3>
<p>initial release</p>
</div>
</div>

      </div>
    </div>
    <div class="clear">
      <hr/>
    </div>
    <div id="footer">
      <div class="xright">&#169;  
          2005-2009
    
          The OVal Development Team
          
  

  
    
            
  
    
  </div>
      <div class="clear">
        <hr/>
      </div>
    </div>
  </body>
</html>
