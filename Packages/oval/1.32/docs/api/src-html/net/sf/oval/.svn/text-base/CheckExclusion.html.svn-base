<HTML>
<BODY BGCOLOR="white">
<PRE>
<FONT color="green">001</FONT>    /*******************************************************************************<a name="line.1"></a>
<FONT color="green">002</FONT>     * Portions created by Sebastian Thomschke are copyright (c) 2005-2009 Sebastian<a name="line.2"></a>
<FONT color="green">003</FONT>     * Thomschke.<a name="line.3"></a>
<FONT color="green">004</FONT>     * <a name="line.4"></a>
<FONT color="green">005</FONT>     * All Rights Reserved. This program and the accompanying materials<a name="line.5"></a>
<FONT color="green">006</FONT>     * are made available under the terms of the Eclipse Public License v1.0<a name="line.6"></a>
<FONT color="green">007</FONT>     * which accompanies this distribution, and is available at<a name="line.7"></a>
<FONT color="green">008</FONT>     * http://www.eclipse.org/legal/epl-v10.html<a name="line.8"></a>
<FONT color="green">009</FONT>     * <a name="line.9"></a>
<FONT color="green">010</FONT>     * Contributors:<a name="line.10"></a>
<FONT color="green">011</FONT>     *     Sebastian Thomschke - initial implementation.<a name="line.11"></a>
<FONT color="green">012</FONT>     *******************************************************************************/<a name="line.12"></a>
<FONT color="green">013</FONT>    package net.sf.oval;<a name="line.13"></a>
<FONT color="green">014</FONT>    <a name="line.14"></a>
<FONT color="green">015</FONT>    import java.io.Serializable;<a name="line.15"></a>
<FONT color="green">016</FONT>    <a name="line.16"></a>
<FONT color="green">017</FONT>    import net.sf.oval.context.OValContext;<a name="line.17"></a>
<FONT color="green">018</FONT>    import net.sf.oval.exception.OValException;<a name="line.18"></a>
<FONT color="green">019</FONT>    <a name="line.19"></a>
<FONT color="green">020</FONT>    /**<a name="line.20"></a>
<FONT color="green">021</FONT>     * interface for classes that can exclude the checking of constraints<a name="line.21"></a>
<FONT color="green">022</FONT>     * <a name="line.22"></a>
<FONT color="green">023</FONT>     * @author Sebastian Thomschke<a name="line.23"></a>
<FONT color="green">024</FONT>     */<a name="line.24"></a>
<FONT color="green">025</FONT>    public interface CheckExclusion extends Serializable<a name="line.25"></a>
<FONT color="green">026</FONT>    {<a name="line.26"></a>
<FONT color="green">027</FONT>            /**<a name="line.27"></a>
<FONT color="green">028</FONT>             * @return the profiles, may return null<a name="line.28"></a>
<FONT color="green">029</FONT>             */<a name="line.29"></a>
<FONT color="green">030</FONT>            String[] getProfiles();<a name="line.30"></a>
<FONT color="green">031</FONT>    <a name="line.31"></a>
<FONT color="green">032</FONT>            /**<a name="line.32"></a>
<FONT color="green">033</FONT>             * This method implements the validation logic<a name="line.33"></a>
<FONT color="green">034</FONT>             * <a name="line.34"></a>
<FONT color="green">035</FONT>             * @param check a check that OVal is about to validate<a name="line.35"></a>
<FONT color="green">036</FONT>             * @param validatedObject the object/bean to validate the value against, for static fields or methods this is <a name="line.36"></a>
<FONT color="green">037</FONT>             * the class<a name="line.37"></a>
<FONT color="green">038</FONT>             * @param valueToValidate the value to validate, may be null when validating pre conditions for static methods<a name="line.38"></a>
<FONT color="green">039</FONT>             * @param context the validation context (e.g. a field, a constructor parameter or a method parameter)<a name="line.39"></a>
<FONT color="green">040</FONT>             * @param validator the calling validator<a name="line.40"></a>
<FONT color="green">041</FONT>             * @return true if the value satisfies the checked constraint<a name="line.41"></a>
<FONT color="green">042</FONT>             */<a name="line.42"></a>
<FONT color="green">043</FONT>            boolean isCheckExcluded(Check check, Object validatedObject, Object valueToValidate, OValContext context,<a name="line.43"></a>
<FONT color="green">044</FONT>                            Validator validator) throws OValException;<a name="line.44"></a>
<FONT color="green">045</FONT>    <a name="line.45"></a>
<FONT color="green">046</FONT>            /**<a name="line.46"></a>
<FONT color="green">047</FONT>             * @param profiles the profiles to set<a name="line.47"></a>
<FONT color="green">048</FONT>             */<a name="line.48"></a>
<FONT color="green">049</FONT>            void setProfiles(String... profiles);<a name="line.49"></a>
<FONT color="green">050</FONT>    }<a name="line.50"></a>




























































</PRE>
</BODY>
</HTML>
