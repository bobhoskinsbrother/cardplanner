<HTML>
<BODY BGCOLOR="white">
<PRE>
<FONT color="green">001</FONT>    /*******************************************************************************<a name="line.1"></a>
<FONT color="green">002</FONT>     * Portions created by Sebastian Thomschke are copyright (c) 2005-2009 Sebastian<a name="line.2"></a>
<FONT color="green">003</FONT>     * Thomschke.<a name="line.3"></a>
<FONT color="green">004</FONT>     * <a name="line.4"></a>
<FONT color="green">005</FONT>     * All Rights Reserved. This program and the accompanying materials<a name="line.5"></a>
<FONT color="green">006</FONT>     * are made available under the terms of the Eclipse Public License v1.0<a name="line.6"></a>
<FONT color="green">007</FONT>     * which accompanies this distribution, and is available at<a name="line.7"></a>
<FONT color="green">008</FONT>     * http://www.eclipse.org/legal/epl-v10.html<a name="line.8"></a>
<FONT color="green">009</FONT>     * <a name="line.9"></a>
<FONT color="green">010</FONT>     * Contributors:<a name="line.10"></a>
<FONT color="green">011</FONT>     *     Sebastian Thomschke - initial implementation.<a name="line.11"></a>
<FONT color="green">012</FONT>     *******************************************************************************/<a name="line.12"></a>
<FONT color="green">013</FONT>    package net.sf.oval.localization.context;<a name="line.13"></a>
<FONT color="green">014</FONT>    <a name="line.14"></a>
<FONT color="green">015</FONT>    import java.util.Enumeration;<a name="line.15"></a>
<FONT color="green">016</FONT>    import java.util.MissingResourceException;<a name="line.16"></a>
<FONT color="green">017</FONT>    import java.util.ResourceBundle;<a name="line.17"></a>
<FONT color="green">018</FONT>    <a name="line.18"></a>
<FONT color="green">019</FONT>    import net.sf.oval.context.ClassContext;<a name="line.19"></a>
<FONT color="green">020</FONT>    import net.sf.oval.context.ConstructorParameterContext;<a name="line.20"></a>
<FONT color="green">021</FONT>    import net.sf.oval.context.FieldContext;<a name="line.21"></a>
<FONT color="green">022</FONT>    import net.sf.oval.context.MethodEntryContext;<a name="line.22"></a>
<FONT color="green">023</FONT>    import net.sf.oval.context.MethodExitContext;<a name="line.23"></a>
<FONT color="green">024</FONT>    import net.sf.oval.context.MethodParameterContext;<a name="line.24"></a>
<FONT color="green">025</FONT>    import net.sf.oval.context.MethodReturnValueContext;<a name="line.25"></a>
<FONT color="green">026</FONT>    import net.sf.oval.context.OValContext;<a name="line.26"></a>
<FONT color="green">027</FONT>    import net.sf.oval.internal.Log;<a name="line.27"></a>
<FONT color="green">028</FONT>    <a name="line.28"></a>
<FONT color="green">029</FONT>    /**<a name="line.29"></a>
<FONT color="green">030</FONT>     * This renderer searches for a resource file that is in the same package and has the same name as the validated class.<a name="line.30"></a>
<FONT color="green">031</FONT>     * It then tries to lookup a localized version of the validation context, e.g.&lt;br&gt;<a name="line.31"></a>
<FONT color="green">032</FONT>     * &lt;b&gt;com.acme.model.Person.java&lt;br&gt;<a name="line.32"></a>
<FONT color="green">033</FONT>     * com.acme.model.Person.properties&lt;br&gt;<a name="line.33"></a>
<FONT color="green">034</FONT>     * com.acme.model.Person_de.properties&lt;br&gt;<a name="line.34"></a>
<FONT color="green">035</FONT>     * com.acme.model.Person_fr.properties&lt;/b&gt;<a name="line.35"></a>
<FONT color="green">036</FONT>     * <a name="line.36"></a>
<FONT color="green">037</FONT>     * &lt;p&gt;<a name="line.37"></a>
<FONT color="green">038</FONT>     * The properties file is expected to have values following this scheme<a name="line.38"></a>
<FONT color="green">039</FONT>     * &lt;pre&gt;<a name="line.39"></a>
<FONT color="green">040</FONT>     * label.class=My translated name of the class<a name="line.40"></a>
<FONT color="green">041</FONT>     * label.field.firstname=My translated name of firstname<a name="line.41"></a>
<FONT color="green">042</FONT>     * label.field.lastname=My translated name of lastname<a name="line.42"></a>
<FONT color="green">043</FONT>     * label.parameter.amount=My translated name of a constructor/method amount<a name="line.43"></a>
<FONT color="green">044</FONT>     * label.method.increase=My translated name of the increase<a name="line.44"></a>
<FONT color="green">045</FONT>     * &lt;/pre&gt;<a name="line.45"></a>
<FONT color="green">046</FONT>     * @author Sebastian Thomschke<a name="line.46"></a>
<FONT color="green">047</FONT>     */<a name="line.47"></a>
<FONT color="green">048</FONT>    public class ResourceBundleValidationContextRenderer implements OValContextRenderer<a name="line.48"></a>
<FONT color="green">049</FONT>    {<a name="line.49"></a>
<FONT color="green">050</FONT>            private static final Log  LOG = Log.getLog(ResourceBundleValidationContextRenderer.class);<a name="line.50"></a>
<FONT color="green">051</FONT>    <a name="line.51"></a>
<FONT color="green">052</FONT>            public static final ResourceBundleValidationContextRenderer INSTANCE = new ResourceBundleValidationContextRenderer();<a name="line.52"></a>
<FONT color="green">053</FONT>    <a name="line.53"></a>
<FONT color="green">054</FONT>            private boolean containsKey(final ResourceBundle bundle, final String key)<a name="line.54"></a>
<FONT color="green">055</FONT>            {<a name="line.55"></a>
<FONT color="green">056</FONT>                    for (final Enumeration&lt;String&gt; en = bundle.getKeys(); en.hasMoreElements();)<a name="line.56"></a>
<FONT color="green">057</FONT>                    {<a name="line.57"></a>
<FONT color="green">058</FONT>                            if (en.nextElement().equals(key)) return true;<a name="line.58"></a>
<FONT color="green">059</FONT>                    }<a name="line.59"></a>
<FONT color="green">060</FONT>                    return false;<a name="line.60"></a>
<FONT color="green">061</FONT>            }<a name="line.61"></a>
<FONT color="green">062</FONT>    <a name="line.62"></a>
<FONT color="green">063</FONT>            /**<a name="line.63"></a>
<FONT color="green">064</FONT>             * {@inheritDoc}<a name="line.64"></a>
<FONT color="green">065</FONT>             */<a name="line.65"></a>
<FONT color="green">066</FONT>            public String render(final OValContext ovalContext)<a name="line.66"></a>
<FONT color="green">067</FONT>            {<a name="line.67"></a>
<FONT color="green">068</FONT>                    final String baseName;<a name="line.68"></a>
<FONT color="green">069</FONT>                    final String key;<a name="line.69"></a>
<FONT color="green">070</FONT>                    if (ovalContext instanceof ClassContext)<a name="line.70"></a>
<FONT color="green">071</FONT>                    {<a name="line.71"></a>
<FONT color="green">072</FONT>                            final ClassContext ctx = (ClassContext) ovalContext;<a name="line.72"></a>
<FONT color="green">073</FONT>                            baseName = ctx.getClazz().getName();<a name="line.73"></a>
<FONT color="green">074</FONT>                            key = "label.class";<a name="line.74"></a>
<FONT color="green">075</FONT>                    }<a name="line.75"></a>
<FONT color="green">076</FONT>                    else if (ovalContext instanceof FieldContext)<a name="line.76"></a>
<FONT color="green">077</FONT>                    {<a name="line.77"></a>
<FONT color="green">078</FONT>                            final FieldContext ctx = (FieldContext) ovalContext;<a name="line.78"></a>
<FONT color="green">079</FONT>                            baseName = ctx.getField().getDeclaringClass().getName();<a name="line.79"></a>
<FONT color="green">080</FONT>                            final String fieldName = ctx.getField().getName();<a name="line.80"></a>
<FONT color="green">081</FONT>                            key = "label.field." + fieldName;<a name="line.81"></a>
<FONT color="green">082</FONT>                    }<a name="line.82"></a>
<FONT color="green">083</FONT>                    else if (ovalContext instanceof ConstructorParameterContext)<a name="line.83"></a>
<FONT color="green">084</FONT>                    {<a name="line.84"></a>
<FONT color="green">085</FONT>                            final ConstructorParameterContext ctx = (ConstructorParameterContext) ovalContext;<a name="line.85"></a>
<FONT color="green">086</FONT>                            baseName = ctx.getConstructor().getDeclaringClass().getName();<a name="line.86"></a>
<FONT color="green">087</FONT>                            key = "label.parameter." + ctx.getParameterName();<a name="line.87"></a>
<FONT color="green">088</FONT>                    }<a name="line.88"></a>
<FONT color="green">089</FONT>                    else if (ovalContext instanceof MethodParameterContext)<a name="line.89"></a>
<FONT color="green">090</FONT>                    {<a name="line.90"></a>
<FONT color="green">091</FONT>                            final MethodParameterContext ctx = (MethodParameterContext) ovalContext;<a name="line.91"></a>
<FONT color="green">092</FONT>                            baseName = ctx.getMethod().getDeclaringClass().getName();<a name="line.92"></a>
<FONT color="green">093</FONT>                            key = "label.parameter." + ctx.getParameterName();<a name="line.93"></a>
<FONT color="green">094</FONT>                    }<a name="line.94"></a>
<FONT color="green">095</FONT>                    else if (ovalContext instanceof MethodEntryContext)<a name="line.95"></a>
<FONT color="green">096</FONT>                    {<a name="line.96"></a>
<FONT color="green">097</FONT>                            final MethodEntryContext ctx = (MethodEntryContext) ovalContext;<a name="line.97"></a>
<FONT color="green">098</FONT>                            baseName = ctx.getMethod().getDeclaringClass().getName();<a name="line.98"></a>
<FONT color="green">099</FONT>                            key = "label.method." + ctx.getMethod().getName();<a name="line.99"></a>
<FONT color="green">100</FONT>                    }<a name="line.100"></a>
<FONT color="green">101</FONT>                    else if (ovalContext instanceof MethodExitContext)<a name="line.101"></a>
<FONT color="green">102</FONT>                    {<a name="line.102"></a>
<FONT color="green">103</FONT>                            final MethodExitContext ctx = (MethodExitContext) ovalContext;<a name="line.103"></a>
<FONT color="green">104</FONT>                            baseName = ctx.getMethod().getDeclaringClass().getName();<a name="line.104"></a>
<FONT color="green">105</FONT>                            key = "label.method." + ctx.getMethod().getName();<a name="line.105"></a>
<FONT color="green">106</FONT>                    }<a name="line.106"></a>
<FONT color="green">107</FONT>                    else if (ovalContext instanceof MethodReturnValueContext)<a name="line.107"></a>
<FONT color="green">108</FONT>                    {<a name="line.108"></a>
<FONT color="green">109</FONT>                            final MethodReturnValueContext ctx = (MethodReturnValueContext) ovalContext;<a name="line.109"></a>
<FONT color="green">110</FONT>                            baseName = ctx.getMethod().getDeclaringClass().getName();<a name="line.110"></a>
<FONT color="green">111</FONT>                            key = "label.method." + ctx.getMethod().getName();<a name="line.111"></a>
<FONT color="green">112</FONT>                    }<a name="line.112"></a>
<FONT color="green">113</FONT>                    else<a name="line.113"></a>
<FONT color="green">114</FONT>                            return ovalContext.toString();<a name="line.114"></a>
<FONT color="green">115</FONT>    <a name="line.115"></a>
<FONT color="green">116</FONT>                    try<a name="line.116"></a>
<FONT color="green">117</FONT>                    {<a name="line.117"></a>
<FONT color="green">118</FONT>                            final ResourceBundle bundle = ResourceBundle.getBundle(baseName);<a name="line.118"></a>
<FONT color="green">119</FONT>                            if (containsKey(bundle, key)) return bundle.getString(key);<a name="line.119"></a>
<FONT color="green">120</FONT>                            LOG.debug("Key {1} not found in bundle {2}", key, baseName);<a name="line.120"></a>
<FONT color="green">121</FONT>                    }<a name="line.121"></a>
<FONT color="green">122</FONT>                    catch (final MissingResourceException ex)<a name="line.122"></a>
<FONT color="green">123</FONT>                    {<a name="line.123"></a>
<FONT color="green">124</FONT>                            LOG.debug("Bundle {1} not found", baseName, ex);<a name="line.124"></a>
<FONT color="green">125</FONT>                    }<a name="line.125"></a>
<FONT color="green">126</FONT>                    return ovalContext.toString();<a name="line.126"></a>
<FONT color="green">127</FONT>            }<a name="line.127"></a>
<FONT color="green">128</FONT>    }<a name="line.128"></a>




























































</PRE>
</BODY>
</HTML>
