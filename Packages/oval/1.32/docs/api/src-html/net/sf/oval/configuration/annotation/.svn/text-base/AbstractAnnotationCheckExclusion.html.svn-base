<HTML>
<BODY BGCOLOR="white">
<PRE>
<FONT color="green">001</FONT>    /*******************************************************************************<a name="line.1"></a>
<FONT color="green">002</FONT>     * Portions created by Sebastian Thomschke are copyright (c) 2005-2009 Sebastian<a name="line.2"></a>
<FONT color="green">003</FONT>     * Thomschke.<a name="line.3"></a>
<FONT color="green">004</FONT>     * <a name="line.4"></a>
<FONT color="green">005</FONT>     * All Rights Reserved. This program and the accompanying materials<a name="line.5"></a>
<FONT color="green">006</FONT>     * are made available under the terms of the Eclipse Public License v1.0<a name="line.6"></a>
<FONT color="green">007</FONT>     * which accompanies this distribution, and is available at<a name="line.7"></a>
<FONT color="green">008</FONT>     * http://www.eclipse.org/legal/epl-v10.html<a name="line.8"></a>
<FONT color="green">009</FONT>     * <a name="line.9"></a>
<FONT color="green">010</FONT>     * Contributors:<a name="line.10"></a>
<FONT color="green">011</FONT>     *     Sebastian Thomschke - initial implementation.<a name="line.11"></a>
<FONT color="green">012</FONT>     *******************************************************************************/<a name="line.12"></a>
<FONT color="green">013</FONT>    package net.sf.oval.configuration.annotation;<a name="line.13"></a>
<FONT color="green">014</FONT>    <a name="line.14"></a>
<FONT color="green">015</FONT>    import java.lang.annotation.Annotation;<a name="line.15"></a>
<FONT color="green">016</FONT>    import java.lang.reflect.Method;<a name="line.16"></a>
<FONT color="green">017</FONT>    <a name="line.17"></a>
<FONT color="green">018</FONT>    import net.sf.oval.AbstractCheckExclusion;<a name="line.18"></a>
<FONT color="green">019</FONT>    import net.sf.oval.internal.Log;<a name="line.19"></a>
<FONT color="green">020</FONT>    <a name="line.20"></a>
<FONT color="green">021</FONT>    /**<a name="line.21"></a>
<FONT color="green">022</FONT>     * Partial implementation of check exclusion classes configurable via annotations.<a name="line.22"></a>
<FONT color="green">023</FONT>     * <a name="line.23"></a>
<FONT color="green">024</FONT>     * @author Sebastian Thomschke<a name="line.24"></a>
<FONT color="green">025</FONT>     */<a name="line.25"></a>
<FONT color="green">026</FONT>    public abstract class AbstractAnnotationCheckExclusion&lt;ExclusionAnnotation extends Annotation&gt;<a name="line.26"></a>
<FONT color="green">027</FONT>                    extends<a name="line.27"></a>
<FONT color="green">028</FONT>                            AbstractCheckExclusion implements AnnotationCheckExclusion&lt;ExclusionAnnotation&gt;<a name="line.28"></a>
<FONT color="green">029</FONT>    {<a name="line.29"></a>
<FONT color="green">030</FONT>            private static final long serialVersionUID = 1L;<a name="line.30"></a>
<FONT color="green">031</FONT>    <a name="line.31"></a>
<FONT color="green">032</FONT>            private static final Log LOG = Log.getLog(AbstractAnnotationCheckExclusion.class);<a name="line.32"></a>
<FONT color="green">033</FONT>    <a name="line.33"></a>
<FONT color="green">034</FONT>            /**<a name="line.34"></a>
<FONT color="green">035</FONT>             * {@inheritDoc}<a name="line.35"></a>
<FONT color="green">036</FONT>             */<a name="line.36"></a>
<FONT color="green">037</FONT>            public void configure(final ExclusionAnnotation exclusionAnnotation)<a name="line.37"></a>
<FONT color="green">038</FONT>            {<a name="line.38"></a>
<FONT color="green">039</FONT>                    final Class&lt; ? &gt; exclusionClazz = exclusionAnnotation.getClass();<a name="line.39"></a>
<FONT color="green">040</FONT>    <a name="line.40"></a>
<FONT color="green">041</FONT>                    /*<a name="line.41"></a>
<FONT color="green">042</FONT>                     * Retrieve the profiles value from the constraint annotation via reflection.<a name="line.42"></a>
<FONT color="green">043</FONT>                     */<a name="line.43"></a>
<FONT color="green">044</FONT>                    try<a name="line.44"></a>
<FONT color="green">045</FONT>                    {<a name="line.45"></a>
<FONT color="green">046</FONT>                            final Method getProfiles = exclusionClazz.getDeclaredMethod("profiles", (Class&lt; ? &gt;[]) null);<a name="line.46"></a>
<FONT color="green">047</FONT>                            profiles = (String[]) getProfiles.invoke(exclusionAnnotation, (Object[]) null);<a name="line.47"></a>
<FONT color="green">048</FONT>                    }<a name="line.48"></a>
<FONT color="green">049</FONT>                    catch (final Exception e)<a name="line.49"></a>
<FONT color="green">050</FONT>                    {<a name="line.50"></a>
<FONT color="green">051</FONT>                            LOG.debug("Cannot determine constraint profiles based on annotation {1}", exclusionClazz.getName(), e);<a name="line.51"></a>
<FONT color="green">052</FONT>                    }<a name="line.52"></a>
<FONT color="green">053</FONT>            }<a name="line.53"></a>
<FONT color="green">054</FONT>    }<a name="line.54"></a>




























































</PRE>
</BODY>
</HTML>
