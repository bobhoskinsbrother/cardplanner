<HTML>
<BODY BGCOLOR="white">
<PRE>
<FONT color="green">001</FONT>    /*******************************************************************************<a name="line.1"></a>
<FONT color="green">002</FONT>     * Portions created by Sebastian Thomschke are copyright (c) 2005-2009 Sebastian<a name="line.2"></a>
<FONT color="green">003</FONT>     * Thomschke.<a name="line.3"></a>
<FONT color="green">004</FONT>     * <a name="line.4"></a>
<FONT color="green">005</FONT>     * All Rights Reserved. This program and the accompanying materials<a name="line.5"></a>
<FONT color="green">006</FONT>     * are made available under the terms of the Eclipse Public License v1.0<a name="line.6"></a>
<FONT color="green">007</FONT>     * which accompanies this distribution, and is available at<a name="line.7"></a>
<FONT color="green">008</FONT>     * http://www.eclipse.org/legal/epl-v10.html<a name="line.8"></a>
<FONT color="green">009</FONT>     * <a name="line.9"></a>
<FONT color="green">010</FONT>     * Contributors:<a name="line.10"></a>
<FONT color="green">011</FONT>     *     Sebastian Thomschke - initial implementation.<a name="line.11"></a>
<FONT color="green">012</FONT>     *******************************************************************************/<a name="line.12"></a>
<FONT color="green">013</FONT>    package net.sf.oval;<a name="line.13"></a>
<FONT color="green">014</FONT>    <a name="line.14"></a>
<FONT color="green">015</FONT>    import java.io.Serializable;<a name="line.15"></a>
<FONT color="green">016</FONT>    import java.util.Map;<a name="line.16"></a>
<FONT color="green">017</FONT>    <a name="line.17"></a>
<FONT color="green">018</FONT>    import net.sf.oval.context.OValContext;<a name="line.18"></a>
<FONT color="green">019</FONT>    import net.sf.oval.exception.OValException;<a name="line.19"></a>
<FONT color="green">020</FONT>    <a name="line.20"></a>
<FONT color="green">021</FONT>    /**<a name="line.21"></a>
<FONT color="green">022</FONT>     * interface for classes that can check/validate if a constraint is satisfied<a name="line.22"></a>
<FONT color="green">023</FONT>     * <a name="line.23"></a>
<FONT color="green">024</FONT>     * @author Sebastian Thomschke<a name="line.24"></a>
<FONT color="green">025</FONT>     */<a name="line.25"></a>
<FONT color="green">026</FONT>    public interface Check extends Serializable<a name="line.26"></a>
<FONT color="green">027</FONT>    {<a name="line.27"></a>
<FONT color="green">028</FONT>            /**<a name="line.28"></a>
<FONT color="green">029</FONT>             * @return the error code that will be used in a corresponding ConstraintViolation object<a name="line.29"></a>
<FONT color="green">030</FONT>             */<a name="line.30"></a>
<FONT color="green">031</FONT>            String getErrorCode();<a name="line.31"></a>
<FONT color="green">032</FONT>    <a name="line.32"></a>
<FONT color="green">033</FONT>            /** <a name="line.33"></a>
<FONT color="green">034</FONT>             * gets the default message that is displayed if a corresponding message key<a name="line.34"></a>
<FONT color="green">035</FONT>             * is not found in the messages properties file<a name="line.35"></a>
<FONT color="green">036</FONT>             * &lt;br&gt;<a name="line.36"></a>
<FONT color="green">037</FONT>             * default processed place holders are:<a name="line.37"></a>
<FONT color="green">038</FONT>             * &lt;ul&gt;<a name="line.38"></a>
<FONT color="green">039</FONT>             * &lt;li&gt;{context} =&gt; specifies which getter, method parameter or field was validated<a name="line.39"></a>
<FONT color="green">040</FONT>             * &lt;li&gt;{invalidValue} =&gt; string representation of the validated value<a name="line.40"></a>
<FONT color="green">041</FONT>             * &lt;/ul&gt;<a name="line.41"></a>
<FONT color="green">042</FONT>             */<a name="line.42"></a>
<FONT color="green">043</FONT>            String getMessage();<a name="line.43"></a>
<FONT color="green">044</FONT>    <a name="line.44"></a>
<FONT color="green">045</FONT>            /**<a name="line.45"></a>
<FONT color="green">046</FONT>             * values that are used to fill place holders when rendering the error message.<a name="line.46"></a>
<FONT color="green">047</FONT>             * A key "min" with a value "4" will replace the place holder {min} in an error message<a name="line.47"></a>
<FONT color="green">048</FONT>             * like "Value cannot be smaller than {min}" with the string "4".<a name="line.48"></a>
<FONT color="green">049</FONT>             */<a name="line.49"></a>
<FONT color="green">050</FONT>            Map&lt;String, String&gt; getMessageVariables();<a name="line.50"></a>
<FONT color="green">051</FONT>    <a name="line.51"></a>
<FONT color="green">052</FONT>            /**<a name="line.52"></a>
<FONT color="green">053</FONT>             * @return the profiles, may return null<a name="line.53"></a>
<FONT color="green">054</FONT>             */<a name="line.54"></a>
<FONT color="green">055</FONT>            String[] getProfiles();<a name="line.55"></a>
<FONT color="green">056</FONT>    <a name="line.56"></a>
<FONT color="green">057</FONT>            /**<a name="line.57"></a>
<FONT color="green">058</FONT>             * @return the severity<a name="line.58"></a>
<FONT color="green">059</FONT>             */<a name="line.59"></a>
<FONT color="green">060</FONT>            int getSeverity();<a name="line.60"></a>
<FONT color="green">061</FONT>    <a name="line.61"></a>
<FONT color="green">062</FONT>            /**<a name="line.62"></a>
<FONT color="green">063</FONT>             * This method implements the validation logic<a name="line.63"></a>
<FONT color="green">064</FONT>             * <a name="line.64"></a>
<FONT color="green">065</FONT>             * @param validatedObject the object/bean to validate the value against, for static fields or methods this is the class<a name="line.65"></a>
<FONT color="green">066</FONT>             * @param valueToValidate the value to validate, may be null when validating pre conditions for static methods<a name="line.66"></a>
<FONT color="green">067</FONT>             * @param context the validation context (e.g. a field, a constructor parameter or a method parameter)<a name="line.67"></a>
<FONT color="green">068</FONT>             * @param validator the calling validator<a name="line.68"></a>
<FONT color="green">069</FONT>             * @return true if the value satisfies the checked constraint<a name="line.69"></a>
<FONT color="green">070</FONT>             */<a name="line.70"></a>
<FONT color="green">071</FONT>            boolean isSatisfied(Object validatedObject, Object valueToValidate, OValContext context,<a name="line.71"></a>
<FONT color="green">072</FONT>                            Validator validator) throws OValException;<a name="line.72"></a>
<FONT color="green">073</FONT>    <a name="line.73"></a>
<FONT color="green">074</FONT>            /**<a name="line.74"></a>
<FONT color="green">075</FONT>             * @param errorCode the error code to set<a name="line.75"></a>
<FONT color="green">076</FONT>             */<a name="line.76"></a>
<FONT color="green">077</FONT>            void setErrorCode(String errorCode);<a name="line.77"></a>
<FONT color="green">078</FONT>    <a name="line.78"></a>
<FONT color="green">079</FONT>            /**<a name="line.79"></a>
<FONT color="green">080</FONT>             * sets the default message that is displayed if a corresponding message key<a name="line.80"></a>
<FONT color="green">081</FONT>             * is not found in the messages properties file<a name="line.81"></a>
<FONT color="green">082</FONT>             * <a name="line.82"></a>
<FONT color="green">083</FONT>             * &lt;br&gt;<a name="line.83"></a>
<FONT color="green">084</FONT>             * default processed place holders are:<a name="line.84"></a>
<FONT color="green">085</FONT>             * &lt;ul&gt;<a name="line.85"></a>
<FONT color="green">086</FONT>             * &lt;li&gt;{context} =&gt; specifies which getter, method parameter or field was validated<a name="line.86"></a>
<FONT color="green">087</FONT>             * &lt;li&gt;{invalidValue} =&gt; string representation of the validated value<a name="line.87"></a>
<FONT color="green">088</FONT>             * &lt;/ul&gt;<a name="line.88"></a>
<FONT color="green">089</FONT>             */<a name="line.89"></a>
<FONT color="green">090</FONT>            void setMessage(String message);<a name="line.90"></a>
<FONT color="green">091</FONT>    <a name="line.91"></a>
<FONT color="green">092</FONT>            /**<a name="line.92"></a>
<FONT color="green">093</FONT>             * @param profiles the profiles to set<a name="line.93"></a>
<FONT color="green">094</FONT>             */<a name="line.94"></a>
<FONT color="green">095</FONT>            void setProfiles(String... profiles);<a name="line.95"></a>
<FONT color="green">096</FONT>    <a name="line.96"></a>
<FONT color="green">097</FONT>            /**<a name="line.97"></a>
<FONT color="green">098</FONT>             * @param severity the severity to set<a name="line.98"></a>
<FONT color="green">099</FONT>             */<a name="line.99"></a>
<FONT color="green">100</FONT>            void setSeverity(int severity);<a name="line.100"></a>
<FONT color="green">101</FONT>    }<a name="line.101"></a>




























































</PRE>
</BODY>
</HTML>
