msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"Report-Msgid-Bugs-To: http://bugs.kde.org\n"
"POT-Creation-Date: 2009-06-10 21:02+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#. Tag: title
#: events.xml:29
#, no-c-format
msgid "Interceptors and events"
msgstr "インターセプタとイベント"

#. Tag: para
#: events.xml:31
#, fuzzy, no-c-format
msgid ""
"It is useful for the application to react to certain events that occur "
"inside Hibernate. This allows for the implementation of generic "
"functionality and the extension of Hibernate functionality."
msgstr ""
"アプリケーションがHibernateの内部で発生するイベントに対応できると役に立つこと"
"があります。 ある種の一般的な機能を実装できるようになり、 またHibernateの機能"
"を拡張することもできるようになります。"

#. Tag: title
#: events.xml:38
#, no-c-format
msgid "Interceptors"
msgstr "インターセプタ"

#. Tag: para
#: events.xml:40
#, fuzzy, no-c-format
msgid ""
"The <literal>Interceptor</literal> interface provides callbacks from the "
"session to the application, allowing the application to inspect and/or "
"manipulate properties of a persistent object before it is saved, updated, "
"deleted or loaded. One possible use for this is to track auditing "
"information. For example, the following <literal>Interceptor</literal> "
"automatically sets the <literal>createTimestamp</literal> when an "
"<literal>Auditable</literal> is created and updates the "
"<literal>lastUpdateTimestamp</literal> property when an <literal>Auditable</"
"literal> is updated."
msgstr ""
"<literal>Interceptor</literal> インターフェイスを使って、 セッションからアプ"
"リケーションへコールバックをすることができます。 これにより永続オブジェクトの"
"保存、更新、削除、読み込みの前に、 アプリケーションがプロパティを検査したり操"
"作したりできるようになります。 これは監査情報の追跡に利用できます。 下の例で "
"<literal>Interceptor</literal> は <literal>Auditable</literal> が作成されると"
"自動的に <literal>createTimestamp</literal> を設定し、 <literal>Auditable</"
"literal> が更新されると自動的に <literal>lastUpdateTimestamp</literal> プロパ"
"ティを更新します。"

#. Tag: para
#: events.xml:51
#, fuzzy, no-c-format
msgid ""
"You can either implement <literal>Interceptor</literal> directly or extend "
"<literal>EmptyInterceptor</literal>."
msgstr ""
"<literal>Interceptor</literal> を直接実装したり、 （さらによいのは）"
"<literal>EmptyInterceptor</literal> を拡張したりできます。"

#. Tag: programlisting
#: events.xml:56
#, no-c-format
msgid ""
"<![CDATA[package org.hibernate.test;\n"
"\n"
"import java.io.Serializable;\n"
"import java.util.Date;\n"
"import java.util.Iterator;\n"
"\n"
"import org.hibernate.EmptyInterceptor;\n"
"import org.hibernate.Transaction;\n"
"import org.hibernate.type.Type;\n"
"\n"
"public class AuditInterceptor extends EmptyInterceptor {\n"
"\n"
"    private int updates;\n"
"    private int creates;\n"
"    private int loads;\n"
"\n"
"    public void onDelete(Object entity,\n"
"                         Serializable id,\n"
"                         Object[] state,\n"
"                         String[] propertyNames,\n"
"                         Type[] types) {\n"
"        // do nothing\n"
"    }\n"
"\n"
"    public boolean onFlushDirty(Object entity,\n"
"                                Serializable id,\n"
"                                Object[] currentState,\n"
"                                Object[] previousState,\n"
"                                String[] propertyNames,\n"
"                                Type[] types) {\n"
"\n"
"        if ( entity instanceof Auditable ) {\n"
"            updates++;\n"
"            for ( int i=0; i < propertyNames.length; i++ ) {\n"
"                if ( \"lastUpdateTimestamp\".equals( propertyNames[i] ) ) {\n"
"                    currentState[i] = new Date();\n"
"                    return true;\n"
"                }\n"
"            }\n"
"        }\n"
"        return false;\n"
"    }\n"
"\n"
"    public boolean onLoad(Object entity,\n"
"                          Serializable id,\n"
"                          Object[] state,\n"
"                          String[] propertyNames,\n"
"                          Type[] types) {\n"
"        if ( entity instanceof Auditable ) {\n"
"            loads++;\n"
"        }\n"
"        return false;\n"
"    }\n"
"\n"
"    public boolean onSave(Object entity,\n"
"                          Serializable id,\n"
"                          Object[] state,\n"
"                          String[] propertyNames,\n"
"                          Type[] types) {\n"
"\n"
"        if ( entity instanceof Auditable ) {\n"
"            creates++;\n"
"            for ( int i=0; i<propertyNames.length; i++ ) {\n"
"                if ( \"createTimestamp\".equals( propertyNames[i] ) ) {\n"
"                    state[i] = new Date();\n"
"                    return true;\n"
"                }\n"
"            }\n"
"        }\n"
"        return false;\n"
"    }\n"
"\n"
"    public void afterTransactionCompletion(Transaction tx) {\n"
"        if ( tx.wasCommitted() ) {\n"
"            System.out.println(\"Creations: \" + creates + \", Updates: \" + "
"updates, \"Loads: \" + loads);\n"
"        }\n"
"        updates=0;\n"
"        creates=0;\n"
"        loads=0;\n"
"    }\n"
"\n"
"}]]>"
msgstr ""

#. Tag: para
#: events.xml:58
#, fuzzy, no-c-format
msgid ""
"There are two kinds of inteceptors: <literal>Session</literal>-scoped and "
"<literal>SessionFactory</literal>-scoped."
msgstr ""
"インターセプタには二種類あります： <literal>Session</literal> スコープのもの"
"と <literal>SessionFactory</literal> スコープのものです。"

#. Tag: para
#: events.xml:63
#, no-c-format
msgid ""
"A <literal>Session</literal>-scoped interceptor is specified when a session "
"is opened using one of the overloaded SessionFactory.openSession() methods "
"accepting an <literal>Interceptor</literal>."
msgstr ""
"<literal>Session</literal> スコープのインターセプタは、 セッションをオープン"
"するときに指定します。 <literal>Interceptor</literal> を引数に取る"
"SessionFactory.openSession() のオーバーロードメソッドの一つを使います。"

#. Tag: programlisting
#: events.xml:69
#, no-c-format
msgid "<![CDATA[Session session = sf.openSession( new AuditInterceptor() );]]>"
msgstr ""

#. Tag: para
#: events.xml:71
#, fuzzy, no-c-format
msgid ""
"A <literal>SessionFactory</literal>-scoped interceptor is registered with "
"the <literal>Configuration</literal> object prior to building the "
"<literal>SessionFactory</literal>. Unless a session is opened explicitly "
"specifying the interceptor to use, the supplied interceptor will be applied "
"to all sessions opened from that <literal>SessionFactory</literal>. "
"<literal>SessionFactory</literal>-scoped interceptors must be thread safe. "
"Ensure that you do not store session-specific states, since multiple "
"sessions will use this interceptor potentially concurrently."
msgstr ""
"<literal>SessionFactory</literal> スコープのインターセプタは "
"<literal>Configuration</literal> オブジェクトを使って登録します。 これは "
"<literal>SessionFactory</literal> の構築よりも優先されます。 この場合、提供さ"
"れるインターセプタは <literal>SessionFactory</literal> からオープンされたすべ"
"てのセッションに適用されます。 これは使用するインターセプタを明示的に指定して"
"セッションをオープンしない限り、そうなります。 <literal>SessionFactory</"
"literal> スコープのインターセプタはスレッドセーフでなければなりません。 複数"
"のセッションが（潜在的に）このインターセプタを同時並行で使用することになるた"
"め、 セッション固有の状態を格納しないように気をつけてください。"

#. Tag: programlisting
#: events.xml:80
#, no-c-format
msgid ""
"<![CDATA[new Configuration().setInterceptor( new AuditInterceptor() );]]>"
msgstr ""

#. Tag: title
#: events.xml:85
#, no-c-format
msgid "Event system"
msgstr "イベントシステム"

#. Tag: para
#: events.xml:87
#, fuzzy, no-c-format
msgid ""
"If you have to react to particular events in your persistence layer, you can "
"also use the Hibernate3 <emphasis>event</emphasis> architecture. The event "
"system can be used in addition, or as a replacement, for interceptors."
msgstr ""
"永続化層で特定のイベントに対応しなければならない場合、 Hibernate3の "
"<emphasis>イベント</emphasis> アーキテクチャを使うこともできます。 イベントシ"
"ステムはインターセプタと一緒に使うか、またはインターセプタの代わりとして使う"
"ことができます。"

#. Tag: para
#: events.xml:93
#, fuzzy, no-c-format
msgid ""
"All the methods of the <literal>Session</literal> interface correlate to an "
"event. You have a <literal>LoadEvent</literal>, a <literal>FlushEvent</"
"literal>, etc. Consult the XML configuration-file DTD or the <literal>org."
"hibernate.event</literal> package for the full list of defined event types. "
"When a request is made of one of these methods, the Hibernate "
"<literal>Session</literal> generates an appropriate event and passes it to "
"the configured event listeners for that type. Out-of-the-box, these "
"listeners implement the same processing in which those methods always "
"resulted. However, you are free to implement a customization of one of the "
"listener interfaces (i.e., the <literal>LoadEvent</literal> is processed by "
"the registered implementation of the <literal>LoadEventListener</literal> "
"interface), in which case their implementation would be responsible for "
"processing any <literal>load()</literal> requests made of the "
"<literal>Session</literal>."
msgstr ""
"本質的に <literal>Session</literal> インターフェイスのすべてのメソッドは、 1"
"個のイベントと相互に関連します。 例えば <literal>LoadEvent</literal>、"
"<literal>FlushEvent</literal> などがあります （定義済みのイベント型の一覧につ"
"いては、XML設定ファイルのDTDや <literal>org.hibernate.event</literal> パッ"
"ケージを調べてください）。 リクエストがこれらのメソッドの1つから作られると"
"き、 Hibernateの <literal>Session</literal> は適切なイベントを生成し、 そのイ"
"ベント型に設定されたイベントリスナに渡します。 すばらしいことに、これらのリス"
"ナはそのメソッドと同じ処理を実装します。 とはいえ、リスナインターフェイスの一"
"つを自由にカスタム実装できます （つまり、<literal>LoadEvent</literal> は登録"
"された <literal>LoadEventListener</literal> インターフェイスの実装により処理"
"されます）。 その場合、その実装には <literal>Session</literal> から作られたど"
"のような <literal>load()</literal> リクエストをも処理する責任があります。"

#. Tag: para
#: events.xml:108
#, fuzzy, no-c-format
msgid ""
"The listeners should be considered singletons. This means they are shared "
"between requests, and should not save any state as instance variables."
msgstr ""
"リスナは事実上シングルトンであると見なせます。 つまりリスナはリクエスト間で共"
"有されるため、 インスタンス変数として状態を保持するべきではないということで"
"す。"

#. Tag: para
#: events.xml:113
#, fuzzy, no-c-format
msgid ""
"A custom listener implements the appropriate interface for the event it "
"wants to process and/or extend one of the convenience base classes (or even "
"the default event listeners used by Hibernate out-of-the-box as these are "
"declared non-final for this purpose). Custom listeners can either be "
"registered programmatically through the <literal>Configuration</literal> "
"object, or specified in the Hibernate configuration XML. Declarative "
"configuration through the properties file is not supported. Here is an "
"example of a custom load event listener:"
msgstr ""
"カスタムリスナは処理したいイベントについて適切なインターフェイスを実装するべ"
"きです。 便利な基底クラスのうちの一つを継承してもよいです （またはHibernateが"
"デフォルトで使用するイベントリスナを継承してもよいです。 すばらしいことに、こ"
"の目的のために非finalとして宣言されています）。 カスタムリスナは "
"<literal>Configuration</literal> オブジェクトを使ってプログラムから登録する"
"か、 HibernateのXML設定ファイルで指定できます （プロパティファイルで宣言的に"
"設定する方法はサポートされていません）。 カスタムロードイベントリスナの例を示"
"します。"

#. Tag: programlisting
#: events.xml:123
#, no-c-format
msgid ""
"<![CDATA[public class MyLoadListener implements LoadEventListener {\n"
"    // this is the single method defined by the LoadEventListener interface\n"
"    public void onLoad(LoadEvent event, LoadEventListener.LoadType "
"loadType)\n"
"            throws HibernateException {\n"
"        if ( !MySecurity.isAuthorized( event.getEntityClassName(), event."
"getEntityId() ) ) {\n"
"            throw MySecurityException(\"Unauthorized access\");\n"
"        }\n"
"    }\n"
"}]]>"
msgstr ""

#. Tag: para
#: events.xml:125
#, no-c-format
msgid ""
"You also need a configuration entry telling Hibernate to use the listener in "
"addition to the default listener:"
msgstr "デフォルトリスナ以外のリスナを使うには、Hibernateへの設定も必要です："

#. Tag: programlisting
#: events.xml:130
#, no-c-format
msgid ""
"<![CDATA[<hibernate-configuration>\n"
"    <session-factory>\n"
"        ...\n"
"        <event type=\"load\">\n"
"            <listener class=\"com.eg.MyLoadListener\"/>\n"
"            <listener class=\"org.hibernate.event.def."
"DefaultLoadEventListener\"/>\n"
"        </event>\n"
"    </session-factory>\n"
"</hibernate-configuration>]]>"
msgstr ""

#. Tag: para
#: events.xml:132
#, fuzzy, no-c-format
msgid "Instead, you can register it programmatically:"
msgstr "またその他に、プログラムで登録する方法もあります："

#. Tag: programlisting
#: events.xml:136
#, no-c-format
msgid ""
"<![CDATA[Configuration cfg = new Configuration();\n"
"LoadEventListener[] stack = { new MyLoadListener(), new "
"DefaultLoadEventListener() };\n"
"cfg.EventListeners().setLoadEventListeners(stack);]]>"
msgstr ""

#. Tag: para
#: events.xml:138
#, fuzzy, no-c-format
msgid ""
"Listeners registered declaratively cannot share instances. If the same class "
"name is used in multiple <literal>&lt;listener/&gt;</literal> elements, each "
"reference will result in a separate instance of that class. If you need to "
"share listener instances between listener types you must use the "
"programmatic registration approach."
msgstr ""
"リスナを宣言的に登録すると、そのリスナのインスタンスを共有できません。 複数"
"の <literal>&lt;listener/&gt;</literal> 要素で同じクラス名が使われると、 それ"
"ぞれの参照はそのクラスの別々のインスタンスを指すことになります。 リスナ型の間"
"でリスナインスタンスを共有する必要があれば、 プログラムで登録する方法を採らな"
"ければなりません。"

#. Tag: para
#: events.xml:146
#, fuzzy, no-c-format
msgid ""
"Why implement an interface and define the specific type during "
"configuration? A listener implementation could implement multiple event "
"listener interfaces. Having the type additionally defined during "
"registration makes it easier to turn custom listeners on or off during "
"configuration."
msgstr ""
"なぜインターフェイスを実装して、特化した型を設定時に指定するのでしょうか？ リ"
"スナの実装クラスに、複数のイベントリスナインターフェイスを実装できるからで"
"す。 登録時に追加で型を指定することで、カスタムリスナのon/offを設定時に簡単に"
"切り替えられます。"

#. Tag: title
#: events.xml:156
#, no-c-format
msgid "Hibernate declarative security"
msgstr "Hibernateの宣言的なセキュリティ"

#. Tag: para
#: events.xml:157
#, fuzzy, no-c-format
msgid ""
"Usually, declarative security in Hibernate applications is managed in a "
"session facade layer. Hibernate3 allows certain actions to be permissioned "
"via JACC, and authorized via JAAS. This is an optional functionality that is "
"built on top of the event architecture."
msgstr ""
"一般的にHibernateアプリケーションの宣言的なセキュリティは、セッションファサー"
"ド層で管理します。 現在、Hiberenate3はJACCで許可しかつ、JAASで認証したアク"
"ションを許しています。 これはイベントアーキテクチャの最上位に組み込まれている"
"オプションの機能です。"

#. Tag: para
#: events.xml:163
#, no-c-format
msgid ""
"First, you must configure the appropriate event listeners, to enable the use "
"of JAAS authorization."
msgstr ""
"まず最初に、適切なイベントリスナを設定してJAAS認証を使えるようにしなければな"
"りません。"

#. Tag: programlisting
#: events.xml:168
#, no-c-format
msgid ""
"<![CDATA[<listener type=\"pre-delete\" class=\"org.hibernate.secure."
"JACCPreDeleteEventListener\"/>\n"
"<listener type=\"pre-update\" class=\"org.hibernate.secure."
"JACCPreUpdateEventListener\"/>\n"
"<listener type=\"pre-insert\" class=\"org.hibernate.secure."
"JACCPreInsertEventListener\"/>\n"
"<listener type=\"pre-load\" class=\"org.hibernate.secure."
"JACCPreLoadEventListener\"/>]]>"
msgstr ""

#. Tag: para
#: events.xml:170
#, fuzzy, no-c-format
msgid ""
"Note that <literal>&lt;listener type=\"...\" class=\"...\"/&gt;</literal> is "
"shorthand for <literal>&lt;event type=\"...\"&gt;&lt;listener class=\"...\"/"
"&gt;&lt;/event&gt;</literal> when there is exactly one listener for a "
"particular event type."
msgstr ""
"特定のイベント型に対してちょうど一つのリスナがあるとき、 <literal>&lt;"
"listener type=\"...\" class=\"...\"/&gt;</literal> は <literal>&lt;event "
"type=\"...\"&gt;&lt;listener class=\"...\"/&gt;&lt;/event&gt;</literal> の簡"
"略形に過ぎないことに注意してください。"

#. Tag: para
#: events.xml:176
#, fuzzy, no-c-format
msgid ""
"Next, while still in <literal>hibernate.cfg.xml</literal>, bind the "
"permissions to roles:"
msgstr ""
"次に、同じく <literal>hibernate.cfg.xml</literal> でロールにパーミッションを"
"与えてください："

#. Tag: programlisting
#: events.xml:180
#, no-c-format
msgid ""
"<![CDATA[<grant role=\"admin\" entity-name=\"User\" actions=\"insert,update,"
"read\"/>\n"
"<grant role=\"su\" entity-name=\"User\" actions=\"*\"/>]]>"
msgstr ""

#. Tag: para
#: events.xml:182
#, no-c-format
msgid "The role names are the roles understood by your JACC provider."
msgstr "このロール名は使用するJACCプロバイダに理解されるロールです。"
