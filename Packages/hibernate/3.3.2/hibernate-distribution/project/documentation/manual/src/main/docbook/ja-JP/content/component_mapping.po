msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"Report-Msgid-Bugs-To: http://bugs.kde.org\n"
"POT-Creation-Date: 2009-06-10 21:02+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#. Tag: title
#: component_mapping.xml:29
#, no-c-format
msgid "Component Mapping"
msgstr "コンポーネントのマッピング"

#. Tag: para
#: component_mapping.xml:31
#, fuzzy, no-c-format
msgid ""
"The notion of a <emphasis>component</emphasis> is re-used in several "
"different contexts and purposes throughout Hibernate."
msgstr ""
"<emphasis>コンポーネント</emphasis> の概念は、Hibernateを通して様々な状況の中"
"で 異なる目的のために再利用されます。"

#. Tag: title
#: component_mapping.xml:37
#, no-c-format
msgid "Dependent objects"
msgstr "依存オブジェクト"

#. Tag: para
#: component_mapping.xml:39
#, fuzzy, no-c-format
msgid ""
"A component is a contained object that is persisted as a value type and not "
"an entity reference. The term \"component\" refers to the object-oriented "
"notion of composition and not to architecture-level components. For example, "
"you can model a person like this:"
msgstr ""
"コンポーネントは、エンティティの参照ではなく値型として永続化された、 包含され"
"たオブジェクトです。コンポーネントという言葉については、コンポジションという "
"オブジェクト指向の概念を参照してください（アーキテクチャレベルのコンポーネン"
"トではありません）。 例えば、以下のPersonモデルのようなものです。"

#. Tag: programlisting
#: component_mapping.xml:45
#, no-c-format
msgid ""
"<![CDATA[public class Person {\n"
"    private java.util.Date birthday;\n"
"    private Name name;\n"
"    private String key;\n"
"    public String getKey() {\n"
"        return key;\n"
"    }\n"
"    private void setKey(String key) {\n"
"        this.key=key;\n"
"    }\n"
"    public java.util.Date getBirthday() {\n"
"        return birthday;\n"
"    }\n"
"    public void setBirthday(java.util.Date birthday) {\n"
"        this.birthday = birthday;\n"
"    }\n"
"    public Name getName() {\n"
"        return name;\n"
"    }\n"
"    public void setName(Name name) {\n"
"        this.name = name;\n"
"    }\n"
"    ......\n"
"    ......\n"
"}]]>"
msgstr ""

#. Tag: programlisting
#: component_mapping.xml:47
#, no-c-format
msgid ""
"<![CDATA[public class Name {\n"
"    char initial;\n"
"    String first;\n"
"    String last;\n"
"    public String getFirst() {\n"
"        return first;\n"
"    }\n"
"    void setFirst(String first) {\n"
"        this.first = first;\n"
"    }\n"
"    public String getLast() {\n"
"        return last;\n"
"    }\n"
"    void setLast(String last) {\n"
"        this.last = last;\n"
"    }\n"
"    public char getInitial() {\n"
"        return initial;\n"
"    }\n"
"    void setInitial(char initial) {\n"
"        this.initial = initial;\n"
"    }\n"
"}]]>"
msgstr ""

#. Tag: para
#: component_mapping.xml:49
#, fuzzy, no-c-format
msgid ""
"Now <literal>Name</literal> can be persisted as a component of "
"<literal>Person</literal>. <literal>Name</literal> defines getter and setter "
"methods for its persistent properties, but it does not need to declare any "
"interfaces or identifier properties."
msgstr ""
"いま、<literal>Name</literal> は <literal>Person</literal> のコンポーネントと"
"して 永続化することが出来ます。ここで <literal>Name</literal> は永続化属性に"
"対してgetter、 setterメソッドを定義しますが、インターフェイスや識別子プロパ"
"ティを定義する必要が ないことに注意して下さい。"

#. Tag: para
#: component_mapping.xml:56
#, fuzzy, no-c-format
msgid "Our Hibernate mapping would look like this:"
msgstr "マッピング定義は以下のようになります。"

#. Tag: programlisting
#: component_mapping.xml:60
#, no-c-format
msgid ""
"<![CDATA[<class name=\"eg.Person\" table=\"person\">\n"
"    <id name=\"Key\" column=\"pid\" type=\"string\">\n"
"        <generator class=\"uuid\"/>\n"
"    </id>\n"
"    <property name=\"birthday\" type=\"date\"/>\n"
"    <component name=\"Name\" class=\"eg.Name\"> <!-- class attribute "
"optional -->\n"
"        <property name=\"initial\"/>\n"
"        <property name=\"first\"/>\n"
"        <property name=\"last\"/>\n"
"    </component>\n"
"</class>]]>"
msgstr ""

#. Tag: para
#: component_mapping.xml:62
#, no-c-format
msgid ""
"The person table would have the columns <literal>pid</literal>, "
"<literal>birthday</literal>, <literal>initial</literal>, <literal>first</"
"literal> and <literal>last</literal>."
msgstr ""
"Personテーブルは <literal>pid</literal>、 <literal>birthday</literal>、 "
"<literal>initial</literal>、 <literal>first</literal>、 <literal>last</"
"literal> カラムを持ちます。"

#. Tag: para
#: component_mapping.xml:70
#, fuzzy, no-c-format
msgid ""
"Like value types, components do not support shared references. In other "
"words, two persons could have the same name, but the two person objects "
"would contain two independent name objects that were only \"the same\" by "
"value. The null value semantics of a component are <emphasis>ad hoc</"
"emphasis>. When reloading the containing object, Hibernate will assume that "
"if all component columns are null, then the entire component is null. This "
"is suitable for most purposes."
msgstr ""
"全ての値型のように、コンポーネントは参照の共有をすることができません。 言い換"
"えると、二人のPersonは同じ名前を持つことができますが、二つのPersonオブジェク"
"トは \"値が同じだけ\"の別々のnameオブジェクトを含んでいるということです。 コ"
"ンポーネントのnull値のセマンティクスは <emphasis>アドホック</emphasis> で"
"す。 コンポーネントのオブジェクトを再読み込みする際、Hibernateはコンポーネン"
"トのすべてのカラムが nullであるならコンポーネント自体がnullであると考えま"
"す。 これは大抵の場合問題ありません。"

#. Tag: para
#: component_mapping.xml:78
#, fuzzy, no-c-format
msgid ""
"The properties of a component can be of any Hibernate type (collections, "
"many-to-one associations, other components, etc). Nested components should "
"<emphasis>not</emphasis> be considered an exotic usage. Hibernate is "
"intended to support a fine-grained object model."
msgstr ""
"コンポーネントの属性はどんなHibernateの型でも構いません（コレクション、many-"
"to-one関連、 他のコンポーネントなど）。ネストされたコンポーネントは滅多に使わ"
"ないと考えるべきでは <emphasis>ありません</emphasis> 。Hibernateは非常にきめ"
"の細かいオブジェクトモデルをサポートするように意図されています。"

#. Tag: para
#: component_mapping.xml:85
#, no-c-format
msgid ""
"The <literal>&lt;component&gt;</literal> element allows a <literal>&lt;"
"parent&gt;</literal> subelement that maps a property of the component class "
"as a reference back to the containing entity."
msgstr ""
"<literal>&lt;component&gt;</literal> 要素は親エンティティへの逆参照として、コ"
"ンポーネントクラスの 属性をマッピングする <literal>&lt;parent&gt;</literal> "
"サブ要素を使用できます。"

#. Tag: programlisting
#: component_mapping.xml:91
#, no-c-format
msgid ""
"<![CDATA[<class name=\"eg.Person\" table=\"person\">\n"
"    <id name=\"Key\" column=\"pid\" type=\"string\">\n"
"        <generator class=\"uuid\"/>\n"
"    </id>\n"
"    <property name=\"birthday\" type=\"date\"/>\n"
"    <component name=\"Name\" class=\"eg.Name\" unique=\"true\">\n"
"        <parent name=\"namedPerson\"/> <!-- reference back to the Person --"
">\n"
"        <property name=\"initial\"/>\n"
"        <property name=\"first\"/>\n"
"        <property name=\"last\"/>\n"
"    </component>\n"
"</class>]]>"
msgstr ""

#. Tag: title
#: component_mapping.xml:96
#, no-c-format
msgid "Collections of dependent objects"
msgstr "従属するオブジェクトのコレクション"

#. Tag: para
#: component_mapping.xml:98
#, fuzzy, no-c-format
msgid ""
"Collections of components are supported (e.g. an array of type "
"<literal>Name</literal>). Declare your component collection by replacing the "
"<literal>&lt;element&gt;</literal> tag with a <literal>&lt;composite-"
"element&gt;</literal> tag:"
msgstr ""
"Hibernateはコンポーネントのコレクションをサポートしています（例えば "
"<literal>Name</literal> 型の配列）。 <literal>&lt;element&gt;</literal> タグ"
"を <literal>&lt;composite-element&gt;</literal> タグに取り替えることにより コ"
"ンポーネントコレクションを宣言してください。"

#. Tag: programlisting
#: component_mapping.xml:105
#, no-c-format
msgid ""
"<![CDATA[<set name=\"someNames\" table=\"some_names\" lazy=\"true\">\n"
"    <key column=\"id\"/>\n"
"    <composite-element class=\"eg.Name\"> <!-- class attribute required -->\n"
"        <property name=\"initial\"/>\n"
"        <property name=\"first\"/>\n"
"        <property name=\"last\"/>\n"
"    </composite-element>\n"
"</set>]]>"
msgstr ""

#. Tag: para
#: component_mapping.xml:108
#, fuzzy, no-c-format
msgid ""
"If you define a <literal>Set</literal> of composite elements, it is "
"important to implement <literal>equals()</literal> and <literal>hashCode()</"
"literal> correctly."
msgstr ""
"注意: コンポジットエレメントの <literal>Set</literal> を定義したなら、 "
"<literal>equals()</literal> と <literal>hashCode()</literal> を正しく実装する"
"ことが重要です。"

#. Tag: para
#: component_mapping.xml:115
#, fuzzy, no-c-format
msgid ""
"Composite elements can contain components but not collections. If your "
"composite element contains components, use the <literal>&lt;nested-composite-"
"element&gt;</literal> tag. This case is a collection of components which "
"themselves have components. You may want to consider if a one-to-many "
"association is more appropriate. Remodel the composite element as an entity, "
"but be aware that even though the Java model is the same, the relational "
"model and persistence semantics are still slightly different."
msgstr ""
"コンポジットエレメントはコレクションを含まず、コンポーネントを含むこともあり"
"ます。 コンポジットエレメント自身がコンポーネントを含んでいる場合は "
"<literal>&lt;nested-composite-element&gt;</literal> を 使用してください。コン"
"ポーネントのコレクション自身がコンポーネントを持つというケースはめったにあり"
"ません。 この段階までに、one-to-many関連の方がより適切でないかと熟考してくだ"
"さい。 コンポジットエレメントをエンティティとして再度モデリングしてみてくださ"
"い。 しかしこれはJavaのモデルとしては同じですが、リレーショナルモデルと永続動"
"作はまだ若干異なることに注意してください。"

#. Tag: para
#: component_mapping.xml:127
#, fuzzy, no-c-format
msgid ""
"A composite element mapping does not support null-able properties if you are "
"using a <literal>&lt;set&gt;</literal>. There is no separate primary key "
"column in the composite element table. Hibernate uses each column's value to "
"identify a record when deleting objects, which is not possible with null "
"values. You have to either use only not-null properties in a composite-"
"element or choose a <literal>&lt;list&gt;</literal>, <literal>&lt;map&gt;</"
"literal>, <literal>&lt;bag&gt;</literal> or <literal>&lt;idbag&gt;</literal>."
msgstr ""
"もし <literal>&lt;set&gt;</literal> を使用するのであれば、コンポジットエレメ"
"ントのマッピングがnull値が可能な 属性をサポートしていないことに注意してくださ"
"い。Hibernateはオブジェクトを削除するとき、 レコードを識別するためにそれぞれ"
"のカラムの値を使用する必要があるため、null値を持つことが出来ません （コンポ"
"ジットエレメントテーブルには別の主キーカラムはありません）。 コンポジットエレ"
"メントにnot-nullの属性のみを使用するか、または <literal>&lt;list&gt;</"
"literal>、<literal>&lt;map&gt;</literal>、 <literal>&lt;bag&gt;</literal>、"
"<literal>&lt;idbag&gt;</literal> を選択する必要があります。"

#. Tag: para
#: component_mapping.xml:138
#, fuzzy, no-c-format
msgid ""
"A special case of a composite element is a composite element with a nested "
"<literal>&lt;many-to-one&gt;</literal> element. This mapping allows you to "
"map extra columns of a many-to-many association table to the composite "
"element class. The following is a many-to-many association from "
"<literal>Order</literal> to <literal>Item</literal>, where "
"<literal>purchaseDate</literal>, <literal>price</literal> and "
"<literal>quantity</literal> are properties of the association:"
msgstr ""
"コンポジットエレメントの特別なケースとして、ネストされた <literal>&lt;many-"
"to-one&gt;</literal> 属性を持つ コンポジットエレメントがあります。 このマッピ"
"ングは、コンポジットエレメントクラスを多対多関連テーブルの 余分なカラムへマッ"
"ピングします。 次の例は <literal>Order</literal> から、<literal>Item</"
"literal> への多対多関連です。 <literal>purchaseDate</literal>、"
"<literal>price</literal>、<literal>quantity</literal> は関連の属性となりま"
"す。"

#. Tag: programlisting
#: component_mapping.xml:148
#, no-c-format
msgid ""
"<![CDATA[<class name=\"eg.Order\" .... >\n"
"    ....\n"
"    <set name=\"purchasedItems\" table=\"purchase_items\" lazy=\"true\">\n"
"        <key column=\"order_id\">\n"
"        <composite-element class=\"eg.Purchase\">\n"
"            <property name=\"purchaseDate\"/>\n"
"            <property name=\"price\"/>\n"
"            <property name=\"quantity\"/>\n"
"            <many-to-one name=\"item\" class=\"eg.Item\"/> <!-- class "
"attribute is optional -->\n"
"        </composite-element>\n"
"    </set>\n"
"</class>]]>"
msgstr ""

#. Tag: para
#: component_mapping.xml:150
#, fuzzy, no-c-format
msgid ""
"There cannot be a reference to the purchase on the other side for "
"bidirectional association navigation. Components are value types and do not "
"allow shared references. A single <literal>Purchase</literal> can be in the "
"set of an <literal>Order</literal>, but it cannot be referenced by the "
"<literal>Item</literal> at the same time."
msgstr ""
"もちろん、双方向関連のナビゲーションのために反対側からpurchaseへの参照を作る"
"ことは出来ません。 コンポーネントは値型であり、参照を共有できないことを覚えて"
"おいてください。 一つの <literal>Purchase</literal> は一つの <literal>Order</"
"literal> のsetに存在できますが、 同時に <literal>Item</literal> から参照する"
"ことは出来ません。"

#. Tag: para
#: component_mapping.xml:158
#, no-c-format
msgid "Even ternary (or quaternary, etc) associations are possible:"
msgstr "3項関連（あるいは4項など）も可能です。"

#. Tag: programlisting
#: component_mapping.xml:160
#, no-c-format
msgid ""
"<![CDATA[<class name=\"eg.Order\" .... >\n"
"    ....\n"
"    <set name=\"purchasedItems\" table=\"purchase_items\" lazy=\"true\">\n"
"        <key column=\"order_id\">\n"
"        <composite-element class=\"eg.OrderLine\">\n"
"            <many-to-one name=\"purchaseDetails class=\"eg.Purchase\"/>\n"
"            <many-to-one name=\"item\" class=\"eg.Item\"/>\n"
"        </composite-element>\n"
"    </set>\n"
"</class>]]>"
msgstr ""

#. Tag: para
#: component_mapping.xml:162
#, fuzzy, no-c-format
msgid ""
"Composite elements can appear in queries using the same syntax as "
"associations to other entities."
msgstr ""
"コンポジットエレメントは他のエンティティへの関連として、 同じシンタックスを"
"使っているクエリ内で使用できます。"

#. Tag: title
#: component_mapping.xml:170
#, no-c-format
msgid "Components as Map indices"
msgstr "Mapのインデックスとしてのコンポーネント"

#. Tag: para
#: component_mapping.xml:172
#, fuzzy, no-c-format
msgid ""
"The <literal>&lt;composite-map-key&gt;</literal> element allows you to map a "
"component class as the key of a <literal>Map</literal>. Ensure that you "
"override <literal>hashCode()</literal> and <literal>equals()</literal> "
"correctly on the component class."
msgstr ""
"<literal>&lt;composite-map-key&gt;</literal> 要素は <literal>Map</literal> の"
"キーとしてコンポーネントクラスを マッピングします。コンポーネントクラス上で "
"<literal>hashCode()</literal> と <literal>equals()</literal> を正確にオーバー"
"ライドしてください。"

#. Tag: title
#: component_mapping.xml:181
#, no-c-format
msgid "Components as composite identifiers"
msgstr "複合識別子としてのコンポーネント"

#. Tag: para
#: component_mapping.xml:183
#, fuzzy, no-c-format
msgid ""
"You can use a component as an identifier of an entity class. Your component "
"class must satisfy certain requirements:"
msgstr ""
"コンポーネントをエンティティクラスの識別子として使うことができます。 コンポー"
"ネントクラスは以下の条件を満たす必要があります。"

#. Tag: para
#: component_mapping.xml:190
#, no-c-format
msgid "It must implement <literal>java.io.Serializable</literal>."
msgstr "<literal>java.io.Serializable</literal> を実装しなければなりません。"

#. Tag: para
#: component_mapping.xml:195
#, fuzzy, no-c-format
msgid ""
"It must re-implement <literal>equals()</literal> and <literal>hashCode()</"
"literal> consistently with the database's notion of composite key equality."
msgstr ""
"データベース上の複合キーの等価性と矛盾のないように、<literal>equals()</"
"literal> と <literal>hashCode()</literal> を再実装しなければなりません。"

#. Tag: title
#: component_mapping.xml:204
#, no-c-format
msgid "Note"
msgstr ""

#. Tag: para
#: component_mapping.xml:205
#, fuzzy, no-c-format
msgid ""
"In Hibernate3, although the second requirement is not an absolutely hard "
"requirement of Hibernate, it is recommended."
msgstr ""
"注意: Hibernate3において、2番目の条件は絶対的な条件ではありません。 しかしと"
"にかく条件を満たしてください。"

#. Tag: para
#: component_mapping.xml:211
#, fuzzy, no-c-format
msgid ""
"You cannot use an <literal>IdentifierGenerator</literal> to generate "
"composite keys. Instead the application must assign its own identifiers."
msgstr ""
"複合キーを生成するために <literal>IdentifierGenerator</literal> を使用するこ"
"とはできません。 代わりにアプリケーションが識別子を割り当てなくてはなりませ"
"ん。"

#. Tag: para
#: component_mapping.xml:216
#, fuzzy, no-c-format
msgid ""
"Use the <literal>&lt;composite-id&gt;</literal> tag, with nested "
"<literal>&lt;key-property&gt;</literal> elements, in place of the usual "
"<literal>&lt;id&gt;</literal> declaration. For example, the "
"<literal>OrderLine</literal> class has a primary key that depends upon the "
"(composite) primary key of <literal>Order</literal>."
msgstr ""
"通常の <literal>&lt;id&gt;</literal> 宣言の代わりに <literal>&lt;composite-"
"id&gt;</literal> タグを （ネストされた <literal>&lt;key-property&gt;</"
"literal> 属性と共に）使います。 以下の例では、<literal>OrderLine</literal> ク"
"ラスは <literal>Order</literal> の（複合）主キーに 依存した主キーを持っていま"
"す。"

#. Tag: programlisting
#: component_mapping.xml:224
#, no-c-format
msgid ""
"<![CDATA[<class name=\"OrderLine\">\n"
"    \n"
"    <composite-id name=\"id\" class=\"OrderLineId\">\n"
"        <key-property name=\"lineId\"/>\n"
"        <key-property name=\"orderId\"/>\n"
"        <key-property name=\"customerId\"/>\n"
"    </composite-id>\n"
"    \n"
"    <property name=\"name\"/>\n"
"    \n"
"    <many-to-one name=\"order\" class=\"Order\"\n"
"            insert=\"false\" update=\"false\">\n"
"        <column name=\"orderId\"/>\n"
"        <column name=\"customerId\"/>\n"
"    </many-to-one>\n"
"    ....\n"
"    \n"
"</class>]]>"
msgstr ""

#. Tag: para
#: component_mapping.xml:226
#, fuzzy, no-c-format
msgid ""
"Any foreign keys referencing the <literal>OrderLine</literal> table are now "
"composite. Declare this in your mappings for other classes. An association "
"to <literal>OrderLine</literal> is mapped like this:"
msgstr ""
"このとき、<literal>OrderLine</literal> テーブルへ関連する外部キーもまた複合で"
"す。 他のクラスのマッピングでこれを宣言しなければなりません。 "
"<literal>OrderLine</literal> への関連は次のようにマッピングされます。"

#. Tag: programlisting
#: component_mapping.xml:232
#, no-c-format
msgid ""
"<![CDATA[<many-to-one name=\"orderLine\" class=\"OrderLine\">\n"
"<!-- the \"class\" attribute is optional, as usual -->\n"
"    <column name=\"lineId\"/>\n"
"    <column name=\"orderId\"/>\n"
"    <column name=\"customerId\"/>\n"
"</many-to-one>]]>"
msgstr ""

#. Tag: para
#: component_mapping.xml:235
#, no-c-format
msgid ""
"The <literal>column</literal> element is an alternative to the "
"<literal>column</literal> attribute everywhere. Using the <literal>column</"
"literal> element just gives more declaration options, which are mostly "
"useful when utilizing <literal>hbm2ddl</literal>"
msgstr ""

#. Tag: para
#: component_mapping.xml:244
#, no-c-format
msgid ""
"A <literal>many-to-many</literal> association to <literal>OrderLine</"
"literal> also uses the composite foreign key:"
msgstr ""
"<literal>OrderLine</literal> への <literal>many-to-many</literal> 関連も 複合"
"外部キーを使います。"

#. Tag: programlisting
#: component_mapping.xml:249
#, no-c-format
msgid ""
"<![CDATA[<set name=\"undeliveredOrderLines\">\n"
"    <key column name=\"warehouseId\"/>\n"
"    <many-to-many class=\"OrderLine\">\n"
"        <column name=\"lineId\"/>\n"
"        <column name=\"orderId\"/>\n"
"        <column name=\"customerId\"/>\n"
"    </many-to-many>\n"
"</set>]]>"
msgstr ""

#. Tag: para
#: component_mapping.xml:251
#, no-c-format
msgid ""
"The collection of <literal>OrderLine</literal>s in <literal>Order</literal> "
"would use:"
msgstr ""
"<literal>Order</literal> にある <literal>OrderLine</literal> のコレクション"
"は 次のものを使用します。"

#. Tag: programlisting
#: component_mapping.xml:256
#, no-c-format
msgid ""
"<![CDATA[<set name=\"orderLines\" inverse=\"true\">\n"
"    <key>\n"
"        <column name=\"orderId\"/>\n"
"        <column name=\"customerId\"/>\n"
"    </key>\n"
"    <one-to-many class=\"OrderLine\"/>\n"
"</set>]]>"
msgstr ""

#. Tag: para
#: component_mapping.xml:258
#, fuzzy, no-c-format
msgid "The <literal>&lt;one-to-many&gt;</literal> element declares no columns."
msgstr ""
"（<literal>&lt;one-to-many&gt;</literal> 属性は、例によってカラムを宣言しませ"
"ん）"

#. Tag: para
#: component_mapping.xml:262
#, no-c-format
msgid ""
"If <literal>OrderLine</literal> itself owns a collection, it also has a "
"composite foreign key."
msgstr ""
"<literal>OrderLine</literal> 自身がコレクションを持っている場合、 同時に複合"
"外部キーも持っています。"

#. Tag: programlisting
#: component_mapping.xml:267
#, no-c-format
msgid ""
"<![CDATA[<class name=\"OrderLine\">\n"
"    ....\n"
"    ....\n"
"    <list name=\"deliveryAttempts\">\n"
"        <key>   <!-- a collection inherits the composite key type -->\n"
"            <column name=\"lineId\"/>\n"
"            <column name=\"orderId\"/>\n"
"            <column name=\"customerId\"/>\n"
"        </key>\n"
"        <list-index column=\"attemptId\" base=\"1\"/>\n"
"        <composite-element class=\"DeliveryAttempt\">\n"
"            ...\n"
"        </composite-element>\n"
"    </set>\n"
"</class>]]>"
msgstr ""

#. Tag: title
#: component_mapping.xml:272
#, no-c-format
msgid "Dynamic components"
msgstr "動的コンポーネント"

#. Tag: para
#: component_mapping.xml:274
#, fuzzy, no-c-format
msgid "You can also map a property of type <literal>Map</literal>:"
msgstr "<literal>Map</literal> 型のプロパティのマッピングも可能です。"

#. Tag: programlisting
#: component_mapping.xml:278
#, no-c-format
msgid ""
"<![CDATA[<dynamic-component name=\"userAttributes\">\n"
"    <property name=\"foo\" column=\"FOO\" type=\"string\"/>\n"
"    <property name=\"bar\" column=\"BAR\" type=\"integer\"/>\n"
"    <many-to-one name=\"baz\" class=\"Baz\" column=\"BAZ_ID\"/>\n"
"</dynamic-component>]]>"
msgstr ""

#. Tag: para
#: component_mapping.xml:280
#, fuzzy, no-c-format
msgid ""
"The semantics of a <literal>&lt;dynamic-component&gt;</literal> mapping are "
"identical to <literal>&lt;component&gt;</literal>. The advantage of this "
"kind of mapping is the ability to determine the actual properties of the "
"bean at deployment time just by editing the mapping document. Runtime "
"manipulation of the mapping document is also possible, using a DOM parser. "
"You can also access, and change, Hibernate's configuration-time metamodel "
"via the <literal>Configuration</literal> object."
msgstr ""
"<literal>&lt;dynamic-component&gt;</literal> マッピングのセマンティクスは "
"<literal>&lt;component&gt;</literal> と同一のものです。この種のマッピングの利"
"点は、マッピングドキュメントの編集により、配置時にbeanの属性を 決定できる点で"
"す。また、DOMパーサを利用して、マッピングドキュメントのランタイム操作が可能で"
"す。 さらに、<literal>Configuration</literal> オブジェクト経由でHibernateのコ"
"ンフィグレーション時のメタモデルに アクセス（または変更）が可能です。"

#~ msgid ""
#~ "(Note that the <literal>&lt;column&gt;</literal> tag is an alternative to "
#~ "the <literal>column</literal> attribute everywhere.)"
#~ msgstr ""
#~ "（<literal>&lt;column&gt;</literal> タグはどこであっても <literal>column</"
#~ "literal> 属性の 代わりになります。）"
