#, fuzzy
msgid ""
msgstr ""
"Report-Msgid-Bugs-To: http://bugs.kde.org\n"
"POT-Creation-Date: 2009-06-10 21:02+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Content-Type: text/plain; charset=UTF-8\n"

#. Tag: title
#: example_parentchild.xml:29
#, no-c-format
msgid "Example: Parent/Child"
msgstr "Ejemplo: Padre/Hijo"

#. Tag: para
#: example_parentchild.xml:31
#, fuzzy, no-c-format
msgid ""
"One of the first things that new users want to do with Hibernate is to model "
"a parent/child type relationship. There are two different approaches to "
"this. The most convenient approach, especially for new users, is to model "
"both <literal>Parent</literal> and <literal>Child</literal> as entity "
"classes with a <literal>&lt;one-to-many&gt;</literal> association from "
"<literal>Parent</literal> to <literal>Child</literal>. The alternative "
"approach is to declare the <literal>Child</literal> as a <literal>&lt;"
"composite-element&gt;</literal>. The default semantics of a one-to-many "
"association in Hibernate are much less close to the usual semantics of a "
"parent/child relationship than those of a composite element mapping. We will "
"explain how to use a <emphasis>bidirectional one-to-many association with "
"cascades</emphasis> to model a parent/child relationship efficiently and "
"elegantly."
msgstr ""
"Una de las primer&#x00ed;simas cosas que los usuarios nuevos intentan hacer "
"con Hibernate es modelar una relaci&#x00f3;n de tipo padre / hijo. Para esto "
"hay dos enfoques diferentes. Por varias razones, el enfoque m&#x00e1;s "
"conveniente, especialmente para usuarios nuevos, es modelar tanto "
"<literal>Parent</literal> como <literal>Child</literal> como clases de "
"entidad con una asociaci&#x00f3;n <literal>&lt;one-to-many&gt;</literal> "
"desde <literal>Parent</literal> a <literal>Child</literal>. (El enfoque "
"alternativo es declarar el <literal>Child</literal> como un <literal>&lt;"
"composite-element&gt;</literal>.) Ahora, resulta que la sem&#x00e1;ntica por "
"defecto de una asociaci&#x00f3;n uno a muchos (en Hibernate) es mucho menos "
"cercana a la sem&#x00e1;ntica usual de una relaci&#x00f3;n padre / hijo que "
"aquellas de un mapeo de elementos compuestos. Explicaremos c&#x00f3;mo usar "
"una <emphasis>asociaci&#x00f3;n uno a muchos bidireccional con tratamiento "
"en cascada</emphasis> para modelar una relaci&#x00f3;n padre / hijo "
"eficiente y elegantemente. &#x00a1;No es para nada dif&#x00ed;cil!"

#. Tag: title
#: example_parentchild.xml:45
#, no-c-format
msgid "A note about collections"
msgstr "Una nota sobre las colecciones"

#. Tag: para
#: example_parentchild.xml:47
#, fuzzy, no-c-format
msgid ""
"Hibernate collections are considered to be a logical part of their owning "
"entity and not of the contained entities. Be aware that this is a critical "
"distinction that has the following consequences:"
msgstr ""
"Se considera que las colecciones de Hibernate son una parte l&#x00f3;gica de "
"la entidad que las posee; nunca de las entidades contenidas. &#x00a1;Esta es "
"una distinci&#x00f3;n crucial! Esto tiene las siguientes consecuencias:"

#. Tag: para
#: example_parentchild.xml:54
#, fuzzy, no-c-format
msgid ""
"When you remove/add an object from/to a collection, the version number of "
"the collection owner is incremented."
msgstr ""
"Cuando se quita / a&#x00f1;ade un objeto desde / a una colecci&#x00f3;n, se "
"incrementa el n&#x00fa;mero de versi&#x00f3;n del due&#x00f1;o de la "
"colecci&#x00f3;n."

#. Tag: para
#: example_parentchild.xml:60
#, fuzzy, no-c-format
msgid ""
"If an object that was removed from a collection is an instance of a value "
"type (e.g. a composite element), that object will cease to be persistent and "
"its state will be completely removed from the database. Likewise, adding a "
"value type instance to the collection will cause its state to be immediately "
"persistent."
msgstr ""
"Si un objeto que fue quitado de una colecci&#x00f3;n es una instancia de un "
"tipo de valor (por ejemplo, un elemento compuesto), ese objeta cesar&#x00e1; "
"de ser persistente y su estado ser&#x00e1; completamente quitado de la base "
"de datos. Asimismo, a&#x00f1;adir una instancia de tipo de valor a la "
"colecci&#x00f3;n causar&#x00e1; que su estado sea inmediatamente persistente."

#. Tag: para
#: example_parentchild.xml:68
#, fuzzy, no-c-format
msgid ""
"Conversely, if an entity is removed from a collection (a one-to-many or many-"
"to-many association), it will not be deleted by default. This behavior is "
"completely consistent; a change to the internal state of another entity "
"should not cause the associated entity to vanish. Likewise, adding an entity "
"to a collection does not cause that entity to become persistent, by default."
msgstr ""
"Por otro lado, si se quita una entidad de una colecci&#x00f3;n (una "
"asociaci&#x00f3;n uno-a-muchos o muchos-a-muchos), no ser&#x00e1; borrado, "
"por defecto. Este comportamiento es completamente consistente. &#x00a1;Un "
"cambio en el estado interno de otra entidad no hace desaparecer la entidad "
"asociada! Asimismo, a&#x00f1;adir una entidad a una colecci&#x00f3;n no "
"causa que la entidad se vuelva persistente, por defecto."

#. Tag: para
#: example_parentchild.xml:78
#, fuzzy, no-c-format
msgid ""
"Adding an entity to a collection, by default, merely creates a link between "
"the two entities. Removing the entity will remove the link. This is "
"appropriate for all sorts of cases. However, it is not appropriate in the "
"case of a parent/child relationship. In this case, the life of the child is "
"bound to the life cycle of the parent."
msgstr ""
"En cambio, el comportamiento por defecto es que al a&#x00f1;adir una entidad "
"a una colecci&#x00f3;n se crea meramente un enlace entre las dos entidades, "
"mientras que al quitarla se quita el enlace. Esto es muy apropiado para "
"todos los tipos de casos. Donde no es para nada apropiado es en el caso de "
"una relaci&#x00f3;n padre / hijo. donde la vida del hijo est&#x00e1; ligada "
"al ciclo de vida del padre."

#. Tag: title
#: example_parentchild.xml:88
#, no-c-format
msgid "Bidirectional one-to-many"
msgstr "Uno-a-muchos bidirectional"

#. Tag: para
#: example_parentchild.xml:90
#, no-c-format
msgid ""
"Suppose we start with a simple <literal>&lt;one-to-many&gt;</literal> "
"association from <literal>Parent</literal> to <literal>Child</literal>."
msgstr ""
"Sup&#x00f3;n que empezamos con una asociaci&#x00f3;n simple <literal>&lt;one-"
"to-many&gt;</literal> desde <literal>Parent</literal> a <literal>Child</"
"literal>."

#. Tag: programlisting
#: example_parentchild.xml:95
#, no-c-format
msgid ""
"<![CDATA[<set name=\"children\">\n"
"    <key column=\"parent_id\"/>\n"
"    <one-to-many class=\"Child\"/>\n"
"</set>]]>"
msgstr ""
"<![CDATA[<set name=\"children\">\n"
"    <key column=\"parent_id\"/>\n"
"    <one-to-many class=\"Child\"/>\n"
"</set>]]>"

#. Tag: para
#: example_parentchild.xml:97
#, fuzzy, no-c-format
msgid "If we were to execute the following code:"
msgstr "Si ejecut&#x00e1;semos el siguiente c&#x00f3;digo"

#. Tag: programlisting
#: example_parentchild.xml:101
#, no-c-format
msgid ""
"<![CDATA[Parent p = .....;\n"
"Child c = new Child();\n"
"p.getChildren().add(c);\n"
"session.save(c);\n"
"session.flush();]]>"
msgstr ""
"<![CDATA[Parent p = .....;\n"
"Child c = new Child();\n"
"p.getChildren().add(c);\n"
"session.save(c);\n"
"session.flush();]]>"

#. Tag: para
#: example_parentchild.xml:103
#, no-c-format
msgid "Hibernate would issue two SQL statements:"
msgstr "Hibernate publicar&#x00ed;a dos sentencias SQL:"

#. Tag: para
#: example_parentchild.xml:109
#, no-c-format
msgid ""
"an <literal>INSERT</literal> to create the record for <literal>c</literal>"
msgstr ""
"un <literal>INSERT</literal> para crear el registro de <literal>c</literal>"

#. Tag: para
#: example_parentchild.xml:112
#, no-c-format
msgid ""
"an <literal>UPDATE</literal> to create the link from <literal>p</literal> to "
"<literal>c</literal>"
msgstr ""
"un <literal>UPDATE</literal> para crear el enlace desde <literal>p</literal> "
"a <literal>c</literal>"

#. Tag: para
#: example_parentchild.xml:119
#, fuzzy, no-c-format
msgid ""
"This is not only inefficient, but also violates any <literal>NOT NULL</"
"literal> constraint on the <literal>parent_id</literal> column. You can fix "
"the nullability constraint violation by specifying <literal>not-null=\"true"
"\"</literal> in the collection mapping:"
msgstr ""
"Esto no es s&#x00f3;lo ineficiente, sino que adem&#x00e1;s viola cualquier "
"restricci&#x00f3;n <literal>NOT NULL</literal> en la columna "
"<literal>parent_id</literal>. Podemos reparar la violaci&#x00f3;n de "
"restricci&#x00f3;n de nulabilidad especificando <literal>not-null=\"true\"</"
"literal> en el mapeo de la colecci&#x00f3;n:"

#. Tag: programlisting
#: example_parentchild.xml:125
#, no-c-format
msgid ""
"<![CDATA[<set name=\"children\">\n"
"    <key column=\"parent_id\" not-null=\"true\"/>\n"
"    <one-to-many class=\"Child\"/>\n"
"</set>]]>"
msgstr ""
"<![CDATA[<set name=\"children\">\n"
"    <key column=\"parent_id\" not-null=\"true\"/>\n"
"    <one-to-many class=\"Child\"/>\n"
"</set>]]>"

#. Tag: para
#: example_parentchild.xml:127
#, no-c-format
msgid "However, this is not the recommended solution."
msgstr "Sin embargo, esta no es la soluci&#x00f3;n recomendada."

#. Tag: para
#: example_parentchild.xml:130
#, fuzzy, no-c-format
msgid ""
"The underlying cause of this behavior is that the link (the foreign key "
"<literal>parent_id</literal>) from <literal>p</literal> to <literal>c</"
"literal> is not considered part of the state of the <literal>Child</literal> "
"object and is therefore not created in the <literal>INSERT</literal>. The "
"solution is to make the link part of the <literal>Child</literal> mapping."
msgstr ""
"El caso subyacente de este comportamiento es que el enlace (la clave "
"for&#x00e1;nea <literal>parent_id</literal>) de <literal>p</literal> a "
"<literal>c</literal> no es considerado parte del estado del objeto "
"<literal>Child</literal> y por lo tanto no es creada en el <literal>INSERT</"
"literal>. De modo que la soluci&#x00f3;n es hacer el enlace parte del mapeo "
"del <literal>Child</literal>."

#. Tag: programlisting
#: example_parentchild.xml:137
#, no-c-format
msgid ""
"<![CDATA[<many-to-one name=\"parent\" column=\"parent_id\" not-null=\"true\"/"
">]]>"
msgstr ""
"<![CDATA[<many-to-one name=\"parent\" column=\"parent_id\" not-null=\"true\"/"
">]]>"

#. Tag: para
#: example_parentchild.xml:139
#, fuzzy, no-c-format
msgid ""
"You also need to add the <literal>parent</literal> property to the "
"<literal>Child</literal> class."
msgstr ""
"(Necesitamos adem&#x00e1;s a&#x00f1;adir la propiedad <literal>parent</"
"literal> a la clase <literal>Child</literal>.)"

#. Tag: para
#: example_parentchild.xml:143
#, fuzzy, no-c-format
msgid ""
"Now that the <literal>Child</literal> entity is managing the state of the "
"link, we tell the collection not to update the link. We use the "
"<literal>inverse</literal> attribute to do this:"
msgstr ""
"Ahora que la entidad <literal>Child</literal> est&#x00e1; gestionando el "
"estado del enlace, le decimos a la colecci&#x00f3;n que no actualice el "
"enlace. Usamos el atributo <literal>inverse</literal>."

#. Tag: programlisting
#: example_parentchild.xml:148
#, no-c-format
msgid ""
"<![CDATA[<set name=\"children\" inverse=\"true\">\n"
"    <key column=\"parent_id\"/>\n"
"    <one-to-many class=\"Child\"/>\n"
"</set>]]>"
msgstr ""
"<![CDATA[<set name=\"children\" inverse=\"true\">\n"
"    <key column=\"parent_id\"/>\n"
"    <one-to-many class=\"Child\"/>\n"
"</set>]]>"

#. Tag: para
#: example_parentchild.xml:150
#, fuzzy, no-c-format
msgid "The following code would be used to add a new <literal>Child</literal>:"
msgstr ""
"El siguiente c&#x00f3;digo podr&#x00ed;a ser usado para a&#x00f1;adir un "
"nuevo <literal>Child</literal>"

#. Tag: programlisting
#: example_parentchild.xml:154
#, no-c-format
msgid ""
"<![CDATA[Parent p = (Parent) session.load(Parent.class, pid);\n"
"Child c = new Child();\n"
"c.setParent(p);\n"
"p.getChildren().add(c);\n"
"session.save(c);\n"
"session.flush();]]>"
msgstr ""
"<![CDATA[Parent p = (Parent) session.load(Parent.class, pid);\n"
"Child c = new Child();\n"
"c.setParent(p);\n"
"p.getChildren().add(c);\n"
"session.save(c);\n"
"session.flush();]]>"

#. Tag: para
#: example_parentchild.xml:156
#, fuzzy, no-c-format
msgid "Only one SQL <literal>INSERT</literal> would now be issued."
msgstr ""
"Y ahora, &#x00a1;S&#x00f3;lo se publicar&#x00ed;a un <literal>INSERT</"
"literal> de SQL!"

#. Tag: para
#: example_parentchild.xml:160
#, fuzzy, no-c-format
msgid ""
"You could also create an <literal>addChild()</literal> method of "
"<literal>Parent</literal>."
msgstr ""
"Para ajustar un poco m&#x00e1;s las cosas, podr&#x00ed;amos crear un "
"m&#x00e9;todo <literal>addChild()</literal> en <literal>Parent</literal>."

#. Tag: programlisting
#: example_parentchild.xml:165
#, no-c-format
msgid ""
"<![CDATA[public void addChild(Child c) {\n"
"    c.setParent(this);\n"
"    children.add(c);\n"
"}]]>"
msgstr ""
"<![CDATA[public void addChild(Child c) {\n"
"    c.setParent(this);\n"
"    children.add(c);\n"
"}]]>"

#. Tag: para
#: example_parentchild.xml:167
#, fuzzy, no-c-format
msgid "The code to add a <literal>Child</literal> looks like this:"
msgstr ""
"Ahora, el c&#x00f3;digo para a&#x00f1;adir un <literal>Child</literal> se ve "
"as&#x00ed;"

#. Tag: programlisting
#: example_parentchild.xml:171
#, no-c-format
msgid ""
"<![CDATA[Parent p = (Parent) session.load(Parent.class, pid);\n"
"Child c = new Child();\n"
"p.addChild(c);\n"
"session.save(c);\n"
"session.flush();]]>"
msgstr ""
"<![CDATA[Parent p = (Parent) session.load(Parent.class, pid);\n"
"Child c = new Child();\n"
"p.addChild(c);\n"
"session.save(c);\n"
"session.flush();]]>"

#. Tag: title
#: example_parentchild.xml:176
#, no-c-format
msgid "Cascading life cycle"
msgstr "Ciclo de vida en cascada"

#. Tag: para
#: example_parentchild.xml:178
#, fuzzy, no-c-format
msgid ""
"You can address the frustrations of the explicit call to <literal>save()</"
"literal> by using cascades."
msgstr ""
"La llamada expl&#x00ed;cita a <literal>save()</literal> es a&#x00fa;n "
"molesta. Apuntaremos a esto usando tratamientos en cascada."

#. Tag: programlisting
#: example_parentchild.xml:183
#, no-c-format
msgid ""
"<![CDATA[<set name=\"children\" inverse=\"true\" cascade=\"all\">\n"
"    <key column=\"parent_id\"/>\n"
"    <one-to-many class=\"Child\"/>\n"
"</set>]]>"
msgstr ""
"<![CDATA[<set name=\"children\" inverse=\"true\" cascade=\"all\">\n"
"    <key column=\"parent_id\"/>\n"
"    <one-to-many class=\"Child\"/>\n"
"</set>]]>"

#. Tag: para
#: example_parentchild.xml:185
#, fuzzy, no-c-format
msgid "This simplifies the code above to:"
msgstr "Esto simplifica el c&#x00f3;digo anterior a"

#. Tag: programlisting
#: example_parentchild.xml:189
#, no-c-format
msgid ""
"<![CDATA[Parent p = (Parent) session.load(Parent.class, pid);\n"
"Child c = new Child();\n"
"p.addChild(c);\n"
"session.flush();]]>"
msgstr ""
"<![CDATA[Parent p = (Parent) session.load(Parent.class, pid);\n"
"Child c = new Child();\n"
"p.addChild(c);\n"
"session.flush();]]>"

#. Tag: para
#: example_parentchild.xml:191
#, fuzzy, no-c-format
msgid ""
"Similarly, we do not need to iterate over the children when saving or "
"deleting a <literal>Parent</literal>. The following removes <literal>p</"
"literal> and all its children from the database."
msgstr ""
"Similarmente, no necesitamos iterar los hijos al salvar o borrar un "
"<literal>Parent</literal>. Lo siguiente quita <literal>p</literal> y todos "
"sus hijos de la base de datos."

#. Tag: programlisting
#: example_parentchild.xml:196
#, no-c-format
msgid ""
"<![CDATA[Parent p = (Parent) session.load(Parent.class, pid);\n"
"session.delete(p);\n"
"session.flush();]]>"
msgstr ""
"<![CDATA[Parent p = (Parent) session.load(Parent.class, pid);\n"
"session.delete(p);\n"
"session.flush();]]>"

#. Tag: para
#: example_parentchild.xml:198
#, fuzzy, no-c-format
msgid "However, the following code:"
msgstr "Sin embargo, este c&#x00f3;digo"

#. Tag: programlisting
#: example_parentchild.xml:202
#, no-c-format
msgid ""
"<![CDATA[Parent p = (Parent) session.load(Parent.class, pid);\n"
"Child c = (Child) p.getChildren().iterator().next();\n"
"p.getChildren().remove(c);\n"
"c.setParent(null);\n"
"session.flush();]]>"
msgstr ""
"<![CDATA[Parent p = (Parent) session.load(Parent.class, pid);\n"
"Child c = (Child) p.getChildren().iterator().next();\n"
"p.getChildren().remove(c);\n"
"c.setParent(null);\n"
"session.flush();]]>"

#. Tag: para
#: example_parentchild.xml:204
#, fuzzy, no-c-format
msgid ""
"will not remove <literal>c</literal> from the database. In this case, it "
"will only remove the link to <literal>p</literal> and cause a <literal>NOT "
"NULL</literal> constraint violation. You need to explicitly <literal>delete()"
"</literal> the <literal>Child</literal>."
msgstr ""
"no quitar&#x00e1; <literal>c</literal> de la base de datos; s&#x00f3;lo "
"quitar&#x00e1; el enlace a <literal>p</literal> (y causar&#x00e1; una "
"violaci&#x00f3;n a una restricci&#x00f3;n <literal>NOT NULL</literal>). "
"Necesitas borrar el hijo expl&#x00ed;citamente llamando a <literal>delete()</"
"literal>."

#. Tag: programlisting
#: example_parentchild.xml:210
#, no-c-format
msgid ""
"<![CDATA[Parent p = (Parent) session.load(Parent.class, pid);\n"
"Child c = (Child) p.getChildren().iterator().next();\n"
"p.getChildren().remove(c);\n"
"session.delete(c);\n"
"session.flush();]]>"
msgstr ""
"<![CDATA[Parent p = (Parent) session.load(Parent.class, pid);\n"
"Child c = (Child) p.getChildren().iterator().next();\n"
"p.getChildren().remove(c);\n"
"session.delete(c);\n"
"session.flush();]]>"

#. Tag: para
#: example_parentchild.xml:212
#, fuzzy, no-c-format
msgid ""
"In our case, a <literal>Child</literal> cannot exist without its parent. So "
"if we remove a <literal>Child</literal> from the collection, we do want it "
"to be deleted. To do this, we must use <literal>cascade=\"all-delete-orphan"
"\"</literal>."
msgstr ""
"Ahora, en nuestro caso, un <literal>Child</literal> no puede existir "
"realmente sin su padre. De modo que si quitamos un <literal>Child</literal> "
"de la colecci&#x00f3;n, realmente queremos que sea borrado. Para esto, "
"debemos usar <literal>cascade=\"all-delete-orphan\"</literal>."

#. Tag: programlisting
#: example_parentchild.xml:218
#, no-c-format
msgid ""
"<![CDATA[<set name=\"children\" inverse=\"true\" cascade=\"all-delete-orphan"
"\">\n"
"    <key column=\"parent_id\"/>\n"
"    <one-to-many class=\"Child\"/>\n"
"</set>]]>"
msgstr ""
"<![CDATA[<set name=\"children\" inverse=\"true\" cascade=\"all-delete-orphan"
"\">\n"
"    <key column=\"parent_id\"/>\n"
"    <one-to-many class=\"Child\"/>\n"
"</set>]]>"

#. Tag: para
#: example_parentchild.xml:220
#, fuzzy, no-c-format
msgid ""
"Even though the collection mapping specifies <literal>inverse=\"true\"</"
"literal>, cascades are still processed by iterating the collection elements. "
"If you need an object be saved, deleted or updated by cascade, you must add "
"it to the collection. It is not enough to simply call <literal>setParent()</"
"literal>."
msgstr ""
"Nota: aunque el mapeo de la colecci&#x00f3;n especifique <literal>inverse="
"\"true\"</literal>, el tratamiento en cascada se procesa a&#x00fa;n al "
"iterar los elementos de colecci&#x00f3;n. De modo que si requieres que un "
"objeto sea salvado, borrado o actualizado en cascada, debes a&#x00f1;adirlo "
"a la colecci&#x00f3;n. No es suficiente con simplemente llamar a "
"<literal>setParent()</literal>."

#. Tag: title
#: example_parentchild.xml:230
#, no-c-format
msgid "Cascades and <literal>unsaved-value</literal>"
msgstr "Tratamiento en cascada y <literal>unsaved-value</literal>"

#. Tag: para
#: example_parentchild.xml:232
#, fuzzy, no-c-format
msgid ""
"Suppose we loaded up a <literal>Parent</literal> in one <literal>Session</"
"literal>, made some changes in a UI action and wanted to persist these "
"changes in a new session by calling <literal>update()</literal>. The "
"<literal>Parent</literal> will contain a collection of children and, since "
"the cascading update is enabled, Hibernate needs to know which children are "
"newly instantiated and which represent existing rows in the database. We "
"will also assume that both <literal>Parent</literal> and <literal>Child</"
"literal> have generated identifier properties of type <literal>Long</"
"literal>. Hibernate will use the identifier and version/timestamp property "
"value to determine which of the children are new. (See <xref linkend="
"\"objectstate-saveorupdate\"/>.) <emphasis>In Hibernate3, it is no longer "
"necessary to specify an <literal>unsaved-value</literal> explicitly.</"
"emphasis>"
msgstr ""
"Sup&#x00f3;n que hemos cargado un <literal>Parent</literal> en una "
"<literal>Session</literal>, hemos hecho algunos cambios en una acci&#x00f3;n "
"de UI y deseamos hacer persistentes estos cambios en una nueva sesi&#x00f3;n "
"llamando a <literal>update()</literal>. El <literal>Parent</literal> "
"contendr&#x00e1; una colecci&#x00f3;n de hijos y, ya que est&#x00e1; "
"habilitado el tratamiento en cascada, Hibernate necesita saber qu&#x00e9; "
"hijos est&#x00e1;n reci&#x00e9;n instanciados y cu&#x00e1;les representan "
"filas existentes en la base de datos. Asumamos que tanto <literal>Parent</"
"literal> como <literal>Child</literal> tienen propiedades identificadoras "
"generadas de tipo <literal>Long</literal>. Hibernate usar&#x00e1; el "
"identificador y el valor de la propiedad de versi&#x00f3;n/timestamp para "
"determinar cu&#x00e1;les de los hijos son nuevos. (Ver <xref linkend="
"\"objectstate-saveorupdate\"/>.) <emphasis>En Hibernate3, no es m&#x00e1;s "
"necesario especificar un <literal>unsaved-value</literal> expl&#x00ed;"
"citamente.</emphasis>"

#. Tag: para
#: example_parentchild.xml:244
#, fuzzy, no-c-format
msgid ""
"The following code will update <literal>parent</literal> and <literal>child</"
"literal> and insert <literal>newChild</literal>:"
msgstr ""
"The following code will update <literal>parent</literal> and <literal>child</"
"literal> and insert <literal>newChild</literal>."

#. Tag: programlisting
#: example_parentchild.xml:249
#, no-c-format
msgid ""
"<![CDATA[//parent and child were both loaded in a previous session\n"
"parent.addChild(child);\n"
"Child newChild = new Child();\n"
"parent.addChild(newChild);\n"
"session.update(parent);\n"
"session.flush();]]>"
msgstr ""
"<![CDATA[//parent and child were both loaded in a previous session\n"
"parent.addChild(child);\n"
"Child newChild = new Child();\n"
"parent.addChild(newChild);\n"
"session.update(parent);\n"
"session.flush();]]>"

#. Tag: para
#: example_parentchild.xml:251
#, fuzzy, no-c-format
msgid ""
"This may be suitable for the case of a generated identifier, but what about "
"assigned identifiers and composite identifiers? This is more difficult, "
"since Hibernate cannot use the identifier property to distinguish between a "
"newly instantiated object, with an identifier assigned by the user, and an "
"object loaded in a previous session. In this case, Hibernate will either use "
"the timestamp or version property, or will actually query the second-level "
"cache or, worst case, the database, to see if the row exists."
msgstr ""
"Bueno, todo eso est&#x00e1; muy bien para el caso de un identificador "
"generado, pero &#x00bf;qu&#x00e9; de los identificadores asignados y de los "
"identificadores compuestos? Esto es m&#x00e1;s dif&#x00ed;cil, ya que "
"Hibernate no puede usar la propiedad identificadora para distinguir entre un "
"objeto reci&#x00e9;n instanciado (con un identificador asignado por el "
"usuario) y un objeto cargado en una sesi&#x00f3;n previa. En este caso, "
"Hibernate bien usar&#x00e1; la propiedad de versi&#x00f3;n o timestamp, o "
"bien consultar&#x00e1; realmente el cach&#x00e9; de segundo nivel, o bien, "
"en el peor de los casos, la base de datos, para ver si existe la fila."

#. Tag: title
#: example_parentchild.xml:284
#, no-c-format
msgid "Conclusion"
msgstr "Conclusi&#x00f3;n"

#. Tag: para
#: example_parentchild.xml:286
#, fuzzy, no-c-format
msgid ""
"The sections we have just covered can be a bit confusing. However, in "
"practice, it all works out nicely. Most Hibernate applications use the "
"parent/child pattern in many places."
msgstr ""
"Hay que resumir un poco aqu&#x00ed; y podr&#x00ed;a parecer confuso a la "
"primera vez. Sin embargo, en la pr&#x00e1;ctica, todo funciona muy "
"agradablemente. La mayor&#x00ed;a de las aplicaciones de Hibernate usan el "
"patr&#x00f3;n padre / hijo en muchos sitios."

#. Tag: para
#: example_parentchild.xml:291
#, fuzzy, no-c-format
msgid ""
"We mentioned an alternative in the first paragraph. None of the above issues "
"exist in the case of <literal>&lt;composite-element&gt;</literal> mappings, "
"which have exactly the semantics of a parent/child relationship. "
"Unfortunately, there are two big limitations with composite element classes: "
"composite elements cannot own collections and they should not be the child "
"of any entity other than the unique parent."
msgstr ""
"Hemos mencionado una alternativa en el primer p&#x00e1;rrafo. Ninguno de los "
"temas anteriores existe en el caso de los mapeos <literal>&lt;composite-"
"element&gt;</literal>, que tienen exactamente la sem&#x00e1;ntica de una "
"relaci&#x00f3;n padre / hijo. Desafortunadamente, hay dos grandes "
"limitaciones para las clases de elementos compuestos: los elementos "
"compuestos no pueden poseer sus propias colecciones, y no deben ser el hijo "
"de cualquier otra entidad que no sea su padre &#x00fa;nico."

#~ msgid "ROLES_OF_TRANSLATORS"
#~ msgstr "<!--TRANS:ROLES_OF_TRANSLATORS-->"

#~ msgid "CREDIT_FOR_TRANSLATORS"
#~ msgstr "<!--TRANS:CREDIT_FOR_TRANSLATORS-->"
