msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"Report-Msgid-Bugs-To: http://bugs.kde.org\n"
"POT-Creation-Date: 2009-06-10 21:02+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#. Tag: title
#: example_mappings.xml:29
#, no-c-format
msgid "Example: Various Mappings"
msgstr "예제: 여러 가지 매핑들"

#. Tag: para
#: example_mappings.xml:32
#, fuzzy, no-c-format
msgid "This chapters explores some more complex association mappings."
msgstr "이 장은 몇몇 보다 복잡한 연관 매핑들을 보여준다."

#. Tag: title
#: example_mappings.xml:37
#, no-c-format
msgid "Employer/Employee"
msgstr "Employer/Employee"

#. Tag: para
#: example_mappings.xml:39
#, fuzzy, no-c-format
msgid ""
"The following model of the relationship between <literal>Employer</literal> "
"and <literal>Employee</literal> uses an entity class (<literal>Employment</"
"literal>) to represent the association. You can do this when there might be "
"more than one period of employment for the same two parties. Components are "
"used to model monetary values and employee names."
msgstr ""
"<literal>Employer</literal>와 <literal>Employee</literal> 사이의 관계에 대한 "
"다음 모형은 그 연관를 표현하는 데 실제 엔티티 클래스(<literal>Employment</"
"literal>)를 사용한다. 동일한 두 부분들에 대해 하나 이상의 채용 주기가 존재할 "
"수 있기 때문에 이것이 행해진다. 컴포넌트들이 화폐 값들과 종업원 이름들을 모형"
"화 시키는데 사용된다."

#. Tag: para
#: example_mappings.xml:56
#, fuzzy, no-c-format
msgid "Here is a possible mapping document:"
msgstr "다음은 가능한 매핑 문서이다:"

#. Tag: programlisting
#: example_mappings.xml:60
#, no-c-format
msgid ""
"<![CDATA[<hibernate-mapping>\n"
"        \n"
"    <class name=\"Employer\" table=\"employers\">\n"
"        <id name=\"id\">\n"
"            <generator class=\"sequence\">\n"
"                <param name=\"sequence\">employer_id_seq</param>\n"
"            </generator>\n"
"        </id>\n"
"        <property name=\"name\"/>\n"
"    </class>\n"
"\n"
"    <class name=\"Employment\" table=\"employment_periods\">\n"
"\n"
"        <id name=\"id\">\n"
"            <generator class=\"sequence\">\n"
"                <param name=\"sequence\">employment_id_seq</param>\n"
"            </generator>\n"
"        </id>\n"
"        <property name=\"startDate\" column=\"start_date\"/>\n"
"        <property name=\"endDate\" column=\"end_date\"/>\n"
"\n"
"        <component name=\"hourlyRate\" class=\"MonetaryAmount\">\n"
"            <property name=\"amount\">\n"
"                <column name=\"hourly_rate\" sql-type=\"NUMERIC(12, 2)\"/>\n"
"            </property>\n"
"            <property name=\"currency\" length=\"12\"/>\n"
"        </component>\n"
"\n"
"        <many-to-one name=\"employer\" column=\"employer_id\" not-null=\"true"
"\"/>\n"
"        <many-to-one name=\"employee\" column=\"employee_id\" not-null=\"true"
"\"/>\n"
"\n"
"    </class>\n"
"\n"
"    <class name=\"Employee\" table=\"employees\">\n"
"        <id name=\"id\">\n"
"            <generator class=\"sequence\">\n"
"                <param name=\"sequence\">employee_id_seq</param>\n"
"            </generator>\n"
"        </id>\n"
"        <property name=\"taxfileNumber\"/>\n"
"        <component name=\"name\" class=\"Name\">\n"
"            <property name=\"firstName\"/>\n"
"            <property name=\"initial\"/>\n"
"            <property name=\"lastName\"/>\n"
"        </component>\n"
"    </class>\n"
"\n"
"</hibernate-mapping>]]>"
msgstr ""

#. Tag: para
#: example_mappings.xml:62
#, fuzzy, no-c-format
msgid "Here is the table schema generated by <literal>SchemaExport</literal>."
msgstr ""
"그리고 다음은 <literal>SchemaExport</literal>에 의해 생성된 테이블 스키마이"
"다."

#. Tag: programlisting
#: example_mappings.xml:66
#, no-c-format
msgid ""
"<![CDATA[create table employers (\n"
"    id BIGINT not null, \n"
"    name VARCHAR(255), \n"
"    primary key (id)\n"
")\n"
"\n"
"create table employment_periods (\n"
"    id BIGINT not null,\n"
"    hourly_rate NUMERIC(12, 2),\n"
"    currency VARCHAR(12), \n"
"    employee_id BIGINT not null, \n"
"    employer_id BIGINT not null, \n"
"    end_date TIMESTAMP, \n"
"    start_date TIMESTAMP, \n"
"    primary key (id)\n"
")\n"
"\n"
"create table employees (\n"
"    id BIGINT not null, \n"
"    firstName VARCHAR(255), \n"
"    initial CHAR(1), \n"
"    lastName VARCHAR(255), \n"
"    taxfileNumber VARCHAR(255), \n"
"    primary key (id)\n"
")\n"
"\n"
"alter table employment_periods \n"
"    add constraint employment_periodsFK0 foreign key (employer_id) "
"references employers\n"
"alter table employment_periods \n"
"    add constraint employment_periodsFK1 foreign key (employee_id) "
"references employees\n"
"create sequence employee_id_seq\n"
"create sequence employment_id_seq\n"
"create sequence employer_id_seq]]>"
msgstr ""

#. Tag: title
#: example_mappings.xml:71
#, no-c-format
msgid "Author/Work"
msgstr "Author/Work"

#. Tag: para
#: example_mappings.xml:73
#, fuzzy, no-c-format
msgid ""
"Consider the following model of the relationships between <literal>Work</"
"literal>, <literal>Author</literal> and <literal>Person</literal>. In the "
"example, the relationship between <literal>Work</literal> and "
"<literal>Author</literal> is represented as a many-to-many association and "
"the relationship between <literal>Author</literal> and <literal>Person</"
"literal> is represented as one-to-one association. Another possibility would "
"be to have <literal>Author</literal> extend <literal>Person</literal>."
msgstr ""
"<literal>Work</literal>, <literal>Author</literal> 그리고 <literal>Person</"
"literal> 사이의 관계들에 대한 다음 모형을 검토하자. 우리는 <literal>Work</"
"literal>과 <literal>Author</literal> 사이의 관계를 many-to-many 연관으로 표현"
"한다. 우리는 <literal>Author</literal>와 <literal>Person</literal> 사이의 관"
"계를 one-to-one 연관으로 표현하고자 선택한다. 또 다른 가능성은 "
"<literal>Author</literal>가 <literal>Person</literal>을 확장하도록 하는 것일 "
"것이다."

#. Tag: para
#: example_mappings.xml:91
#, no-c-format
msgid ""
"The following mapping document correctly represents these relationships:"
msgstr "다음 매핑 문서는 이들 관계들을 정확하게 표현한다:"

#. Tag: programlisting
#: example_mappings.xml:95
#, no-c-format
msgid ""
"<![CDATA[<hibernate-mapping>\n"
"\n"
"    <class name=\"Work\" table=\"works\" discriminator-value=\"W\">\n"
"\n"
"        <id name=\"id\" column=\"id\">\n"
"            <generator class=\"native\"/>\n"
"        </id>\n"
"        <discriminator column=\"type\" type=\"character\"/>\n"
"\n"
"        <property name=\"title\"/>\n"
"        <set name=\"authors\" table=\"author_work\">\n"
"            <key column name=\"work_id\"/>\n"
"            <many-to-many class=\"Author\" column name=\"author_id\"/>\n"
"        </set>\n"
"\n"
"        <subclass name=\"Book\" discriminator-value=\"B\">\n"
"            <property name=\"text\"/>\n"
"        </subclass>\n"
"\n"
"        <subclass name=\"Song\" discriminator-value=\"S\">\n"
"            <property name=\"tempo\"/>\n"
"            <property name=\"genre\"/>\n"
"        </subclass>\n"
"\n"
"    </class>\n"
"\n"
"    <class name=\"Author\" table=\"authors\">\n"
"\n"
"        <id name=\"id\" column=\"id\">\n"
"            <!-- The Author must have the same identifier as the Person -->\n"
"            <generator class=\"assigned\"/> \n"
"        </id>\n"
"\n"
"        <property name=\"alias\"/>\n"
"        <one-to-one name=\"person\" constrained=\"true\"/>\n"
"\n"
"        <set name=\"works\" table=\"author_work\" inverse=\"true\">\n"
"            <key column=\"author_id\"/>\n"
"            <many-to-many class=\"Work\" column=\"work_id\"/>\n"
"        </set>\n"
"\n"
"    </class>\n"
"\n"
"    <class name=\"Person\" table=\"persons\">\n"
"        <id name=\"id\" column=\"id\">\n"
"            <generator class=\"native\"/>\n"
"        </id>\n"
"        <property name=\"name\"/>\n"
"    </class>\n"
"\n"
"</hibernate-mapping>]]>"
msgstr ""

#. Tag: para
#: example_mappings.xml:97
#, fuzzy, no-c-format
msgid ""
"There are four tables in this mapping: <literal>works</literal>, "
"<literal>authors</literal> and <literal>persons</literal> hold work, author "
"and person data respectively. <literal>author_work</literal> is an "
"association table linking authors to works. Here is the table schema, as "
"generated by <literal>SchemaExport</literal>:"
msgstr ""
"이 매핑에는 네 개의 테이블들이 존재한다. <literal>works</literal>, "
"<literal>authors</literal>와 <literal>persons</literal>은 각각 작업 데이터, "
"저자 데이터, 개인 데이터를 보관한다. <literal>author_work</literal>는 저자들"
"을 작업들에 연결시키는 연관 테이블이다. 다음은 <literal>SchemaExport</"
"literal>에 의해 생성된 테이블 스키마이다."

#. Tag: programlisting
#: example_mappings.xml:105
#, no-c-format
msgid ""
"<![CDATA[create table works (\n"
"    id BIGINT not null generated by default as identity, \n"
"    tempo FLOAT, \n"
"    genre VARCHAR(255), \n"
"    text INTEGER, \n"
"    title VARCHAR(255), \n"
"    type CHAR(1) not null, \n"
"    primary key (id)\n"
")\n"
"\n"
"create table author_work (\n"
"    author_id BIGINT not null, \n"
"    work_id BIGINT not null, \n"
"    primary key (work_id, author_id)\n"
")\n"
"\n"
"create table authors (\n"
"    id BIGINT not null generated by default as identity, \n"
"    alias VARCHAR(255), \n"
"    primary key (id)\n"
")\n"
"\n"
"create table persons (\n"
"    id BIGINT not null generated by default as identity, \n"
"    name VARCHAR(255), \n"
"    primary key (id)\n"
")\n"
"\n"
"alter table authors \n"
"    add constraint authorsFK0 foreign key (id) references persons\n"
"alter table author_work \n"
"    add constraint author_workFK0 foreign key (author_id) references "
"authors\n"
"alter table author_work\n"
"    add constraint author_workFK1 foreign key (work_id) references works]]>"
msgstr ""

#. Tag: title
#: example_mappings.xml:110
#, no-c-format
msgid "Customer/Order/Product"
msgstr "Customer/Order/Product"

#. Tag: para
#: example_mappings.xml:112
#, fuzzy, no-c-format
msgid ""
"In this section we consider a model of the relationships between "
"<literal>Customer</literal>, <literal>Order</literal>, <literal>Line Item</"
"literal> and <literal>Product</literal>. There is a one-to-many association "
"between <literal>Customer</literal> and <literal>Order</literal>, but how "
"can you represent <literal>Order</literal> / <literal>LineItem</literal> / "
"<literal>Product</literal>? In the example, <literal>LineItem</literal> is "
"mapped as an association class representing the many-to-many association "
"between <literal>Order</literal> and <literal>Product</literal>. In "
"Hibernate this is called a composite element."
msgstr ""
"이제 <literal>Customer</literal>, <literal>Order</literal>와 "
"<literal>LineItem</literal> 그리고 <literal>Product</literal> 사이의 관계들"
"에 관한 모형을 검토하자. <literal>Customer</literal>와 <literal>Order</"
"literal> 사이의 one-to-many 연관이 존재하지만, 우리는 어떻게 <literal>Order</"
"literal> / <literal>LineItem</literal> / <literal>Product</literal>를 표현할 "
"것인가? 나는 <literal>Order</literal>와 <literal>Product</literal> 사이의 "
"many-to-many 연관를 나타내는 하나의 연관 클래스로서 <literal>LineItem</"
"literal>을 매핑하기로 선택했다. Hibernate에서 이것은 composite 요소로 명명된"
"다."

#. Tag: para
#: example_mappings.xml:132
#, fuzzy, no-c-format
msgid "The mapping document will look like this:"
msgstr "매핑 문서:"

#. Tag: programlisting
#: example_mappings.xml:136
#, no-c-format
msgid ""
"<![CDATA[<hibernate-mapping>\n"
"\n"
"    <class name=\"Customer\" table=\"customers\">\n"
"        <id name=\"id\">\n"
"            <generator class=\"native\"/>\n"
"        </id>\n"
"        <property name=\"name\"/>\n"
"        <set name=\"orders\" inverse=\"true\">\n"
"            <key column=\"customer_id\"/>\n"
"            <one-to-many class=\"Order\"/>\n"
"        </set>\n"
"    </class>\n"
"\n"
"    <class name=\"Order\" table=\"orders\">\n"
"        <id name=\"id\">\n"
"            <generator class=\"native\"/>\n"
"        </id>\n"
"        <property name=\"date\"/>\n"
"        <many-to-one name=\"customer\" column=\"customer_id\"/>\n"
"        <list name=\"lineItems\" table=\"line_items\">\n"
"            <key column=\"order_id\"/>\n"
"            <list-index column=\"line_number\"/>\n"
"            <composite-element class=\"LineItem\">\n"
"                <property name=\"quantity\"/>\n"
"                <many-to-one name=\"product\" column=\"product_id\"/>\n"
"            </composite-element>\n"
"        </list>\n"
"    </class>\n"
"\n"
"    <class name=\"Product\" table=\"products\">\n"
"        <id name=\"id\">\n"
"            <generator class=\"native\"/>\n"
"        </id>\n"
"        <property name=\"serialNumber\"/>\n"
"    </class>\n"
"\n"
"</hibernate-mapping>]]>"
msgstr ""

#. Tag: para
#: example_mappings.xml:138
#, no-c-format
msgid ""
"<literal>customers</literal>, <literal>orders</literal>, "
"<literal>line_items</literal> and <literal>products</literal> hold customer, "
"order, order line item and product data respectively. <literal>line_items</"
"literal> also acts as an association table linking orders with products."
msgstr ""
"<literal>customers</literal>, <literal>orders</literal>, "
"<literal>line_items</literal> 그리고 <literal>products</literal>는 각각 고객 "
"데이터, 주문 데이터, 주문 라인 아이템 데이터, 그리고 제품 데이터를 보관한다. "
"<literal>line_items</literal>는 또한 주문들을 제품들과 연결시키는 연관 테이블"
"로서 동작한다."

#. Tag: programlisting
#: example_mappings.xml:145
#, no-c-format
msgid ""
"<![CDATA[create table customers (\n"
"    id BIGINT not null generated by default as identity, \n"
"    name VARCHAR(255), \n"
"    primary key (id)\n"
")\n"
"\n"
"create table orders (\n"
"    id BIGINT not null generated by default as identity, \n"
"    customer_id BIGINT, \n"
"    date TIMESTAMP, \n"
"    primary key (id)\n"
")\n"
"\n"
"create table line_items (\n"
"    line_number INTEGER not null, \n"
"    order_id BIGINT not null, \n"
"    product_id BIGINT, \n"
"    quantity INTEGER, \n"
"    primary key (order_id, line_number)\n"
")\n"
"\n"
"create table products (\n"
"    id BIGINT not null generated by default as identity, \n"
"    serialNumber VARCHAR(255), \n"
"    primary key (id)\n"
")\n"
"\n"
"alter table orders \n"
"    add constraint ordersFK0 foreign key (customer_id) references customers\n"
"alter table line_items\n"
"    add constraint line_itemsFK0 foreign key (product_id) references "
"products\n"
"alter table line_items\n"
"    add constraint line_itemsFK1 foreign key (order_id) references orders]]>"
msgstr ""

#. Tag: title
#: example_mappings.xml:150
#, no-c-format
msgid "Miscellaneous example mappings"
msgstr "기타 예제 매핑들"

#. Tag: para
#: example_mappings.xml:152
#, fuzzy, no-c-format
msgid ""
"These examples are available from the Hibernate test suite. You will find "
"many other useful example mappings there by searching in the <literal>test</"
"literal> folder of the Hibernate distribution."
msgstr ""
"이들 예제들은 모두 Hiberante test suite로부터 취했다. 당신은 거기서 많은 다"
"른 유용한 예제 매핑들을 발견할 것이다. Hibernate 배포본의 <literal>test</"
"literal> 폴더를 살펴보라."

#. Tag: title
#: example_mappings.xml:161
#, no-c-format
msgid "\"Typed\" one-to-one association"
msgstr "\"형식화된(Typed)\" one-to-one 연관"

#. Tag: programlisting
#: example_mappings.xml:162
#, no-c-format
msgid ""
"<![CDATA[<class name=\"Person\">\n"
"    <id name=\"name\"/>\n"
"    <one-to-one name=\"address\" \n"
"            cascade=\"all\">\n"
"        <formula>name</formula>\n"
"        <formula>'HOME'</formula>\n"
"    </one-to-one>\n"
"    <one-to-one name=\"mailingAddress\" \n"
"            cascade=\"all\">\n"
"        <formula>name</formula>\n"
"        <formula>'MAILING'</formula>\n"
"    </one-to-one>\n"
"</class>\n"
"\n"
"<class name=\"Address\" batch-size=\"2\" \n"
"        check=\"addressType in ('MAILING', 'HOME', 'BUSINESS')\">\n"
"    <composite-id>\n"
"        <key-many-to-one name=\"person\" \n"
"                column=\"personName\"/>\n"
"        <key-property name=\"type\" \n"
"                column=\"addressType\"/>\n"
"    </composite-id>\n"
"    <property name=\"street\" type=\"text\"/>\n"
"    <property name=\"state\"/>\n"
"    <property name=\"zip\"/>\n"
"</class>]]>"
msgstr ""

#. Tag: title
#: example_mappings.xml:166
#, no-c-format
msgid "Composite key example"
msgstr "Composite 키 예제"

#. Tag: programlisting
#: example_mappings.xml:167
#, no-c-format
msgid ""
"<![CDATA[<class name=\"Customer\">\n"
"\n"
"    <id name=\"customerId\"\n"
"        length=\"10\">\n"
"        <generator class=\"assigned\"/>\n"
"    </id>\n"
"\n"
"    <property name=\"name\" not-null=\"true\" length=\"100\"/>\n"
"    <property name=\"address\" not-null=\"true\" length=\"200\"/>\n"
"\n"
"    <list name=\"orders\"\n"
"            inverse=\"true\"\n"
"            cascade=\"save-update\">\n"
"        <key column=\"customerId\"/>\n"
"        <index column=\"orderNumber\"/>\n"
"        <one-to-many class=\"Order\"/>\n"
"    </list>\n"
"\n"
"</class>\n"
"\n"
"<class name=\"Order\" table=\"CustomerOrder\" lazy=\"true\">\n"
"    <synchronize table=\"LineItem\"/>\n"
"    <synchronize table=\"Product\"/>\n"
"    \n"
"    <composite-id name=\"id\" \n"
"            class=\"Order$Id\">\n"
"        <key-property name=\"customerId\" length=\"10\"/>\n"
"        <key-property name=\"orderNumber\"/>\n"
"    </composite-id>\n"
"    \n"
"    <property name=\"orderDate\" \n"
"            type=\"calendar_date\"\n"
"            not-null=\"true\"/>\n"
"    \n"
"    <property name=\"total\">\n"
"        <formula>\n"
"            ( select sum(li.quantity*p.price) \n"
"            from LineItem li, Product p \n"
"            where li.productId = p.productId \n"
"                and li.customerId = customerId \n"
"                and li.orderNumber = orderNumber )\n"
"        </formula>\n"
"    </property>\n"
"    \n"
"    <many-to-one name=\"customer\"\n"
"            column=\"customerId\"\n"
"            insert=\"false\"\n"
"            update=\"false\" \n"
"            not-null=\"true\"/>\n"
"        \n"
"    <bag name=\"lineItems\"\n"
"            fetch=\"join\" \n"
"            inverse=\"true\"\n"
"            cascade=\"save-update\">\n"
"        <key>\n"
"            <column name=\"customerId\"/>\n"
"            <column name=\"orderNumber\"/>\n"
"        </key>\n"
"        <one-to-many class=\"LineItem\"/>\n"
"    </bag>\n"
"    \n"
"</class>\n"
"    \n"
"<class name=\"LineItem\">\n"
"    \n"
"    <composite-id name=\"id\" \n"
"            class=\"LineItem$Id\">\n"
"        <key-property name=\"customerId\" length=\"10\"/>\n"
"        <key-property name=\"orderNumber\"/>\n"
"        <key-property name=\"productId\" length=\"10\"/>\n"
"    </composite-id>\n"
"    \n"
"    <property name=\"quantity\"/>\n"
"    \n"
"    <many-to-one name=\"order\"\n"
"            insert=\"false\"\n"
"            update=\"false\" \n"
"            not-null=\"true\">\n"
"        <column name=\"customerId\"/>\n"
"        <column name=\"orderNumber\"/>\n"
"    </many-to-one>\n"
"    \n"
"    <many-to-one name=\"product\"\n"
"            insert=\"false\"\n"
"            update=\"false\" \n"
"            not-null=\"true\"\n"
"            column=\"productId\"/>\n"
"        \n"
"</class>\n"
"\n"
"<class name=\"Product\">\n"
"    <synchronize table=\"LineItem\"/>\n"
"\n"
"    <id name=\"productId\"\n"
"        length=\"10\">\n"
"        <generator class=\"assigned\"/>\n"
"    </id>\n"
"    \n"
"    <property name=\"description\" \n"
"        not-null=\"true\" \n"
"        length=\"200\"/>\n"
"    <property name=\"price\" length=\"3\"/>\n"
"    <property name=\"numberAvailable\"/>\n"
"    \n"
"    <property name=\"numberOrdered\">\n"
"        <formula>\n"
"            ( select sum(li.quantity) \n"
"            from LineItem li \n"
"            where li.productId = productId )\n"
"        </formula>\n"
"    </property>\n"
"    \n"
"</class>]]>"
msgstr ""

#. Tag: title
#: example_mappings.xml:171
#, no-c-format
msgid "Many-to-many with shared composite key attribute"
msgstr "공유된 합성 키 속성을 가진 Many-to-many"

#. Tag: programlisting
#: example_mappings.xml:172
#, no-c-format
msgid ""
"<![CDATA[<class name=\"User\" table=\"`User`\">\n"
"    <composite-id>\n"
"        <key-property name=\"name\"/>\n"
"        <key-property name=\"org\"/>\n"
"    </composite-id>\n"
"    <set name=\"groups\" table=\"UserGroup\">\n"
"        <key>\n"
"            <column name=\"userName\"/>\n"
"            <column name=\"org\"/>\n"
"        </key>\n"
"        <many-to-many class=\"Group\">\n"
"            <column name=\"groupName\"/>\n"
"            <formula>org</formula>\n"
"        </many-to-many>\n"
"    </set>\n"
"</class>\n"
"    \n"
"<class name=\"Group\" table=\"`Group`\">\n"
"    <composite-id>\n"
"        <key-property name=\"name\"/>\n"
"        <key-property name=\"org\"/>\n"
"    </composite-id>\n"
"    <property name=\"description\"/>\n"
"    <set name=\"users\" table=\"UserGroup\" inverse=\"true\">\n"
"        <key>\n"
"            <column name=\"groupName\"/>\n"
"            <column name=\"org\"/>\n"
"        </key>\n"
"        <many-to-many class=\"User\">\n"
"            <column name=\"userName\"/>\n"
"            <formula>org</formula>\n"
"        </many-to-many>\n"
"    </set>\n"
"</class>\n"
"]]>"
msgstr ""

#. Tag: title
#: example_mappings.xml:176
#, no-c-format
msgid "Content based discrimination"
msgstr "내용 기반 판별"

#. Tag: programlisting
#: example_mappings.xml:177
#, no-c-format
msgid ""
"<![CDATA[<class name=\"Person\"\n"
"    discriminator-value=\"P\">\n"
"    \n"
"    <id name=\"id\" \n"
"        column=\"person_id\" \n"
"        unsaved-value=\"0\">\n"
"        <generator class=\"native\"/>\n"
"    </id>\n"
"    \n"
"            \n"
"    <discriminator \n"
"        type=\"character\">\n"
"        <formula>\n"
"            case \n"
"                when title is not null then 'E' \n"
"                when salesperson is not null then 'C' \n"
"                else 'P' \n"
"            end\n"
"        </formula>\n"
"    </discriminator>\n"
"\n"
"    <property name=\"name\" \n"
"        not-null=\"true\"\n"
"        length=\"80\"/>\n"
"        \n"
"    <property name=\"sex\" \n"
"        not-null=\"true\"\n"
"        update=\"false\"/>\n"
"    \n"
"    <component name=\"address\">\n"
"        <property name=\"address\"/>\n"
"        <property name=\"zip\"/>\n"
"        <property name=\"country\"/>\n"
"    </component>\n"
"    \n"
"    <subclass name=\"Employee\" \n"
"        discriminator-value=\"E\">\n"
"            <property name=\"title\"\n"
"                length=\"20\"/>\n"
"            <property name=\"salary\"/>\n"
"            <many-to-one name=\"manager\"/>\n"
"    </subclass>\n"
"    \n"
"    <subclass name=\"Customer\" \n"
"        discriminator-value=\"C\">\n"
"            <property name=\"comments\"/>\n"
"            <many-to-one name=\"salesperson\"/>\n"
"    </subclass>\n"
"    \n"
"</class>]]>"
msgstr ""

#. Tag: title
#: example_mappings.xml:181
#, no-c-format
msgid "Associations on alternate keys"
msgstr "대체 키들에 대한 연관들"

#. Tag: programlisting
#: example_mappings.xml:182
#, no-c-format
msgid ""
"<![CDATA[<class name=\"Person\">\n"
"    \n"
"    <id name=\"id\">\n"
"        <generator class=\"hilo\"/>\n"
"    </id>\n"
"    \n"
"    <property name=\"name\" length=\"100\"/>\n"
"    \n"
"    <one-to-one name=\"address\" \n"
"        property-ref=\"person\"\n"
"        cascade=\"all\"\n"
"        fetch=\"join\"/>\n"
"    \n"
"    <set name=\"accounts\" \n"
"        inverse=\"true\">\n"
"        <key column=\"userId\"\n"
"            property-ref=\"userId\"/>\n"
"        <one-to-many class=\"Account\"/>\n"
"    </set>\n"
"    \n"
"    <property name=\"userId\" length=\"8\"/>\n"
"\n"
"</class>\n"
"\n"
"<class name=\"Address\">\n"
"\n"
"    <id name=\"id\">\n"
"        <generator class=\"hilo\"/>\n"
"    </id>\n"
"\n"
"    <property name=\"address\" length=\"300\"/>\n"
"    <property name=\"zip\" length=\"5\"/>\n"
"    <property name=\"country\" length=\"25\"/>\n"
"    <many-to-one name=\"person\" unique=\"true\" not-null=\"true\"/>\n"
"\n"
"</class>\n"
"\n"
"<class name=\"Account\">\n"
"    <id name=\"accountId\" length=\"32\">\n"
"        <generator class=\"uuid\"/>\n"
"    </id>\n"
"    \n"
"    <many-to-one name=\"user\"\n"
"        column=\"userId\"\n"
"        property-ref=\"userId\"/>\n"
"    \n"
"    <property name=\"type\" not-null=\"true\"/>\n"
"    \n"
"</class>]]>"
msgstr ""

#~ msgid "TODO: put words around this stuff"
#~ msgstr "TODO: 이 내용을 둘러싼 말들을 집어넣을 것."
