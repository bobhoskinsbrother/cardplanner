msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"Report-Msgid-Bugs-To: http://bugs.kde.org\n"
"POT-Creation-Date: 2009-06-10 21:02+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#. Tag: title
#: session_api.xml:29
#, no-c-format
msgid "Working with objects"
msgstr "Trabalhando com objetos"

#. Tag: para
#: session_api.xml:31
#, fuzzy, no-c-format
msgid ""
"Hibernate is a full object/relational mapping solution that not only shields "
"the developer from the details of the underlying database management system, "
"but also offers <emphasis>state management</emphasis> of objects. This is, "
"contrary to the management of SQL <literal>statements</literal> in common "
"JDBC/SQL persistence layers, a natural object-oriented view of persistence "
"in Java applications."
msgstr ""
"O Hibernate é uma solução completa de mapeamento objeto/relacional que não "
"apenas poupa o desenvolvedor dos detalhes de baixo nível do sistema de "
"gerenciamento do banco de dados, mas também oferece um "
"<emphasis>gerenciamento de estado </emphasis> para objetos. Isto é, ao "
"contrário do gerenciamento de <literal>instruções </literal> SQL em camadas "
"de persistência JDBC/SQL comuns, uma visão natural da persistência orientada "
"a objetos em aplicações Java."

#. Tag: para
#: session_api.xml:40
#, no-c-format
msgid ""
"In other words, Hibernate application developers should always think about "
"the <emphasis>state</emphasis> of their objects, and not necessarily about "
"the execution of SQL statements. This part is taken care of by Hibernate and "
"is only relevant for the application developer when tuning the performance "
"of the system."
msgstr ""
"Em outras palavras, desenvolvedores de aplicações Hibernate podem sempre "
"pensar em relação ao <emphasis>estado</emphasis> de seus objetos, e não "
"necessariamente em relação a execução de instruções SQL. Este parte é "
"responsabilidade do Hibernate e é relevante aos desenvolvedores de "
"aplicações apenas quando estão ajustando a performance do sistema."

#. Tag: title
#: session_api.xml:48
#, no-c-format
msgid "Hibernate object states"
msgstr "Estado dos objetos no Hibernate"

#. Tag: para
#: session_api.xml:50
#, no-c-format
msgid "Hibernate defines and supports the following object states:"
msgstr "O Hibernate define e suporta os seguintes estados de um objetos:"

#. Tag: para
#: session_api.xml:56
#, fuzzy, no-c-format
msgid ""
"<emphasis>Transient</emphasis> - an object is transient if it has just been "
"instantiated using the <literal>new</literal> operator, and it is not "
"associated with a Hibernate <literal>Session</literal>. It has no persistent "
"representation in the database and no identifier value has been assigned. "
"Transient instances will be destroyed by the garbage collector if the "
"application does not hold a reference anymore. Use the Hibernate "
"<literal>Session</literal> to make an object persistent (and let Hibernate "
"take care of the SQL statements that need to be executed for this "
"transition)."
msgstr ""
"<emphasis>Transient</emphasis> - um objeto é transiente se ele foi "
"instanciando usando apenas o operador <literal>new</literal>, e não foi "
"associado com uma <literal>Session</literal> do Hibernate. Ele não terá uma "
"representação persistente no banco de dados e nenhum identificador será "
"atribuído para ele. Instâncias transientes serão destruídas pelo coletor de "
"lixo se a aplicação não manter sua referência. Use uma <literal>Session</"
"literal> do Hibernate para tornar o objeto persistente ( e deixe o Hibernate "
"gerenciar as instruções SQL que serão necessárias para executar esta "
"transição)."

#. Tag: para
#: session_api.xml:68
#, fuzzy, no-c-format
msgid ""
"<emphasis>Persistent</emphasis> - a persistent instance has a representation "
"in the database and an identifier value. It might just have been saved or "
"loaded, however, it is by definition in the scope of a <literal>Session</"
"literal>. Hibernate will detect any changes made to an object in persistent "
"state and synchronize the state with the database when the unit of work "
"completes. Developers do not execute manual <literal>UPDATE</literal> "
"statements, or <literal>DELETE</literal> statements when an object should be "
"made transient."
msgstr ""
"<emphasis>Persistent</emphasis> -– uma instância persistente possui uma "
"representação no banco de dados e um identificador. Ele pode ter sido salvo "
"ou carregado, assim, ele está por definição no escopo de uma "
"<literal>Session</literal>. O Hibernate irá detectar qualquer mudança feita "
"a um objeto persistente e sincronizar o seu estado com o banco de dados "
"quando completar a unidade de trabalho. Desenvolvedores não executam "
"instruções manuais de <literal>UPDATE</literal>, ou instruções de "
"<literal>DELETE</literal> quando o objeto deve ser passado para transiente."

#. Tag: para
#: session_api.xml:79
#, fuzzy, no-c-format
msgid ""
"<emphasis>Detached</emphasis> - a detached instance is an object that has "
"been persistent, but its <literal>Session</literal> has been closed. The "
"reference to the object is still valid, of course, and the detached instance "
"might even be modified in this state. A detached instance can be reattached "
"to a new <literal>Session</literal> at a later point in time, making it (and "
"all the modifications) persistent again. This feature enables a programming "
"model for long running units of work that require user think-time. We call "
"them <emphasis>application transactions</emphasis>, i.e., a unit of work "
"from the point of view of the user."
msgstr ""
"<emphasis>Detached</emphasis> – uma instância desaclopada é um objeto que "
"foi persistido, mas sua <literal>Session</literal> foi fechada. A referência "
"ao objeto continua válida, é claro, e a instância destacada desaclopada pode "
"ser acoplada a uma nova <literal>Session</literal> no futuro, fazendo-o ( e "
"todas as modificações sofridas) persistente novamente. Essa característica "
"possibilita um modelo de programação para unidades de trabalho que rodam "
"durante muito tempo que requer um pensamento por tempo do usuário. Podemos "
"chamar-las de <emphasis>transações da aplicação</emphasis>, i.e. uma unidade "
"de trabalho do ponto de vista do usuário."

#. Tag: para
#: session_api.xml:93
#, fuzzy, no-c-format
msgid ""
"We will now discuss the states and state transitions (and the Hibernate "
"methods that trigger a transition) in more detail."
msgstr ""
"Agora iremos discutir os estados e suas transições ( e os métodos do "
"Hibernate que disparam uma transição) em mais detalhes."

#. Tag: title
#: session_api.xml:101
#, no-c-format
msgid "Making objects persistent"
msgstr "Tornando os objetos persistentes"

#. Tag: para
#: session_api.xml:103
#, no-c-format
msgid ""
"Newly instantiated instances of a a persistent class are considered "
"<emphasis>transient</emphasis> by Hibernate. We can make a transient "
"instance <emphasis>persistent</emphasis> by associating it with a session:"
msgstr ""
"Instâncias recentemente instanciadas de uma classe persistente são "
"consideradas <emphasis>transientes </emphasis> pelo Hibernate. Podemos "
"tornar uma instância transiente em <emphasis>persistente</emphasis> "
"associando-a a uma sessão:"

#. Tag: programlisting
#: session_api.xml:110
#, no-c-format
msgid ""
"<![CDATA[DomesticCat fritz = new DomesticCat();\n"
"fritz.setColor(Color.GINGER);\n"
"fritz.setSex('M');\n"
"fritz.setName(\"Fritz\");\n"
"Long generatedId = (Long) sess.save(fritz);]]>"
msgstr ""

#. Tag: para
#: session_api.xml:112
#, fuzzy, no-c-format
msgid ""
"If <literal>Cat</literal> has a generated identifier, the identifier is "
"generated and assigned to the <literal>cat</literal> when <literal>save()</"
"literal> is called. If <literal>Cat</literal> has an <literal>assigned</"
"literal> identifier, or a composite key, the identifier should be assigned "
"to the <literal>cat</literal> instance before calling <literal>save()</"
"literal>. You can also use <literal>persist()</literal> instead of "
"<literal>save()</literal>, with the semantics defined in the EJB3 early "
"draft."
msgstr ""
"Se <literal>Cat</literal> possui um identificador gerado, o identificador é "
"gerado e atribuído a <literal>cat</literal> quando <literal>save()</literal> "
"for chamada. Se <literal>Cat</literal> possuir um identificador "
"<literal>Associado</literal>, ou uma chave composta, o identificador deve "
"ser atribuído à instância de <literal>cat</literal> antes que <literal>save()"
"</literal> seja chamado. Pode-se usar também <literal>persist()</literal> ao "
"invés de <literal>save()</literal>, com a semântica definada no novo esboço "
"do EJB3."

#. Tag: para
#: session_api.xml:124
#, fuzzy, no-c-format
msgid ""
"<literal>persist()</literal> makes a transient instance persistent. However, "
"it does not guarantee that the identifier value will be assigned to the "
"persistent instance immediately, the assignment might happen at flush time. "
"<literal>persist()</literal> also guarantees that it will not execute an "
"<literal>INSERT</literal> statement if it is called outside of transaction "
"boundaries. This is useful in long-running conversations with an extended "
"Session/persistence context."
msgstr ""
"<literal>persist()</literal> makes a transient instance persistent. However, "
"it doesn't guarantee that the identifier value will be assigned to the "
"persistent instance immediately, the assignment might happen at flush time. "
"<literal>persist()</literal> also guarantees that it will not execute an "
"<literal>INSERT</literal> statement if it is called outside of transaction "
"boundaries. This is useful in long-running conversations with an extended "
"Session/persistence context."

#. Tag: para
#: session_api.xml:135
#, no-c-format
msgid ""
"<literal>save()</literal> does guarantee to return an identifier. If an "
"INSERT has to be executed to get the identifier ( e.g. \"identity\" "
"generator, not \"sequence\"), this INSERT happens immediately, no matter if "
"you are inside or outside of a transaction. This is problematic in a long-"
"running conversation with an extended Session/persistence context."
msgstr ""
"<literal>save()</literal> does guarantee to return an identifier. If an "
"INSERT has to be executed to get the identifier ( e.g. \"identity\" "
"generator, not \"sequence\"), this INSERT happens immediately, no matter if "
"you are inside or outside of a transaction. This is problematic in a long-"
"running conversation with an extended Session/persistence context."

#. Tag: para
#: session_api.xml:145
#, fuzzy, no-c-format
msgid ""
"Alternatively, you can assign the identifier using an overloaded version of "
"<literal>save()</literal>."
msgstr ""
"Alternativamente, pode-se atribuir o identificador usando uma versão "
"sobrecarregada de <literal>save()</literal>."

#. Tag: programlisting
#: session_api.xml:150
#, no-c-format
msgid ""
"<![CDATA[DomesticCat pk = new DomesticCat();\n"
"pk.setColor(Color.TABBY);\n"
"pk.setSex('F');\n"
"pk.setName(\"PK\");\n"
"pk.setKittens( new HashSet() );\n"
"pk.addKitten(fritz);\n"
"sess.save( pk, new Long(1234) );]]>"
msgstr ""

#. Tag: para
#: session_api.xml:152
#, fuzzy, no-c-format
msgid ""
"If the object you make persistent has associated objects (e.g. the "
"<literal>kittens</literal> collection in the previous example), these "
"objects can be made persistent in any order you like unless you have a "
"<literal>NOT NULL</literal> constraint upon a foreign key column. There is "
"never a risk of violating foreign key constraints. However, you might "
"violate a <literal>NOT NULL</literal> constraint if you <literal>save()</"
"literal> the objects in the wrong order."
msgstr ""
"Se o objeto persistido possuir objetos associados (e.g. a coleção "
"<literal>kittens</literal> no exemplo anterior), esses objetos podem ser "
"tornar persistente em qualquer ordem que se queira ao menos que se tenha uma "
"restrição <literal>NOT NULL</literal> em uma coluna de chave estrangeira. "
"Nunca há risco de violação de restrições de chave estrangeira. Assim, pode-"
"se violar uma restrição <literal>NOT NULL</literal> se <literal>save()</"
"literal> for usada nos objetos em uma ordem errada."

#. Tag: para
#: session_api.xml:162
#, fuzzy, no-c-format
msgid ""
"Usually you do not bother with this detail, as you will normally use "
"Hibernate's <emphasis>transitive persistence</emphasis> feature to save the "
"associated objects automatically. Then, even <literal>NOT NULL</literal> "
"constraint violations do not occur - Hibernate will take care of everything. "
"Transitive persistence is discussed later in this chapter."
msgstr ""
"Geralmente você não deve se importar com esses detalhes, muito provavelmente "
"se usará a característica de <emphasis>persistência transitiva </emphasis> "
"do Hibernate para salvar os objetos associados automaticamente. Então, "
"enquanto uma restrição <literal>NOT NULL</literal> não ocorrer – Hibernate "
"tomará conta de tudo. Persistência transitiva será discutida futuramente "
"nesse capítulo."

#. Tag: title
#: session_api.xml:173
#, no-c-format
msgid "Loading an object"
msgstr "Carregando o objetos"

#. Tag: para
#: session_api.xml:175
#, fuzzy, no-c-format
msgid ""
"The <literal>load()</literal> methods of <literal>Session</literal> provide "
"a way of retrieving a persistent instance if you know its identifier. "
"<literal>load()</literal> takes a class object and loads the state into a "
"newly instantiated instance of that class in a persistent state."
msgstr ""
"O método <literal>load()</literal> de uma <literal> Session</literal> nos "
"fornece um meio para recuperar uma instância persistente se o identificador "
"for conhecido. <literal>load()</literal> recebe uma classe do objeto e "
"carregará o estado em uma instância mais recente dessa classe, no estado "
"persistente."

#. Tag: programlisting
#: session_api.xml:182
#, no-c-format
msgid "<![CDATA[Cat fritz = (Cat) sess.load(Cat.class, generatedId);]]>"
msgstr ""

#. Tag: programlisting
#: session_api.xml:184
#, no-c-format
msgid ""
"<![CDATA[// you need to wrap primitive identifiers\n"
"long id = 1234;\n"
"DomesticCat pk = (DomesticCat) sess.load( DomesticCat.class, new Long"
"(id) );]]>"
msgstr ""

#. Tag: para
#: session_api.xml:186
#, no-c-format
msgid "Alternatively, you can load state into a given instance:"
msgstr ""
"Alternatively, you can load state into a given instance: Alternativamente, "
"pode-se carregar um estado em uma instância dada:"

#. Tag: programlisting
#: session_api.xml:190
#, no-c-format
msgid ""
"<![CDATA[Cat cat = new DomesticCat();\n"
"// load pk's state into cat\n"
"sess.load( cat, new Long(pkId) );\n"
"Set kittens = cat.getKittens();]]>"
msgstr ""

#. Tag: para
#: session_api.xml:192
#, fuzzy, no-c-format
msgid ""
"Be aware that <literal>load()</literal> will throw an unrecoverable "
"exception if there is no matching database row. If the class is mapped with "
"a proxy, <literal>load()</literal> just returns an uninitialized proxy and "
"does not actually hit the database until you invoke a method of the proxy. "
"This is useful if you wish to create an association to an object without "
"actually loading it from the database. It also allows multiple instances to "
"be loaded as a batch if <literal>batch-size</literal> is defined for the "
"class mapping."
msgstr ""
"Repare que <literal>load()</literal> irá lançar uma exceção irrecuperável se "
"não houver na tabela no banco de dados um registro que combine. Se a classe "
"for mapeada com um proxy, <literal>load()</literal> simplesmente retorna um "
"proxy não inicializado e realmente não chamará o banco de dados até que um "
"método do proxy seja invocado. Esse comportamento é muito útil se deseja-se "
"criar uma associação com um objeto sem que realmente o carregue do bando de "
"dados. Isto também permite que sejam carregadas múltiplas instâncias como um "
"grupo se <literal>batch-size</literal> estiver para o mapeamento da classe."

#. Tag: para
#: session_api.xml:203
#, fuzzy, no-c-format
msgid ""
"If you are not certain that a matching row exists, you should use the "
"<literal>get()</literal> method which hits the database immediately and "
"returns null if there is no matching row."
msgstr ""
"Se você não tiver certeza da existencia do registro no banco, você deve usar "
"o metodo <literal>get()</literal>, que consulta o banco imediantamente e "
"retorna um null se não existir o registro."

#. Tag: programlisting
#: session_api.xml:209
#, no-c-format
msgid ""
"<![CDATA[Cat cat = (Cat) sess.get(Cat.class, id);\n"
"if (cat==null) {\n"
"    cat = new Cat();\n"
"    sess.save(cat, id);\n"
"}\n"
"return cat;]]>"
msgstr ""

#. Tag: para
#: session_api.xml:211
#, fuzzy, no-c-format
msgid ""
"You can even load an object using an SQL <literal>SELECT ... FOR UPDATE</"
"literal>, using a <literal>LockMode</literal>. See the API documentation for "
"more information."
msgstr ""
"Também pode-se carregar um objeto usando <literal>SELECT ... FOR UPDATE</"
"literal>, usando um <literal>LockMode</literal>. Veja a documentação da API "
"para maiores informações."

#. Tag: programlisting
#: session_api.xml:216
#, no-c-format
msgid "<![CDATA[Cat cat = (Cat) sess.get(Cat.class, id, LockMode.UPGRADE);]]>"
msgstr ""

#. Tag: para
#: session_api.xml:218
#, fuzzy, no-c-format
msgid ""
"Any associated instances or contained collections will <emphasis>not</"
"emphasis> be selected <literal>FOR UPDATE</literal>, unless you decide to "
"specify <literal>lock</literal> or <literal>all</literal> as a cascade style "
"for the association."
msgstr ""
"Note that any associated instances or contained collections are "
"<emphasis>not</emphasis> selected <literal>FOR UPDATE</literal>, unless you "
"decide to specify <literal>lock</literal> or <literal>all</literal> as a "
"cascade style for the association."

#. Tag: para
#: session_api.xml:225
#, no-c-format
msgid ""
"It is possible to re-load an object and all its collections at any time, "
"using the <literal>refresh()</literal> method. This is useful when database "
"triggers are used to initialize some of the properties of the object."
msgstr ""
"O recarregamento de um objeto e todas as suas coleções é possível a qualquer "
"momento, usando o método <literal>refresh()</literal>. Util quando as "
"triggers do banco de dados são usados para inicializar algumas propriedades "
"do objeto."

#. Tag: programlisting
#: session_api.xml:231
#, no-c-format
msgid ""
"<![CDATA[sess.save(cat);\n"
"sess.flush(); //force the SQL INSERT\n"
"sess.refresh(cat); //re-read the state (after the trigger executes)]]>"
msgstr ""

#. Tag: para
#: session_api.xml:233
#, fuzzy, no-c-format
msgid ""
"How much does Hibernate load from the database and how many SQL "
"<literal>SELECT</literal>s will it use? This depends on the "
"<emphasis>fetching strategy</emphasis>. This is explained in <xref linkend="
"\"performance-fetching\"/>."
msgstr ""
"Uma importante questão geralmente aparece neste ponto: O quanto Hibernate "
"carrega do banco de dados e quantos SQL <literal>SELECT</literal> ele irá "
"usar? Isto depende da estratégia de <emphasis>recuperação</emphasis>usada e "
"explicada na <xref linkend=\"performance-fetching\"/>."

#. Tag: title
#: session_api.xml:243
#, no-c-format
msgid "Querying"
msgstr "Consultando"

#. Tag: para
#: session_api.xml:245
#, fuzzy, no-c-format
msgid ""
"If you do not know the identifiers of the objects you are looking for, you "
"need a query. Hibernate supports an easy-to-use but powerful object oriented "
"query language (HQL). For programmatic query creation, Hibernate supports a "
"sophisticated Criteria and Example query feature (QBC and QBE). You can also "
"express your query in the native SQL of your database, with optional support "
"from Hibernate for result set conversion into objects."
msgstr ""
"Se o identificador do objeto que se está buscando não for conhecido, uma "
"consulta será necessária. O Hibernate suporta uma linguagem de consulta "
"(HQL) orientada a objetos fácil mas poderosa. Para criação via programação "
"de consultas, o Hibernate suporta características sofisticadas de consulta "
"por Critério e Exemplo (QBCe QBE). Pode-se também expressar a consulta por "
"meio de SQL nativa do banco de dados, com suporte opcional do Hibernate para "
"conversão do conjunto de reultados em objetos."

#. Tag: title
#: session_api.xml:255
#, no-c-format
msgid "Executing queries"
msgstr "Executando consultas"

#. Tag: para
#: session_api.xml:257
#, no-c-format
msgid ""
"HQL and native SQL queries are represented with an instance of <literal>org."
"hibernate.Query</literal>. This interface offers methods for parameter "
"binding, result set handling, and for the execution of the actual query. You "
"always obtain a <literal>Query</literal> using the current <literal>Session</"
"literal>:"
msgstr ""
"Consultas HQL e SQL nativa são representadas por uma instância de "
"<literal>org.hibernate.Query</literal>. Esta interface oferece métodos para "
"associação de parâmetros, tratamento de conjunto de resultados, e para a "
"execução de consultas reais. Você pode obter uma <literal>Query</literal> "
"usando a <literal>Session</literal> atual:"

#. Tag: programlisting
#: session_api.xml:264
#, no-c-format
msgid ""
"<![CDATA[List cats = session.createQuery(\n"
"    \"from Cat as cat where cat.birthdate < ?\")\n"
"    .setDate(0, date)\n"
"    .list();\n"
"\n"
"List mothers = session.createQuery(\n"
"    \"select mother from Cat as cat join cat.mother as mother where cat.name "
"= ?\")\n"
"    .setString(0, name)\n"
"    .list();\n"
"\n"
"List kittens = session.createQuery(\n"
"    \"from Cat as cat where cat.mother = ?\")\n"
"    .setEntity(0, pk)\n"
"    .list();\n"
"\n"
"Cat mother = (Cat) session.createQuery(\n"
"    \"select cat.mother from Cat as cat where cat = ?\")\n"
"    .setEntity(0, izi)\n"
"    .uniqueResult();]]\n"
"\n"
"Query mothersWithKittens = (Cat) session.createQuery(\n"
"    \"select mother from Cat as mother left join fetch mother.kittens\");\n"
"Set uniqueMothers = new HashSet(mothersWithKittens.list());]]>"
msgstr ""

#. Tag: para
#: session_api.xml:266
#, fuzzy, no-c-format
msgid ""
"A query is usually executed by invoking <literal>list()</literal>. The "
"result of the query will be loaded completely into a collection in memory. "
"Entity instances retrieved by a query are in a persistent state. The "
"<literal>uniqueResult()</literal> method offers a shortcut if you know your "
"query will only return a single object. Queries that make use of eager "
"fetching of collections usually return duplicates of the root objects, but "
"with their collections initialized. You can filter these duplicates through "
"a <literal>Set</literal>."
msgstr ""
"Geralmente uma consulta é executada ao invocar <literal>list()</literal>, o "
"resultado da consulta será carregado completamente em uma coleção na "
"memória. Instâncias de entidades recuperadas por uma consulta estão no "
"estado persistente. O <literal>uniqueResult()</literal> oferece um atalho se "
"você souber de previamente que a consulta retornará apenas um único objeto. "
"Repare que consultas que fazem uso de buscas de coleções de forma ansiosa "
"(eager) geralmente retornam duplicatas dos objetos raiz ( mas com suas "
"coleções inicializadas ). Pode-se filtrar estas duplicatas através de um "
"simples <literal>Set</literal>."

#. Tag: title
#: session_api.xml:278
#, no-c-format
msgid "Iterating results"
msgstr "Interagindo com resultados"

#. Tag: para
#: session_api.xml:280
#, fuzzy, no-c-format
msgid ""
"Occasionally, you might be able to achieve better performance by executing "
"the query using the <literal>iterate()</literal> method. This will usually "
"be the case if you expect that the actual entity instances returned by the "
"query will already be in the session or second-level cache. If they are not "
"already cached, <literal>iterate()</literal> will be slower than "
"<literal>list()</literal> and might require many database hits for a simple "
"query, usually <emphasis>1</emphasis> for the initial select which only "
"returns identifiers, and <emphasis>n</emphasis> additional selects to "
"initialize the actual instances."
msgstr ""
"Ocasionalmente, deves-se ser capaz de atingir performances melhores com a "
"execução de consultas usando o método <literal>iterate()</literal>. "
"Geralmente isso será o caso esperado apenas se as instâncias dos entidades "
"reais retornadas pela consulta já estiverem na sessão ou no caché de segundo "
"nível. Caso elas ainda não tenham sido armazenadas, <literal>iterate()</"
"literal> será mais devagar do que <literal>list()</literal> e pode ser "
"necessário vários acessos ao banco de dados para um simples consulta, "
"geralmente <emphasis>1</emphasis> para a seleção inicial que retorna apenas "
"identificadores, e <emphasis>n</emphasis> consultas adicionais para "
"inicializar as instâncias reais."

#. Tag: programlisting
#: session_api.xml:292
#, no-c-format
msgid ""
"<![CDATA[// fetch ids\n"
"Iterator iter = sess.createQuery(\"from eg.Qux q order by q.likeliness\")."
"iterate();\n"
"while ( iter.hasNext() ) {\n"
"    Qux qux = (Qux) iter.next();  // fetch the object\n"
"    // something we couldnt express in the query\n"
"    if ( qux.calculateComplicatedAlgorithm() ) {\n"
"        // delete the current instance\n"
"        iter.remove();\n"
"        // dont need to process the rest\n"
"        break;\n"
"    }\n"
"}]]>"
msgstr ""

#. Tag: title
#: session_api.xml:296
#, no-c-format
msgid "Queries that return tuples"
msgstr "Consultas que retornam tuplas"

#. Tag: para
#: session_api.xml:298
#, fuzzy, no-c-format
msgid ""
"Hibernate queries sometimes return tuples of objects. Each tuple is returned "
"as an array:"
msgstr ""
"Algumas vezes as consultas do Hibernate retornam tuplas de objetos, nesse "
"caso cada tupla é retornada como um array:"

#. Tag: programlisting
#: session_api.xml:303
#, no-c-format
msgid ""
"<![CDATA[Iterator kittensAndMothers = sess.createQuery(\n"
"            \"select kitten, mother from Cat kitten join kitten.mother mother"
"\")\n"
"            .list()\n"
"            .iterator();\n"
"\n"
"while ( kittensAndMothers.hasNext() ) {\n"
"    Object[] tuple = (Object[]) kittensAndMothers.next();\n"
"    Cat kitten = (Cat) tuple[0];\n"
"    Cat mother = (Cat) tuple[1];\n"
"    ....\n"
"}]]>"
msgstr ""

#. Tag: title
#: session_api.xml:308
#, no-c-format
msgid "Scalar results"
msgstr "Resultados escalares"

#. Tag: para
#: session_api.xml:310
#, fuzzy, no-c-format
msgid ""
"Queries can specify a property of a class in the <literal>select</literal> "
"clause. They can even call SQL aggregate functions. Properties or aggregates "
"are considered \"scalar\" results and not entities in persistent state."
msgstr ""
"Consultas devem especificar uma propriedade da classe na clausula "
"<literal>select</literal>. Elas também podem chamar funções SQL de "
"agregaçãos. Propriedades ou agregações são considerados resultados agregados "
"( e não entidades no estado persistente)."

#. Tag: programlisting
#: session_api.xml:316
#, no-c-format
msgid ""
"<![CDATA[Iterator results = sess.createQuery(\n"
"        \"select cat.color, min(cat.birthdate), count(cat) from Cat cat \" "
"+\n"
"        \"group by cat.color\")\n"
"        .list()\n"
"        .iterator();\n"
"\n"
"while ( results.hasNext() ) {\n"
"    Object[] row = (Object[]) results.next();\n"
"    Color type = (Color) row[0];\n"
"    Date oldest = (Date) row[1];\n"
"    Integer count = (Integer) row[2];\n"
"    .....\n"
"}]]>"
msgstr ""

#. Tag: title
#: session_api.xml:321
#, no-c-format
msgid "Bind parameters"
msgstr "Bind parameters"

#. Tag: para
#: session_api.xml:323
#, fuzzy, no-c-format
msgid ""
"Methods on <literal>Query</literal> are provided for binding values to named "
"parameters or JDBC-style <literal>?</literal> parameters. <emphasis>Contrary "
"to JDBC, Hibernate numbers parameters from zero.</emphasis> Named parameters "
"are identifiers of the form <literal>:name</literal> in the query string. "
"The advantages of named parameters are as follows:"
msgstr ""
"Methods on <literal>Query</literal> are provided for binding values to named "
"parameters or JDBC-style <literal>?</literal> parameters. <emphasis>Contrary "
"to JDBC, Hibernate numbers parameters from zero.</emphasis> Named parameters "
"are identifiers of the form <literal>:name</literal> in the query string. "
"The advantages of named parameters are:"

#. Tag: para
#: session_api.xml:333
#, no-c-format
msgid ""
"named parameters are insensitive to the order they occur in the query string"
msgstr ""
"named parameters are insensitive to the order they occur in the query string"

#. Tag: para
#: session_api.xml:339
#, fuzzy, no-c-format
msgid "they can occur multiple times in the same query"
msgstr "they may occur multiple times in the same query"

#. Tag: para
#: session_api.xml:344
#, no-c-format
msgid "they are self-documenting"
msgstr "they are self-documenting"

#. Tag: programlisting
#: session_api.xml:350
#, no-c-format
msgid ""
"<![CDATA[//named parameter (preferred)\n"
"Query q = sess.createQuery(\"from DomesticCat cat where cat.name = :name"
"\");\n"
"q.setString(\"name\", \"Fritz\");\n"
"Iterator cats = q.iterate();]]>"
msgstr ""

#. Tag: programlisting
#: session_api.xml:352
#, no-c-format
msgid ""
"<![CDATA[//positional parameter\n"
"Query q = sess.createQuery(\"from DomesticCat cat where cat.name = ?\");\n"
"q.setString(0, \"Izi\");\n"
"Iterator cats = q.iterate();]]>"
msgstr ""

#. Tag: programlisting
#: session_api.xml:354
#, no-c-format
msgid ""
"<![CDATA[//named parameter list\n"
"List names = new ArrayList();\n"
"names.add(\"Izi\");\n"
"names.add(\"Fritz\");\n"
"Query q = sess.createQuery(\"from DomesticCat cat where cat.name in (:"
"namesList)\");\n"
"q.setParameterList(\"namesList\", names);\n"
"List cats = q.list();]]>"
msgstr ""

#. Tag: title
#: session_api.xml:359
#, no-c-format
msgid "Pagination"
msgstr "Pagination"

#. Tag: para
#: session_api.xml:361
#, fuzzy, no-c-format
msgid ""
"If you need to specify bounds upon your result set, that is, the maximum "
"number of rows you want to retrieve and/or the first row you want to "
"retrieve, you can use methods of the <literal>Query</literal> interface:"
msgstr ""
"If you need to specify bounds upon your result set (the maximum number of "
"rows you want to retrieve and / or the first row you want to retrieve) you "
"should use methods of the <literal>Query</literal> interface:"

#. Tag: programlisting
#: session_api.xml:367
#, no-c-format
msgid ""
"<![CDATA[Query q = sess.createQuery(\"from DomesticCat cat\");\n"
"q.setFirstResult(20);\n"
"q.setMaxResults(10);\n"
"List cats = q.list();]]>"
msgstr ""

#. Tag: para
#: session_api.xml:369
#, no-c-format
msgid ""
"Hibernate knows how to translate this limit query into the native SQL of "
"your DBMS."
msgstr ""
"Hibernate knows how to translate this limit query into the native SQL of "
"your DBMS."

#. Tag: title
#: session_api.xml:377
#, no-c-format
msgid "Scrollable iteration"
msgstr "Scrollable iteration"

#. Tag: para
#: session_api.xml:379
#, fuzzy, no-c-format
msgid ""
"If your JDBC driver supports scrollable <literal>ResultSet</literal>s, the "
"<literal>Query</literal> interface can be used to obtain a "
"<literal>ScrollableResults</literal> object that allows flexible navigation "
"of the query results."
msgstr ""
"If your JDBC driver supports scrollable <literal>ResultSet</literal>s, the "
"<literal>Query</literal> interface may be used to obtain a "
"<literal>ScrollableResults</literal> object, which allows flexible "
"navigation of the query results."

#. Tag: programlisting
#: session_api.xml:386
#, no-c-format
msgid ""
"<![CDATA[Query q = sess.createQuery(\"select cat.name, cat from DomesticCat "
"cat \" +\n"
"                            \"order by cat.name\");\n"
"ScrollableResults cats = q.scroll();\n"
"if ( cats.first() ) {\n"
"\n"
"    // find the first name on each page of an alphabetical list of cats by "
"name\n"
"    firstNamesOfPages = new ArrayList();\n"
"    do {\n"
"        String name = cats.getString(0);\n"
"        firstNamesOfPages.add(name);\n"
"    }\n"
"    while ( cats.scroll(PAGE_SIZE) );\n"
"\n"
"    // Now get the first page of cats\n"
"    pageOfCats = new ArrayList();\n"
"    cats.beforeFirst();\n"
"    int i=0;\n"
"    while( ( PAGE_SIZE > i++ ) && cats.next() ) pageOfCats.add( cats.get"
"(1) );\n"
"\n"
"}\n"
"cats.close()]]>"
msgstr ""

#. Tag: para
#: session_api.xml:388
#, fuzzy, no-c-format
msgid ""
"Note that an open database connection and cursor is required for this "
"functionality. Use <literal>setMaxResult()</literal>/<literal>setFirstResult"
"()</literal> if you need offline pagination functionality."
msgstr ""
"Note that an open database connection (and cursor) is required for this "
"functionality, use <literal>setMaxResult()</literal>/<literal>setFirstResult"
"()</literal> if you need offline pagination functionality."

#. Tag: title
#: session_api.xml:397
#, no-c-format
msgid "Externalizing named queries"
msgstr "Externalizing named queries"

#. Tag: para
#: session_api.xml:399
#, fuzzy, no-c-format
msgid ""
"You can also define named queries in the mapping document. Remember to use a "
"<literal>CDATA</literal> section if your query contains characters that "
"could be interpreted as markup."
msgstr ""
"You may also define named queries in the mapping document. (Remember to use "
"a <literal>CDATA</literal> section if your query contains characters that "
"could be interpreted as markup.)"

#. Tag: programlisting
#: session_api.xml:405
#, no-c-format
msgid ""
"<![CDATA[<query name=\"ByNameAndMaximumWeight\"><![CDATA[\n"
"    from eg.DomesticCat as cat\n"
"        where cat.name = ?\n"
"        and cat.weight > ?\n"
"] ]></query>]]>"
msgstr ""

#. Tag: para
#: session_api.xml:407
#, no-c-format
msgid "Parameter binding and executing is done programatically:"
msgstr "Parameter binding and executing is done programatically:"

#. Tag: programlisting
#: session_api.xml:411
#, no-c-format
msgid ""
"<![CDATA[Query q = sess.getNamedQuery(\"ByNameAndMaximumWeight\");\n"
"q.setString(0, name);\n"
"q.setInt(1, minWeight);\n"
"List cats = q.list();]]>"
msgstr ""

#. Tag: para
#: session_api.xml:413
#, fuzzy, no-c-format
msgid ""
"The actual program code is independent of the query language that is used. "
"You can also define native SQL queries in metadata, or migrate existing "
"queries to Hibernate by placing them in mapping files."
msgstr ""
"Note that the actual program code is independent of the query language that "
"is used, you may also define native SQL queries in metadata, or migrate "
"existing queries to Hibernate by placing them in mapping files."

#. Tag: para
#: session_api.xml:419
#, fuzzy, no-c-format
msgid ""
"Also note that a query declaration inside a <literal>&lt;hibernate-"
"mapping&gt;</literal> element requires a global unique name for the query, "
"while a query declaration inside a <literal>&lt;class&gt;</literal> element "
"is made unique automatically by prepending the fully qualified name of the "
"class. For example <literal>eg.Cat.ByNameAndMaximumWeight</literal>."
msgstr ""
"Also note that a query declaration inside a <literal>&lt;hibernate-"
"mapping&gt;</literal> element requires a global unique name for the query, "
"while a query declaration inside a <literal>&lt;class&gt;</literal> element "
"is made unique automatically by prepending the fully qualified name of the "
"class, for example <literal>eg.Cat.ByNameAndMaximumWeight</literal>."

#. Tag: title
#: session_api.xml:432
#, no-c-format
msgid "Filtering collections"
msgstr "Filtering collections"

#. Tag: para
#: session_api.xml:433
#, fuzzy, no-c-format
msgid ""
"A collection <emphasis>filter</emphasis> is a special type of query that can "
"be applied to a persistent collection or array. The query string can refer "
"to <literal>this</literal>, meaning the current collection element."
msgstr ""
"A collection <emphasis>filter</emphasis> is a special type of query that may "
"be applied to a persistent collection or array. The query string may refer "
"to <literal>this</literal>, meaning the current collection element."

#. Tag: programlisting
#: session_api.xml:439
#, no-c-format
msgid ""
"<![CDATA[Collection blackKittens = session.createFilter(\n"
"    pk.getKittens(), \n"
"    \"where this.color = ?\")\n"
"    .setParameter( Color.BLACK, Hibernate.custom(ColorUserType.class) )\n"
"    .list()\n"
");]]>"
msgstr ""

#. Tag: para
#: session_api.xml:441
#, fuzzy, no-c-format
msgid ""
"The returned collection is considered a bag that is a copy of the given "
"collection. The original collection is not modified. This is contrary to the "
"implication of the name \"filter\", but consistent with expected behavior."
msgstr ""
"The returned collection is considered a bag, and it's a copy of the given "
"collection. The original collection is not modified (this is contrary to the "
"implication of the name \"filter\", but consistent with expected behavior)."

#. Tag: para
#: session_api.xml:447
#, fuzzy, no-c-format
msgid ""
"Observe that filters do not require a <literal>from</literal> clause, "
"although they can have one if required. Filters are not limited to returning "
"the collection elements themselves."
msgstr ""
"Observe that filters do not require a <literal>from</literal> clause (though "
"they may have one if required). Filters are not limited to returning the "
"collection elements themselves."

#. Tag: programlisting
#: session_api.xml:452
#, no-c-format
msgid ""
"<![CDATA[Collection blackKittenMates = session.createFilter(\n"
"    pk.getKittens(), \n"
"    \"select this.mate where this.color = eg.Color.BLACK.intValue\")\n"
"    .list();]]>"
msgstr ""

#. Tag: para
#: session_api.xml:454
#, fuzzy, no-c-format
msgid ""
"Even an empty filter query is useful, e.g. to load a subset of elements in a "
"large collection:"
msgstr ""
"Even an empty filter query is useful, e.g. to load a subset of elements in a "
"huge collection:"

#. Tag: programlisting
#: session_api.xml:459
#, no-c-format
msgid ""
"<![CDATA[Collection tenKittens = session.createFilter(\n"
"    mother.getKittens(), \"\")\n"
"    .setFirstResult(0).setMaxResults(10)\n"
"    .list();]]>"
msgstr ""

#. Tag: title
#: session_api.xml:464
#, no-c-format
msgid "Criteria queries"
msgstr "Criteria queries"

#. Tag: para
#: session_api.xml:466
#, fuzzy, no-c-format
msgid ""
"HQL is extremely powerful, but some developers prefer to build queries "
"dynamically using an object-oriented API, rather than building query "
"strings. Hibernate provides an intuitive <literal>Criteria</literal> query "
"API for these cases:"
msgstr ""
"HQL is extremely powerful but some developers prefer to build queries "
"dynamically, using an object-oriented API, rather than building query "
"strings. Hibernate provides an intuitive <literal>Criteria</literal> query "
"API for these cases:"

#. Tag: programlisting
#: session_api.xml:472
#, no-c-format
msgid ""
"<![CDATA[Criteria crit = session.createCriteria(Cat.class);\n"
"crit.add( Restrictions.eq( \"color\", eg.Color.BLACK ) );\n"
"crit.setMaxResults(10);\n"
"List cats = crit.list();]]>"
msgstr ""

#. Tag: para
#: session_api.xml:474
#, no-c-format
msgid ""
"The <literal>Criteria</literal> and the associated <literal>Example</"
"literal> API are discussed in more detail in <xref linkend=\"querycriteria\"/"
">."
msgstr ""
"The <literal>Criteria</literal> and the associated <literal>Example</"
"literal> API are discussed in more detail in <xref linkend=\"querycriteria\"/"
">."

#. Tag: title
#: session_api.xml:482
#, no-c-format
msgid "Queries in native SQL"
msgstr "Queries in native SQL"

#. Tag: para
#: session_api.xml:484
#, fuzzy, no-c-format
msgid ""
"You can express a query in SQL, using <literal>createSQLQuery()</literal> "
"and let Hibernate manage the mapping from result sets to objects. You can at "
"any time call <literal>session.connection()</literal> and use the JDBC "
"<literal>Connection</literal> directly. If you choose to use the Hibernate "
"API, you must enclose SQL aliases in braces:"
msgstr ""
"You may express a query in SQL, using <literal>createSQLQuery()</literal> "
"and let Hibernate take care of the mapping from result sets to objects. Note "
"that you may at any time call <literal>session.connection()</literal> and "
"use the JDBC <literal>Connection</literal> directly. If you chose to use the "
"Hibernate API, you must enclose SQL aliases in braces:"

#. Tag: programlisting
#: session_api.xml:492
#, no-c-format
msgid ""
"<![CDATA[List cats = session.createSQLQuery(\"SELECT {cat.*} FROM CAT {cat} "
"WHERE ROWNUM<10\")\n"
"    .addEntity(\"cat\", Cat.class)\n"
".list();]]>"
msgstr ""

#. Tag: programlisting
#: session_api.xml:494
#, no-c-format
msgid ""
"<![CDATA[List cats = session.createSQLQuery(\n"
"    \"SELECT {cat}.ID AS {cat.id}, {cat}.SEX AS {cat.sex}, \" +\n"
"           \"{cat}.MATE AS {cat.mate}, {cat}.SUBCLASS AS {cat.class}, ... \" "
"+\n"
"    \"FROM CAT {cat} WHERE ROWNUM<10\")\n"
"    .addEntity(\"cat\", Cat.class)\n"
".list()]]>"
msgstr ""

#. Tag: para
#: session_api.xml:496
#, fuzzy, no-c-format
msgid ""
"SQL queries can contain named and positional parameters, just like Hibernate "
"queries. More information about native SQL queries in Hibernate can be found "
"in <xref linkend=\"querysql\"/>."
msgstr ""
"SQL queries may contain named and positional parameters, just like Hibernate "
"queries. More information about native SQL queries in Hibernate can be found "
"in <xref linkend=\"querysql\"/>."

#. Tag: title
#: session_api.xml:507
#, no-c-format
msgid "Modifying persistent objects"
msgstr "Modifying persistent objects"

#. Tag: para
#: session_api.xml:509
#, fuzzy, no-c-format
msgid ""
"<emphasis>Transactional persistent instances</emphasis> (i.e. objects "
"loaded, saved, created or queried by the <literal>Session</literal>) can be "
"manipulated by the application, and any changes to persistent state will be "
"persisted when the <literal>Session</literal> is <emphasis>flushed</"
"emphasis>. This is discussed later in this chapter. There is no need to call "
"a particular method (like <literal>update()</literal>, which has a different "
"purpose) to make your modifications persistent. The most straightforward way "
"to update the state of an object is to <literal>load()</literal> it and then "
"manipulate it directly while the <literal>Session</literal> is open:"
msgstr ""
"<emphasis>Transactional persistent instances</emphasis> (ie. objects loaded, "
"saved, created or queried by the <literal>Session</literal>) may be "
"manipulated by the application and any changes to persistent state will be "
"persisted when the <literal>Session</literal> is <emphasis>flushed</"
"emphasis> (discussed later in this chapter). There is no need to call a "
"particular method (like <literal>update()</literal>, which has a different "
"purpose) to make your modifications persistent. So the most straightforward "
"way to update the state of an object is to <literal>load()</literal> it, and "
"then manipulate it directly, while the <literal>Session</literal> is open:"

#. Tag: programlisting
#: session_api.xml:520
#, no-c-format
msgid ""
"<![CDATA[DomesticCat cat = (DomesticCat) sess.load( Cat.class, new Long"
"(69) );\n"
"cat.setName(\"PK\");\n"
"sess.flush();  // changes to cat are automatically detected and persisted]]>"
msgstr ""

#. Tag: para
#: session_api.xml:522
#, fuzzy, no-c-format
msgid ""
"Sometimes this programming model is inefficient, as it requires in the same "
"session both an SQL <literal>SELECT</literal> to load an object and an SQL "
"<literal>UPDATE</literal> to persist its updated state. Hibernate offers an "
"alternate approach by using detached instances."
msgstr ""
"Sometimes this programming model is inefficient since it would require both "
"an SQL <literal>SELECT</literal> (to load an object) and an SQL "
"<literal>UPDATE</literal> (to persist its updated state) in the same "
"session. Therefore Hibernate offers an alternate approach, using detached "
"instances."

#. Tag: para
#: session_api.xml:529
#, fuzzy, no-c-format
msgid ""
"Hibernate does not offer its own API for direct execution of "
"<literal>UPDATE</literal> or <literal>DELETE</literal> statements. Hibernate "
"is a <emphasis>state management</emphasis> service, you do not have to think "
"in <emphasis>statements</emphasis> to use it. JDBC is a perfect API for "
"executing SQL statements, you can get a JDBC <literal>Connection</literal> "
"at any time by calling <literal>session.connection()</literal>. Furthermore, "
"the notion of mass operations conflicts with object/relational mapping for "
"online transaction processing-oriented applications. Future versions of "
"Hibernate can, however, provide special mass operation functions. See <xref "
"linkend=\"batch\"/> for some possible batch operation tricks."
msgstr ""
"Note that Hibernate does not offer its own API for direct execution of "
"<placeholder-1/> or <placeholder-2/> statements. Hibernate is a <placeholder-"
"3/> service, you don't have to think in <placeholder-4/> to use it. JDBC is "
"a perfect API for executing SQL statements, you can get a JDBC <placeholder-"
"5/> at any time by calling <placeholder-6/>. Furthermore, the notion of mass "
"operations conflicts with object/relational mapping for online transaction "
"processing-oriented applications. Future versions of Hibernate may however "
"provide special mass operation functions. See <xref linkend=\"batch\"/> for "
"some possible batch operation tricks."

#. Tag: title
#: session_api.xml:546
#, no-c-format
msgid "Modifying detached objects"
msgstr "Modifying detached objects"

#. Tag: para
#: session_api.xml:548
#, no-c-format
msgid ""
"Many applications need to retrieve an object in one transaction, send it to "
"the UI layer for manipulation, then save the changes in a new transaction. "
"Applications that use this kind of approach in a high-concurrency "
"environment usually use versioned data to ensure isolation for the \"long\" "
"unit of work."
msgstr ""
"Many applications need to retrieve an object in one transaction, send it to "
"the UI layer for manipulation, then save the changes in a new transaction. "
"Applications that use this kind of approach in a high-concurrency "
"environment usually use versioned data to ensure isolation for the \"long\" "
"unit of work."

#. Tag: para
#: session_api.xml:555
#, no-c-format
msgid ""
"Hibernate supports this model by providing for reattachment of detached "
"instances using the <literal>Session.update()</literal> or <literal>Session."
"merge()</literal> methods:"
msgstr ""
"Hibernate supports this model by providing for reattachment of detached "
"instances using the <literal>Session.update()</literal> or <literal>Session."
"merge()</literal> methods:"

#. Tag: programlisting
#: session_api.xml:561
#, no-c-format
msgid ""
"<![CDATA[// in the first session\n"
"Cat cat = (Cat) firstSession.load(Cat.class, catId);\n"
"Cat potentialMate = new Cat();\n"
"firstSession.save(potentialMate);\n"
"\n"
"// in a higher layer of the application\n"
"cat.setMate(potentialMate);\n"
"\n"
"// later, in a new session\n"
"secondSession.update(cat);  // update cat\n"
"secondSession.update(mate); // update mate]]>"
msgstr ""

#. Tag: para
#: session_api.xml:563
#, no-c-format
msgid ""
"If the <literal>Cat</literal> with identifier <literal>catId</literal> had "
"already been loaded by <literal>secondSession</literal> when the application "
"tried to reattach it, an exception would have been thrown."
msgstr ""
"If the <literal>Cat</literal> with identifier <literal>catId</literal> had "
"already been loaded by <literal>secondSession</literal> when the application "
"tried to reattach it, an exception would have been thrown."

#. Tag: para
#: session_api.xml:569
#, fuzzy, no-c-format
msgid ""
"Use <literal>update()</literal> if you are certain that the session does not "
"contain an already persistent instance with the same identifier. Use "
"<literal>merge()</literal> if you want to merge your modifications at any "
"time without consideration of the state of the session. In other words, "
"<literal>update()</literal> is usually the first method you would call in a "
"fresh session, ensuring that the reattachment of your detached instances is "
"the first operation that is executed."
msgstr ""
"Use <literal>update()</literal> if you are sure that the session does not "
"contain an already persistent instance with the same identifier, and "
"<literal>merge()</literal> if you want to merge your modifications at any "
"time without consideration of the state of the session. In other words, "
"<literal>update()</literal> is usually the first method you would call in a "
"fresh session, ensuring that reattachment of your detached instances is the "
"first operation that is executed."

#. Tag: para
#: session_api.xml:578
#, fuzzy, no-c-format
msgid ""
"The application should individually <literal>update()</literal> detached "
"instances that are reachable from the given detached instance "
"<emphasis>only</emphasis> if it wants their state to be updated. This can be "
"automated using <emphasis>transitive persistence</emphasis>. See <xref "
"linkend=\"objectstate-transitive\"/> for more information."
msgstr ""
"The application should individually <literal>update()</literal> detached "
"instances reachable from the given detached instance if and <emphasis>only</"
"emphasis> if it wants their state also updated. This can be automated of "
"course, using <emphasis>transitive persistence</emphasis>, see <xref linkend="
"\"objectstate-transitive\"/>."

#. Tag: para
#: session_api.xml:585
#, fuzzy, no-c-format
msgid ""
"The <literal>lock()</literal> method also allows an application to "
"reassociate an object with a new session. However, the detached instance has "
"to be unmodified."
msgstr ""
"The <literal>lock()</literal> method also allows an application to "
"reassociate an object with a new session. However, the detached instance has "
"to be unmodified!"

#. Tag: programlisting
#: session_api.xml:590
#, no-c-format
msgid ""
"<![CDATA[//just reassociate:\n"
"sess.lock(fritz, LockMode.NONE);\n"
"//do a version check, then reassociate:\n"
"sess.lock(izi, LockMode.READ);\n"
"//do a version check, using SELECT ... FOR UPDATE, then reassociate:\n"
"sess.lock(pk, LockMode.UPGRADE);]]>"
msgstr ""

#. Tag: para
#: session_api.xml:592
#, fuzzy, no-c-format
msgid ""
"Note that <literal>lock()</literal> can be used with various "
"<literal>LockMode</literal>s. See the API documentation and the chapter on "
"transaction handling for more information. Reattachment is not the only "
"usecase for <literal>lock()</literal>."
msgstr ""
"Note that <literal>lock()</literal> can be used with various "
"<literal>LockMode</literal>s, see the API documentation and the chapter on "
"transaction handling for more information. Reattachment is not the only "
"usecase for <literal>lock()</literal>."

#. Tag: para
#: session_api.xml:599
#, no-c-format
msgid ""
"Other models for long units of work are discussed in <xref linkend="
"\"transactions-optimistic\"/>."
msgstr ""
"Other models for long units of work are discussed in <xref linkend="
"\"transactions-optimistic\"/>."

#. Tag: title
#: session_api.xml:606
#, no-c-format
msgid "Automatic state detection"
msgstr "Automatic state detection"

#. Tag: para
#: session_api.xml:608
#, no-c-format
msgid ""
"Hibernate users have requested a general purpose method that either saves a "
"transient instance by generating a new identifier or updates/reattaches the "
"detached instances associated with its current identifier. The "
"<literal>saveOrUpdate()</literal> method implements this functionality."
msgstr ""
"Hibernate users have requested a general purpose method that either saves a "
"transient instance by generating a new identifier or updates/reattaches the "
"detached instances associated with its current identifier. The "
"<literal>saveOrUpdate()</literal> method implements this functionality."

#. Tag: programlisting
#: session_api.xml:615
#, no-c-format
msgid ""
"<![CDATA[// in the first session\n"
"Cat cat = (Cat) firstSession.load(Cat.class, catID);\n"
"\n"
"// in a higher tier of the application\n"
"Cat mate = new Cat();\n"
"cat.setMate(mate);\n"
"\n"
"// later, in a new session\n"
"secondSession.saveOrUpdate(cat);   // update existing state (cat has a non-"
"null id)\n"
"secondSession.saveOrUpdate(mate);  // save the new instance (mate has a null "
"id)]]>"
msgstr ""

#. Tag: para
#: session_api.xml:617
#, no-c-format
msgid ""
"The usage and semantics of <literal>saveOrUpdate()</literal> seems to be "
"confusing for new users. Firstly, so long as you are not trying to use "
"instances from one session in another new session, you should not need to "
"use <literal>update()</literal>, <literal>saveOrUpdate()</literal>, or "
"<literal>merge()</literal>. Some whole applications will never use either of "
"these methods."
msgstr ""
"The usage and semantics of <literal>saveOrUpdate()</literal> seems to be "
"confusing for new users. Firstly, so long as you are not trying to use "
"instances from one session in another new session, you should not need to "
"use <literal>update()</literal>, <literal>saveOrUpdate()</literal>, or "
"<literal>merge()</literal>. Some whole applications will never use either of "
"these methods."

#. Tag: para
#: session_api.xml:625
#, no-c-format
msgid ""
"Usually <literal>update()</literal> or <literal>saveOrUpdate()</literal> are "
"used in the following scenario:"
msgstr ""
"Usually <literal>update()</literal> or <literal>saveOrUpdate()</literal> are "
"used in the following scenario:"

#. Tag: para
#: session_api.xml:632
#, no-c-format
msgid "the application loads an object in the first session"
msgstr "the application loads an object in the first session"

#. Tag: para
#: session_api.xml:637
#, no-c-format
msgid "the object is passed up to the UI tier"
msgstr "the object is passed up to the UI tier"

#. Tag: para
#: session_api.xml:642
#, no-c-format
msgid "some modifications are made to the object"
msgstr "some modifications are made to the object"

#. Tag: para
#: session_api.xml:647
#, no-c-format
msgid "the object is passed back down to the business logic tier"
msgstr "the object is passed back down to the business logic tier"

#. Tag: para
#: session_api.xml:652
#, no-c-format
msgid ""
"the application persists these modifications by calling <literal>update()</"
"literal> in a second session"
msgstr ""
"the application persists these modifications by calling <literal>update()</"
"literal> in a second session"

#. Tag: para
#: session_api.xml:659
#, no-c-format
msgid "<literal>saveOrUpdate()</literal> does the following:"
msgstr "<literal>saveOrUpdate()</literal> does the following:"

#. Tag: para
#: session_api.xml:665
#, no-c-format
msgid "if the object is already persistent in this session, do nothing"
msgstr "if the object is already persistent in this session, do nothing"

#. Tag: para
#: session_api.xml:670
#, no-c-format
msgid ""
"if another object associated with the session has the same identifier, throw "
"an exception"
msgstr ""
"if another object associated with the session has the same identifier, throw "
"an exception"

#. Tag: para
#: session_api.xml:676
#, no-c-format
msgid "if the object has no identifier property, <literal>save()</literal> it"
msgstr "if the object has no identifier property, <literal>save()</literal> it"

#. Tag: para
#: session_api.xml:681
#, no-c-format
msgid ""
"if the object's identifier has the value assigned to a newly instantiated "
"object, <literal>save()</literal> it"
msgstr ""
"if the object's identifier has the value assigned to a newly instantiated "
"object, <literal>save()</literal> it"

#. Tag: para
#: session_api.xml:687
#, fuzzy, no-c-format
msgid ""
"if the object is versioned by a <literal>&lt;version&gt;</literal> or "
"<literal>&lt;timestamp&gt;</literal>, and the version property value is the "
"same value assigned to a newly instantiated object, <literal>save()</"
"literal> it"
msgstr ""
"if the object is versioned (by a <literal>&lt;version&gt;</literal> or "
"<literal>&lt;timestamp&gt;</literal>), and the version property value is the "
"same value assigned to a newly instantiated object, <literal>save()</"
"literal> it"

#. Tag: para
#: session_api.xml:695
#, no-c-format
msgid "otherwise <literal>update()</literal> the object"
msgstr "otherwise <literal>update()</literal> the object"

#. Tag: para
#: session_api.xml:701
#, no-c-format
msgid "and <literal>merge()</literal> is very different:"
msgstr "and <literal>merge()</literal> is very different:"

#. Tag: para
#: session_api.xml:707
#, no-c-format
msgid ""
"if there is a persistent instance with the same identifier currently "
"associated with the session, copy the state of the given object onto the "
"persistent instance"
msgstr ""
"if there is a persistent instance with the same identifier currently "
"associated with the session, copy the state of the given object onto the "
"persistent instance"

#. Tag: para
#: session_api.xml:714
#, no-c-format
msgid ""
"if there is no persistent instance currently associated with the session, "
"try to load it from the database, or create a new persistent instance"
msgstr ""
"if there is no persistent instance currently associated with the session, "
"try to load it from the database, or create a new persistent instance"

#. Tag: para
#: session_api.xml:720
#, no-c-format
msgid "the persistent instance is returned"
msgstr "the persistent instance is returned"

#. Tag: para
#: session_api.xml:725
#, no-c-format
msgid ""
"the given instance does not become associated with the session, it remains "
"detached"
msgstr ""
"the given instance does not become associated with the session, it remains "
"detached"

#. Tag: title
#: session_api.xml:735
#, no-c-format
msgid "Deleting persistent objects"
msgstr "Deleting persistent objects"

#. Tag: para
#: session_api.xml:737
#, fuzzy, no-c-format
msgid ""
"<literal>Session.delete()</literal> will remove an object's state from the "
"database. Your application, however, can still hold a reference to a deleted "
"object. It is best to think of <literal>delete()</literal> as making a "
"persistent instance, transient."
msgstr ""
"<literal>Session.delete()</literal> will remove an object's state from the "
"database. Of course, your application might still hold a reference to a "
"deleted object. It's best to think of <literal>delete()</literal> as making "
"a persistent instance transient."

#. Tag: programlisting
#: session_api.xml:744
#, no-c-format
msgid "<![CDATA[sess.delete(cat);]]>"
msgstr ""

#. Tag: para
#: session_api.xml:746
#, fuzzy, no-c-format
msgid ""
"You can delete objects in any order, without risk of foreign key constraint "
"violations. It is still possible to violate a <literal>NOT NULL</literal> "
"constraint on a foreign key column by deleting objects in the wrong order, e."
"g. if you delete the parent, but forget to delete the children."
msgstr ""
"You may delete objects in any order you like, without risk of foreign key "
"constraint violations. It is still possible to violate a <literal>NOT NULL</"
"literal> constraint on a foreign key column by deleting objects in the wrong "
"order, e.g. if you delete the parent, but forget to delete the children."

#. Tag: title
#: session_api.xml:757
#, no-c-format
msgid "Replicating object between two different datastores"
msgstr "Replicating object between two different datastores"

#. Tag: para
#: session_api.xml:759
#, fuzzy, no-c-format
msgid ""
"It is sometimes useful to be able to take a graph of persistent instances "
"and make them persistent in a different datastore, without regenerating "
"identifier values."
msgstr ""
"It is occasionally useful to be able to take a graph of persistent instances "
"and make them persistent in a different datastore, without regenerating "
"identifier values."

#. Tag: programlisting
#: session_api.xml:765
#, no-c-format
msgid ""
"<![CDATA[//retrieve a cat from one database\n"
"Session session1 = factory1.openSession();\n"
"Transaction tx1 = session1.beginTransaction();\n"
"Cat cat = session1.get(Cat.class, catId);\n"
"tx1.commit();\n"
"session1.close();\n"
"\n"
"//reconcile with a second database\n"
"Session session2 = factory2.openSession();\n"
"Transaction tx2 = session2.beginTransaction();\n"
"session2.replicate(cat, ReplicationMode.LATEST_VERSION);\n"
"tx2.commit();\n"
"session2.close();]]>"
msgstr ""

#. Tag: para
#: session_api.xml:767
#, fuzzy, no-c-format
msgid ""
"The <literal>ReplicationMode</literal> determines how <literal>replicate()</"
"literal> will deal with conflicts with existing rows in the database:"
msgstr ""
"The <literal>ReplicationMode</literal> determines how <literal>replicate()</"
"literal> will deal with conflicts with existing rows in the database."

#. Tag: para
#: session_api.xml:774
#, fuzzy, no-c-format
msgid ""
"<literal>ReplicationMode.IGNORE</literal>: ignores the object when there is "
"an existing database row with the same identifier"
msgstr ""
"<literal>ReplicationMode.IGNORE</literal> - ignore the object when there is "
"an existing database row with the same identifier"

#. Tag: para
#: session_api.xml:780
#, fuzzy, no-c-format
msgid ""
"<literal>ReplicationMode.OVERWRITE</literal>: overwrites any existing "
"database row with the same identifier"
msgstr ""
"<literal>ReplicationMode.OVERWRITE</literal> - overwrite any existing "
"database row with the same identifier"

#. Tag: para
#: session_api.xml:786
#, fuzzy, no-c-format
msgid ""
"<literal>ReplicationMode.EXCEPTION</literal>: throws an exception if there "
"is an existing database row with the same identifier"
msgstr ""
"<literal>ReplicationMode.EXCEPTION</literal> - throw an exception if there "
"is an existing database row with the same identifier"

#. Tag: para
#: session_api.xml:792
#, fuzzy, no-c-format
msgid ""
"<literal>ReplicationMode.LATEST_VERSION</literal>: overwrites the row if its "
"version number is earlier than the version number of the object, or ignore "
"the object otherwise"
msgstr ""
"<literal>ReplicationMode.LATEST_VERSION</literal> - overwrite the row if its "
"version number is earlier than the version number of the object, or ignore "
"the object otherwise"

#. Tag: para
#: session_api.xml:800
#, no-c-format
msgid ""
"Usecases for this feature include reconciling data entered into different "
"database instances, upgrading system configuration information during "
"product upgrades, rolling back changes made during non-ACID transactions and "
"more."
msgstr ""
"Usecases for this feature include reconciling data entered into different "
"database instances, upgrading system configuration information during "
"product upgrades, rolling back changes made during non-ACID transactions and "
"more."

#. Tag: title
#: session_api.xml:809
#, no-c-format
msgid "Flushing the Session"
msgstr "Flushing the Session"

#. Tag: para
#: session_api.xml:811
#, fuzzy, no-c-format
msgid ""
"Sometimes the <literal>Session</literal> will execute the SQL statements "
"needed to synchronize the JDBC connection's state with the state of objects "
"held in memory. This process, called <emphasis>flush</emphasis>, occurs by "
"default at the following points:"
msgstr ""
"From time to time the <literal>Session</literal> will execute the SQL "
"statements needed to synchronize the JDBC connection's state with the state "
"of objects held in memory. This process, <emphasis>flush</emphasis>, occurs "
"by default at the following points"

#. Tag: para
#: session_api.xml:820
#, no-c-format
msgid "before some query executions"
msgstr "before some query executions"

#. Tag: para
#: session_api.xml:825
#, no-c-format
msgid "from <literal>org.hibernate.Transaction.commit()</literal>"
msgstr "from <literal>org.hibernate.Transaction.commit()</literal>"

#. Tag: para
#: session_api.xml:830
#, no-c-format
msgid "from <literal>Session.flush()</literal>"
msgstr "from <literal>Session.flush()</literal>"

#. Tag: para
#: session_api.xml:836
#, fuzzy, no-c-format
msgid "The SQL statements are issued in the following order:"
msgstr "The SQL statements are issued in the following order"

#. Tag: para
#: session_api.xml:842
#, fuzzy, no-c-format
msgid ""
"all entity insertions in the same order the corresponding objects were saved "
"using <literal>Session.save()</literal>"
msgstr ""
"all entity insertions, in the same order the corresponding objects were "
"saved using <literal>Session.save()</literal>"

#. Tag: para
#: session_api.xml:848
#, no-c-format
msgid "all entity updates"
msgstr "all entity updates"

#. Tag: para
#: session_api.xml:853
#, no-c-format
msgid "all collection deletions"
msgstr "all collection deletions"

#. Tag: para
#: session_api.xml:858
#, no-c-format
msgid "all collection element deletions, updates and insertions"
msgstr "all collection element deletions, updates and insertions"

#. Tag: para
#: session_api.xml:863
#, no-c-format
msgid "all collection insertions"
msgstr "all collection insertions"

#. Tag: para
#: session_api.xml:868
#, fuzzy, no-c-format
msgid ""
"all entity deletions in the same order the corresponding objects were "
"deleted using <literal>Session.delete()</literal>"
msgstr ""
"all entity deletions, in the same order the corresponding objects were "
"deleted using <literal>Session.delete()</literal>"

#. Tag: para
#: session_api.xml:875
#, fuzzy, no-c-format
msgid ""
"An exception is that objects using <literal>native</literal> ID generation "
"are inserted when they are saved."
msgstr ""
"(An exception is that objects using <literal>native</literal> ID generation "
"are inserted when they are saved.)"

#. Tag: para
#: session_api.xml:880
#, fuzzy, no-c-format
msgid ""
"Except when you explicitly <literal>flush()</literal>, there are absolutely "
"no guarantees about <emphasis>when</emphasis> the <literal>Session</literal> "
"executes the JDBC calls, only the <emphasis>order</emphasis> in which they "
"are executed. However, Hibernate does guarantee that the <literal>Query.list"
"(..)</literal> will never return stale or incorrect data."
msgstr ""
"Except when you explicity <literal>flush()</literal>, there are absolutely "
"no guarantees about <emphasis>when</emphasis> the <literal>Session</literal> "
"executes the JDBC calls, only the <emphasis>order</emphasis> in which they "
"are executed. However, Hibernate does guarantee that the <literal>Query.list"
"(..)</literal> will never return stale data; nor will they return the wrong "
"data."

#. Tag: para
#: session_api.xml:888
#, fuzzy, no-c-format
msgid ""
"It is possible to change the default behavior so that flush occurs less "
"frequently. The <literal>FlushMode</literal> class defines three different "
"modes: only flush at commit time when the Hibernate <literal>Transaction</"
"literal> API is used, flush automatically using the explained routine, or "
"never flush unless <literal>flush()</literal> is called explicitly. The last "
"mode is useful for long running units of work, where a <literal>Session</"
"literal> is kept open and disconnected for a long time (see <xref linkend="
"\"transactions-optimistic-longsession\"/>)."
msgstr ""
"It is possible to change the default behavior so that flush occurs less "
"frequently. The <literal>FlushMode</literal> class defines three different "
"modes: only flush at commit time (and only when the Hibernate "
"<literal>Transaction</literal> API is used), flush automatically using the "
"explained routine, or never flush unless <literal>flush()</literal> is "
"called explicitly. The last mode is useful for long running units of work, "
"where a <literal>Session</literal> is kept open and disconnected for a long "
"time (see <xref linkend=\"transactions-optimistic-longsession\"/>)."

#. Tag: programlisting
#: session_api.xml:898
#, no-c-format
msgid ""
"<![CDATA[sess = sf.openSession();\n"
"Transaction tx = sess.beginTransaction();\n"
"sess.setFlushMode(FlushMode.COMMIT); // allow queries to return stale state\n"
"\n"
"Cat izi = (Cat) sess.load(Cat.class, id);\n"
"izi.setName(iznizi);\n"
"\n"
"// might return stale data\n"
"sess.find(\"from Cat as cat left outer join cat.kittens kitten\");\n"
"\n"
"// change to izi is not flushed!\n"
"...\n"
"tx.commit(); // flush occurs\n"
"sess.close();]]>"
msgstr ""

#. Tag: para
#: session_api.xml:900
#, no-c-format
msgid ""
"During flush, an exception might occur (e.g. if a DML operation violates a "
"constraint). Since handling exceptions involves some understanding of "
"Hibernate's transactional behavior, we discuss it in <xref linkend="
"\"transactions\"/>."
msgstr ""
"During flush, an exception might occur (e.g. if a DML operation violates a "
"constraint). Since handling exceptions involves some understanding of "
"Hibernate's transactional behavior, we discuss it in <xref linkend="
"\"transactions\"/>."

#. Tag: title
#: session_api.xml:909
#, no-c-format
msgid "Transitive persistence"
msgstr "Transitive persistence"

#. Tag: para
#: session_api.xml:911
#, no-c-format
msgid ""
"It is quite cumbersome to save, delete, or reattach individual objects, "
"especially if you deal with a graph of associated objects. A common case is "
"a parent/child relationship. Consider the following example:"
msgstr ""
"It is quite cumbersome to save, delete, or reattach individual objects, "
"especially if you deal with a graph of associated objects. A common case is "
"a parent/child relationship. Consider the following example:"

#. Tag: para
#: session_api.xml:917
#, fuzzy, no-c-format
msgid ""
"If the children in a parent/child relationship would be value typed (e.g. a "
"collection of addresses or strings), their life cycle would depend on the "
"parent and no further action would be required for convenient \"cascading\" "
"of state changes. When the parent is saved, the value-typed child objects "
"are saved and when the parent is deleted, the children will be deleted, etc. "
"This works for operations such as the removal of a child from the "
"collection. Since value-typed objects cannot have shared references, "
"Hibernate will detect this and delete the child from the database."
msgstr ""
"If the children in a parent/child relationship would be value typed (e.g. a "
"collection of addresses or strings), their life cycle would depend on the "
"parent and no further action would be required for convenient \"cascading\" "
"of state changes. When the parent is saved, the value-typed child objects "
"are saved as well, when the parent is deleted, the children will be deleted, "
"etc. This even works for operations such as the removal of a child from the "
"collection; Hibernate will detect this and, since value-typed objects can't "
"have shared references, delete the child from the database."

#. Tag: para
#: session_api.xml:928
#, fuzzy, no-c-format
msgid ""
"Now consider the same scenario with parent and child objects being entities, "
"not value-types (e.g. categories and items, or parent and child cats). "
"Entities have their own life cycle and support shared references. Removing "
"an entity from the collection does not mean it can be deleted), and there is "
"by default no cascading of state from one entity to any other associated "
"entities. Hibernate does not implement <emphasis>persistence by "
"reachability</emphasis> by default."
msgstr ""
"Now consider the same scenario with parent and child objects being entities, "
"not value-types (e.g. categories and items, or parent and child cats). "
"Entities have their own life cycle, support shared references (so removing "
"an entity from the collection does not mean it can be deleted), and there is "
"by default no cascading of state from one entity to any other associated "
"entities. Hibernate does not implement <emphasis>persistence by "
"reachability</emphasis> by default."

#. Tag: para
#: session_api.xml:937
#, no-c-format
msgid ""
"For each basic operation of the Hibernate session - including "
"<literal>persist(), merge(), saveOrUpdate(), delete(), lock(), refresh(), "
"evict(), replicate()</literal> - there is a corresponding cascade style. "
"Respectively, the cascade styles are named <literal>create, merge, save-"
"update, delete, lock, refresh, evict, replicate</literal>. If you want an "
"operation to be cascaded along an association, you must indicate that in the "
"mapping document. For example:"
msgstr ""
"For each basic operation of the Hibernate session - including "
"<literal>persist(), merge(), saveOrUpdate(), delete(), lock(), refresh(), "
"evict(), replicate()</literal> - there is a corresponding cascade style. "
"Respectively, the cascade styles are named <literal>create, merge, save-"
"update, delete, lock, refresh, evict, replicate</literal>. If you want an "
"operation to be cascaded along an association, you must indicate that in the "
"mapping document. For example:"

#. Tag: programlisting
#: session_api.xml:946
#, no-c-format
msgid "<![CDATA[<one-to-one name=\"person\" cascade=\"persist\"/>]]>"
msgstr ""

#. Tag: para
#: session_api.xml:948
#, no-c-format
msgid "Cascade styles my be combined:"
msgstr "Cascade styles my be combined:"

#. Tag: programlisting
#: session_api.xml:952
#, no-c-format
msgid ""
"<![CDATA[<one-to-one name=\"person\" cascade=\"persist,delete,lock\"/>]]>"
msgstr ""

#. Tag: para
#: session_api.xml:954
#, fuzzy, no-c-format
msgid ""
"You can even use <literal>cascade=\"all\"</literal> to specify that "
"<emphasis>all</emphasis> operations should be cascaded along the "
"association. The default <literal>cascade=\"none\"</literal> specifies that "
"no operations are to be cascaded."
msgstr ""
"You may even use <literal>cascade=\"all\"</literal> to specify that "
"<emphasis>all</emphasis> operations should be cascaded along the "
"association. The default <literal>cascade=\"none\"</literal> specifies that "
"no operations are to be cascaded."

#. Tag: para
#: session_api.xml:960
#, no-c-format
msgid ""
"A special cascade style, <literal>delete-orphan</literal>, applies only to "
"one-to-many associations, and indicates that the <literal>delete()</literal> "
"operation should be applied to any child object that is removed from the "
"association."
msgstr ""
"A special cascade style, <literal>delete-orphan</literal>, applies only to "
"one-to-many associations, and indicates that the <literal>delete()</literal> "
"operation should be applied to any child object that is removed from the "
"association."

#. Tag: para
#: session_api.xml:967
#, no-c-format
msgid "Recommendations:"
msgstr "Recommendations:"

#. Tag: para
#: session_api.xml:973
#, fuzzy, no-c-format
msgid ""
"It does not usually make sense to enable cascade on a <literal>&lt;many-to-"
"one&gt;</literal> or <literal>&lt;many-to-many&gt;</literal> association. "
"Cascade is often useful for <literal>&lt;one-to-one&gt;</literal> and "
"<literal>&lt;one-to-many&gt;</literal> associations."
msgstr ""
"It doesn't usually make sense to enable cascade on a <literal>&lt;many-to-"
"one&gt;</literal> or <literal>&lt;many-to-many&gt;</literal> association. "
"Cascade is often useful for <literal>&lt;one-to-one&gt;</literal> and "
"<literal>&lt;one-to-many&gt;</literal> associations."

#. Tag: para
#: session_api.xml:981
#, no-c-format
msgid ""
"If the child object's lifespan is bounded by the lifespan of the parent "
"object, make it a <emphasis>life cycle object</emphasis> by specifying "
"<literal>cascade=\"all,delete-orphan\"</literal>."
msgstr ""
"If the child object's lifespan is bounded by the lifespan of the parent "
"object, make it a <emphasis>life cycle object</emphasis> by specifying "
"<literal>cascade=\"all,delete-orphan\"</literal>."

#. Tag: para
#: session_api.xml:988
#, no-c-format
msgid ""
"Otherwise, you might not need cascade at all. But if you think that you will "
"often be working with the parent and children together in the same "
"transaction, and you want to save yourself some typing, consider using "
"<literal>cascade=\"persist,merge,save-update\"</literal>."
msgstr ""
"Otherwise, you might not need cascade at all. But if you think that you will "
"often be working with the parent and children together in the same "
"transaction, and you want to save yourself some typing, consider using "
"<literal>cascade=\"persist,merge,save-update\"</literal>."

#. Tag: para
#: session_api.xml:996
#, no-c-format
msgid ""
"Mapping an association (either a single valued association, or a collection) "
"with <literal>cascade=\"all\"</literal> marks the association as a "
"<emphasis>parent/child</emphasis> style relationship where save/update/"
"delete of the parent results in save/update/delete of the child or children."
msgstr ""
"Mapping an association (either a single valued association, or a collection) "
"with <literal>cascade=\"all\"</literal> marks the association as a "
"<emphasis>parent/child</emphasis> style relationship where save/update/"
"delete of the parent results in save/update/delete of the child or children."

#. Tag: para
#: session_api.xml:1002
#, fuzzy, no-c-format
msgid ""
"Furthermore, a mere reference to a child from a persistent parent will "
"result in save/update of the child. This metaphor is incomplete, however. A "
"child which becomes unreferenced by its parent is <emphasis>not</emphasis> "
"automatically deleted, except in the case of a <literal>&lt;one-to-many&gt;</"
"literal> association mapped with <literal>cascade=\"delete-orphan\"</"
"literal>. The precise semantics of cascading operations for a parent/child "
"relationship are as follows:"
msgstr ""
"Futhermore, a mere reference to a child from a persistent parent will result "
"in save/update of the child. This metaphor is incomplete, however. A child "
"which becomes unreferenced by its parent is <emphasis>not</emphasis> "
"automatically deleted, except in the case of a <literal>&lt;one-to-many&gt;</"
"literal> association mapped with <literal>cascade=\"delete-orphan\"</"
"literal>. The precise semantics of cascading operations for a parent/child "
"relationship are as follows:"

#. Tag: para
#: session_api.xml:1013
#, no-c-format
msgid ""
"If a parent is passed to <literal>persist()</literal>, all children are "
"passed to <literal>persist()</literal>"
msgstr ""
"If a parent is passed to <literal>persist()</literal>, all children are "
"passed to <literal>persist()</literal>"

#. Tag: para
#: session_api.xml:1019
#, no-c-format
msgid ""
"If a parent is passed to <literal>merge()</literal>, all children are passed "
"to <literal>merge()</literal>"
msgstr ""
"If a parent is passed to <literal>merge()</literal>, all children are passed "
"to <literal>merge()</literal>"

#. Tag: para
#: session_api.xml:1025
#, no-c-format
msgid ""
"If a parent is passed to <literal>save()</literal>, <literal>update()</"
"literal> or <literal>saveOrUpdate()</literal>, all children are passed to "
"<literal>saveOrUpdate()</literal>"
msgstr ""
"If a parent is passed to <literal>save()</literal>, <literal>update()</"
"literal> or <literal>saveOrUpdate()</literal>, all children are passed to "
"<literal>saveOrUpdate()</literal>"

#. Tag: para
#: session_api.xml:1031
#, no-c-format
msgid ""
"If a transient or detached child becomes referenced by a persistent parent, "
"it is passed to <literal>saveOrUpdate()</literal>"
msgstr ""
"If a transient or detached child becomes referenced by a persistent parent, "
"it is passed to <literal>saveOrUpdate()</literal>"

#. Tag: para
#: session_api.xml:1037
#, no-c-format
msgid ""
"If a parent is deleted, all children are passed to <literal>delete()</"
"literal>"
msgstr ""
"If a parent is deleted, all children are passed to <literal>delete()</"
"literal>"

#. Tag: para
#: session_api.xml:1042
#, no-c-format
msgid ""
"If a child is dereferenced by a persistent parent, <emphasis>nothing special "
"happens</emphasis> - the application should explicitly delete the child if "
"necessary - unless <literal>cascade=\"delete-orphan\"</literal>, in which "
"case the \"orphaned\" child is deleted."
msgstr ""
"If a child is dereferenced by a persistent parent, <emphasis>nothing special "
"happens</emphasis> - the application should explicitly delete the child if "
"necessary - unless <literal>cascade=\"delete-orphan\"</literal>, in which "
"case the \"orphaned\" child is deleted."

#. Tag: para
#: session_api.xml:1051
#, fuzzy, no-c-format
msgid ""
"Finally, note that cascading of operations can be applied to an object graph "
"at <emphasis>call time</emphasis> or at <emphasis>flush time</emphasis>. All "
"operations, if enabled, are cascaded to associated entities reachable when "
"the operation is executed. However, <literal>save-update</literal> and "
"<literal>delete-orphan</literal> are transitive for all associated entities "
"reachable during flush of the <literal>Session</literal>."
msgstr ""
"Finally, note that cascading of operations can be applied to an object graph "
"at <emphasis>call time</emphasis> or at <emphasis>flush time</emphasis>. All "
"operations, if enabled, are cascaded to associated entities reachable when "
"the operation is executed. However, <literal>save-upate</literal> and "
"<literal>delete-orphan</literal> are transitive for all associated entities "
"reachable during flush of the <literal>Session</literal>."

#. Tag: title
#: session_api.xml:1063
#, no-c-format
msgid "Using metadata"
msgstr "Usando metadados"

#. Tag: para
#: session_api.xml:1065
#, fuzzy, no-c-format
msgid ""
"Hibernate requires a rich meta-level model of all entity and value types. "
"This model can be useful to the application itself. For example, the "
"application might use Hibernate's metadata to implement a \"smart\" deep-"
"copy algorithm that understands which objects should be copied (eg. mutable "
"value types) and which objects that should not (e.g. immutable value types "
"and, possibly, associated entities)."
msgstr ""
"O Hibernate requer um modelo muito rico a nível de metadados de todas as "
"entidades e tipos de valores. De tempos em tempos, este modelo é muito útil "
"à própria aplicação. Por exemplo, a aplicação pode usar o metadados do "
"Hibernate que executa um algoritmo \"inteligente\" que compreende quais "
"objetos podem ser copiados (por exemplo, tipos de valores mutáveis) ou não "
"(por exemplo, tipos de valores imutáveis e, possivelmente, entidades "
"associadas)."

#. Tag: para
#: session_api.xml:1072
#, fuzzy, no-c-format
msgid ""
"Hibernate exposes metadata via the <literal>ClassMetadata</literal> and "
"<literal>CollectionMetadata</literal> interfaces and the <literal>Type</"
"literal> hierarchy. Instances of the metadata interfaces can be obtained "
"from the <literal>SessionFactory</literal>."
msgstr ""
"O Hibernate expõe o metadados via interfaces <literal>ClassMetadata</"
"literal> e <literal>CollectionMetadata</literal> e pela hierarquia "
"<literal>Type</literal>. Instâncias das interfaces de metadados podem ser "
"obtidas a partir do <literal>SessionFactory</literal>."

#. Tag: programlisting
#: session_api.xml:1079
#, no-c-format
msgid ""
"<![CDATA[Cat fritz = ......;\n"
"ClassMetadata catMeta = sessionfactory.getClassMetadata(Cat.class);\n"
"\n"
"Object[] propertyValues = catMeta.getPropertyValues(fritz);\n"
"String[] propertyNames = catMeta.getPropertyNames();\n"
"Type[] propertyTypes = catMeta.getPropertyTypes();\n"
"\n"
"// get a Map of all properties which are not collections or associations\n"
"Map namedValues = new HashMap();\n"
"for ( int i=0; i<propertyNames.length; i++ ) {\n"
"    if ( !propertyTypes[i].isEntityType() && !propertyTypes[i]."
"isCollectionType() ) {\n"
"        namedValues.put( propertyNames[i], propertyValues[i] );\n"
"    }\n"
"}]]>"
msgstr ""

#~ msgid "UPDATE"
#~ msgstr "UPDATE"

#~ msgid "DELETE"
#~ msgstr "DELETE"

#~ msgid "state management"
#~ msgstr "state management"

#~ msgid "statements"
#~ msgstr "statements"

#~ msgid "Connection"
#~ msgstr "Connection"

#~ msgid "session.connection()"
#~ msgstr "session.connection()"
