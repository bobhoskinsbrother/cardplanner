msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"Report-Msgid-Bugs-To: http://bugs.kde.org\n"
"POT-Creation-Date: 2009-06-10 21:02+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#. Tag: title
#: events.xml:29
#, no-c-format
msgid "Interceptors and events"
msgstr "Les intercepteurs et les événements"

#. Tag: para
#: events.xml:31
#, fuzzy, no-c-format
msgid ""
"It is useful for the application to react to certain events that occur "
"inside Hibernate. This allows for the implementation of generic "
"functionality and the extension of Hibernate functionality."
msgstr ""
"Il est souvent utile pour l'application de réagir à certains événements qui "
"surviennent dans Hibernate. Cela autorise l'implémentation de certaines "
"sortes de fonctionnalités génériques, et d'extensions de fonctionnalités "
"d'Hibernate."

#. Tag: title
#: events.xml:38
#, no-c-format
msgid "Interceptors"
msgstr "Intercepteurs"

#. Tag: para
#: events.xml:40
#, fuzzy, no-c-format
msgid ""
"The <literal>Interceptor</literal> interface provides callbacks from the "
"session to the application, allowing the application to inspect and/or "
"manipulate properties of a persistent object before it is saved, updated, "
"deleted or loaded. One possible use for this is to track auditing "
"information. For example, the following <literal>Interceptor</literal> "
"automatically sets the <literal>createTimestamp</literal> when an "
"<literal>Auditable</literal> is created and updates the "
"<literal>lastUpdateTimestamp</literal> property when an <literal>Auditable</"
"literal> is updated."
msgstr ""
"L'interface <literal>Interceptor</literal> fournit des \"callbacks\" de la "
"session vers l'application et permettent à l'application de consulter et/ou "
"de manipuler des propriétés d'un objet persistant avant qu'il soit "
"sauvegardé, mis à jour, supprimé ou chargé. Une utilisation possible de "
"cette fonctionnalité est de tracer l'accès à l'information. Par exemple, "
"l'<literal>Interceptor</literal> suivant positionne "
"<literal>createTimestamp</literal> quand un <literal>Auditable</literal> est "
"créé et met à jour la propriété <literal>lastUpdateTimestamp</literal> quand "
"un <literal>Auditable</literal> est mis à jour."

#. Tag: para
#: events.xml:51
#, fuzzy, no-c-format
msgid ""
"You can either implement <literal>Interceptor</literal> directly or extend "
"<literal>EmptyInterceptor</literal>."
msgstr ""
"Vous pouvez soit implémenter <literal>Interceptor</literal> directement ou "
"(mieux) étendre <literal>EmptyInterceptor</literal>."

#. Tag: programlisting
#: events.xml:56
#, no-c-format
msgid ""
"<![CDATA[package org.hibernate.test;\n"
"\n"
"import java.io.Serializable;\n"
"import java.util.Date;\n"
"import java.util.Iterator;\n"
"\n"
"import org.hibernate.EmptyInterceptor;\n"
"import org.hibernate.Transaction;\n"
"import org.hibernate.type.Type;\n"
"\n"
"public class AuditInterceptor extends EmptyInterceptor {\n"
"\n"
"    private int updates;\n"
"    private int creates;\n"
"    private int loads;\n"
"\n"
"    public void onDelete(Object entity,\n"
"                         Serializable id,\n"
"                         Object[] state,\n"
"                         String[] propertyNames,\n"
"                         Type[] types) {\n"
"        // do nothing\n"
"    }\n"
"\n"
"    public boolean onFlushDirty(Object entity,\n"
"                                Serializable id,\n"
"                                Object[] currentState,\n"
"                                Object[] previousState,\n"
"                                String[] propertyNames,\n"
"                                Type[] types) {\n"
"\n"
"        if ( entity instanceof Auditable ) {\n"
"            updates++;\n"
"            for ( int i=0; i < propertyNames.length; i++ ) {\n"
"                if ( \"lastUpdateTimestamp\".equals( propertyNames[i] ) ) {\n"
"                    currentState[i] = new Date();\n"
"                    return true;\n"
"                }\n"
"            }\n"
"        }\n"
"        return false;\n"
"    }\n"
"\n"
"    public boolean onLoad(Object entity,\n"
"                          Serializable id,\n"
"                          Object[] state,\n"
"                          String[] propertyNames,\n"
"                          Type[] types) {\n"
"        if ( entity instanceof Auditable ) {\n"
"            loads++;\n"
"        }\n"
"        return false;\n"
"    }\n"
"\n"
"    public boolean onSave(Object entity,\n"
"                          Serializable id,\n"
"                          Object[] state,\n"
"                          String[] propertyNames,\n"
"                          Type[] types) {\n"
"\n"
"        if ( entity instanceof Auditable ) {\n"
"            creates++;\n"
"            for ( int i=0; i<propertyNames.length; i++ ) {\n"
"                if ( \"createTimestamp\".equals( propertyNames[i] ) ) {\n"
"                    state[i] = new Date();\n"
"                    return true;\n"
"                }\n"
"            }\n"
"        }\n"
"        return false;\n"
"    }\n"
"\n"
"    public void afterTransactionCompletion(Transaction tx) {\n"
"        if ( tx.wasCommitted() ) {\n"
"            System.out.println(\"Creations: \" + creates + \", Updates: \" + "
"updates, \"Loads: \" + loads);\n"
"        }\n"
"        updates=0;\n"
"        creates=0;\n"
"        loads=0;\n"
"    }\n"
"\n"
"}]]>"
msgstr ""

#. Tag: para
#: events.xml:58
#, fuzzy, no-c-format
msgid ""
"There are two kinds of inteceptors: <literal>Session</literal>-scoped and "
"<literal>SessionFactory</literal>-scoped."
msgstr ""
"Interceptors come in two flavors: <literal>Session</literal>-scoped and "
"<literal>SessionFactory</literal>-scoped."

#. Tag: para
#: events.xml:63
#, no-c-format
msgid ""
"A <literal>Session</literal>-scoped interceptor is specified when a session "
"is opened using one of the overloaded SessionFactory.openSession() methods "
"accepting an <literal>Interceptor</literal>."
msgstr ""
"A <literal>Session</literal>-scoped interceptor is specified when a session "
"is opened using one of the overloaded SessionFactory.openSession() methods "
"accepting an <literal>Interceptor</literal>."

#. Tag: programlisting
#: events.xml:69
#, no-c-format
msgid "<![CDATA[Session session = sf.openSession( new AuditInterceptor() );]]>"
msgstr ""

#. Tag: para
#: events.xml:71
#, fuzzy, no-c-format
msgid ""
"A <literal>SessionFactory</literal>-scoped interceptor is registered with "
"the <literal>Configuration</literal> object prior to building the "
"<literal>SessionFactory</literal>. Unless a session is opened explicitly "
"specifying the interceptor to use, the supplied interceptor will be applied "
"to all sessions opened from that <literal>SessionFactory</literal>. "
"<literal>SessionFactory</literal>-scoped interceptors must be thread safe. "
"Ensure that you do not store session-specific states, since multiple "
"sessions will use this interceptor potentially concurrently."
msgstr ""
"A <literal>SessionFactory</literal>-scoped interceptor is registered with "
"the <literal>Configuration</literal> object prior to building the "
"<literal>SessionFactory</literal>. In this case, the supplied interceptor "
"will be applied to all sessions opened from that <literal>SessionFactory</"
"literal>; this is true unless a session is opened explicitly specifying the "
"interceptor to use. <literal>SessionFactory</literal>-scoped interceptors "
"must be thread safe, taking care to not store session-specific state since "
"multiple sessions will use this interceptor (potentially) concurrently."

#. Tag: programlisting
#: events.xml:80
#, no-c-format
msgid ""
"<![CDATA[new Configuration().setInterceptor( new AuditInterceptor() );]]>"
msgstr ""

#. Tag: title
#: events.xml:85
#, no-c-format
msgid "Event system"
msgstr "Système d'événements"

#. Tag: para
#: events.xml:87
#, fuzzy, no-c-format
msgid ""
"If you have to react to particular events in your persistence layer, you can "
"also use the Hibernate3 <emphasis>event</emphasis> architecture. The event "
"system can be used in addition, or as a replacement, for interceptors."
msgstr ""
"Si vous devez réagir à des événements particuliers dans votre couche de "
"persistance, vous pouvez aussi utiliser l'architecture "
"d'<emphasis>événements</emphasis> d'Hibernate3. Le système d'événements peut "
"être utilisé en supplément ou en remplacement des interceptors."

#. Tag: para
#: events.xml:93
#, fuzzy, no-c-format
msgid ""
"All the methods of the <literal>Session</literal> interface correlate to an "
"event. You have a <literal>LoadEvent</literal>, a <literal>FlushEvent</"
"literal>, etc. Consult the XML configuration-file DTD or the <literal>org."
"hibernate.event</literal> package for the full list of defined event types. "
"When a request is made of one of these methods, the Hibernate "
"<literal>Session</literal> generates an appropriate event and passes it to "
"the configured event listeners for that type. Out-of-the-box, these "
"listeners implement the same processing in which those methods always "
"resulted. However, you are free to implement a customization of one of the "
"listener interfaces (i.e., the <literal>LoadEvent</literal> is processed by "
"the registered implementation of the <literal>LoadEventListener</literal> "
"interface), in which case their implementation would be responsible for "
"processing any <literal>load()</literal> requests made of the "
"<literal>Session</literal>."
msgstr ""
"Essentiellement toutes les méthodes de l'interface <literal>Session</"
"literal> sont corrélées à un événement. Vous avez un <literal>LoadEvent</"
"literal>, un <literal>FlushEvent</literal>, etc (consultez la DTD du fichier "
"de configuration XML ou le paquet <literal>org.hibernate.event</literal> "
"pour avoir la liste complète des types d'événement définis). Quand une "
"requête est faite à partir d'une de ces méthodes, la <literal>Session</"
"literal> Hibernate génère un événement approprié et le passe au listener "
"configuré pour ce type. Par défaut, ces listeners implémentent le même "
"traitement dans lequel ces méthodes aboutissent toujours. Cependant, vous "
"êtes libre d'implémenter une version personnalisée d'une de ces interfaces "
"de listener (c'est-à-dire, le <literal>LoadEvent</literal> est traité par "
"l'implémentation de l'interface <literal>LoadEventListener</literal> "
"déclarée), dans quel cas leur implémentation devrait être responsable du "
"traitement des requêtes <literal>load()</literal> faites par la "
"<literal>Session</literal>."

#. Tag: para
#: events.xml:108
#, fuzzy, no-c-format
msgid ""
"The listeners should be considered singletons. This means they are shared "
"between requests, and should not save any state as instance variables."
msgstr ""
"Les listeners devraient effectivement être considérés comme des singletons ; "
"dans le sens où ils sont partagés entre des requêtes, et donc ne devraient "
"pas sauvegarder des états de variables d'instance."

#. Tag: para
#: events.xml:113
#, fuzzy, no-c-format
msgid ""
"A custom listener implements the appropriate interface for the event it "
"wants to process and/or extend one of the convenience base classes (or even "
"the default event listeners used by Hibernate out-of-the-box as these are "
"declared non-final for this purpose). Custom listeners can either be "
"registered programmatically through the <literal>Configuration</literal> "
"object, or specified in the Hibernate configuration XML. Declarative "
"configuration through the properties file is not supported. Here is an "
"example of a custom load event listener:"
msgstr ""
"Un listener personnalisé devrait implémenter l'interface appropriée pour "
"l'événement qu'il veut traiter et/ou étendre une des classes de base (ou "
"même l'événement prêt à l'emploi utilisé par Hibernate comme ceux déclarés "
"non-finaux à cette intention). Les listeners personnalisés peuvent être soit "
"inscrits par programmation à travers l'objet <literal>Configuration</"
"literal>, ou spécifiés la configuration XML d'Hibernate (la configuration "
"déclarative à travers le fichier de propriétés n'est pas supportée). Voici "
"un exemple de listener personnalisé pour l'événement de chargement :"

#. Tag: programlisting
#: events.xml:123
#, no-c-format
msgid ""
"<![CDATA[public class MyLoadListener implements LoadEventListener {\n"
"    // this is the single method defined by the LoadEventListener interface\n"
"    public void onLoad(LoadEvent event, LoadEventListener.LoadType "
"loadType)\n"
"            throws HibernateException {\n"
"        if ( !MySecurity.isAuthorized( event.getEntityClassName(), event."
"getEntityId() ) ) {\n"
"            throw MySecurityException(\"Unauthorized access\");\n"
"        }\n"
"    }\n"
"}]]>"
msgstr ""

#. Tag: para
#: events.xml:125
#, no-c-format
msgid ""
"You also need a configuration entry telling Hibernate to use the listener in "
"addition to the default listener:"
msgstr ""
"Vous avez aussi besoin d'une entrée de configuration disant à Hibernate "
"d'utiliser ce listener en plus du listener par défaut :"

#. Tag: programlisting
#: events.xml:130
#, no-c-format
msgid ""
"<![CDATA[<hibernate-configuration>\n"
"    <session-factory>\n"
"        ...\n"
"        <event type=\"load\">\n"
"            <listener class=\"com.eg.MyLoadListener\"/>\n"
"            <listener class=\"org.hibernate.event.def."
"DefaultLoadEventListener\"/>\n"
"        </event>\n"
"    </session-factory>\n"
"</hibernate-configuration>]]>"
msgstr ""

#. Tag: para
#: events.xml:132
#, fuzzy, no-c-format
msgid "Instead, you can register it programmatically:"
msgstr "Vous pouvez aussi l'inscrire par programmation :"

#. Tag: programlisting
#: events.xml:136
#, no-c-format
msgid ""
"<![CDATA[Configuration cfg = new Configuration();\n"
"LoadEventListener[] stack = { new MyLoadListener(), new "
"DefaultLoadEventListener() };\n"
"cfg.EventListeners().setLoadEventListeners(stack);]]>"
msgstr ""

#. Tag: para
#: events.xml:138
#, fuzzy, no-c-format
msgid ""
"Listeners registered declaratively cannot share instances. If the same class "
"name is used in multiple <literal>&lt;listener/&gt;</literal> elements, each "
"reference will result in a separate instance of that class. If you need to "
"share listener instances between listener types you must use the "
"programmatic registration approach."
msgstr ""
"Les listeners inscrits déclarativement ne peuvent pas partager d'instances. "
"Si le même nom de classe est utilisée dans plusieurs éléments <literal>&lt;"
"listener/&gt;</literal>, chaque référence sera une instance distincte de "
"cette classe. Si vous avez besoin de la faculté de partager des instances de "
"listener entre plusieurs types de listener, vous devez utiliser l'approche "
"d'inscription par programmation."

#. Tag: para
#: events.xml:146
#, fuzzy, no-c-format
msgid ""
"Why implement an interface and define the specific type during "
"configuration? A listener implementation could implement multiple event "
"listener interfaces. Having the type additionally defined during "
"registration makes it easier to turn custom listeners on or off during "
"configuration."
msgstr ""
"Pourquoi implémenter une interface et définir le type spécifique durant la "
"configuration ? Une implémentation de listener pourrait implémenter "
"plusieurs interfaces de listener d'événements. Avoir en plus le type défini "
"durant l'inscription rend plus facile l'activation ou la désactivation "
"pendant la configuration."

#. Tag: title
#: events.xml:156
#, no-c-format
msgid "Hibernate declarative security"
msgstr "Sécurité déclarative d'Hibernate"

#. Tag: para
#: events.xml:157
#, fuzzy, no-c-format
msgid ""
"Usually, declarative security in Hibernate applications is managed in a "
"session facade layer. Hibernate3 allows certain actions to be permissioned "
"via JACC, and authorized via JAAS. This is an optional functionality that is "
"built on top of the event architecture."
msgstr ""
"Généralement, la sécurité déclarative dans les applications Hibernate est "
"gérée dans la couche de session. Maintenant, Hibernate3 permet à certaines "
"actions d'être approuvées via JACC, et autorisées via JAAS. Cette "
"fonctionnalité optionnelle est construite au dessus de l'architecture "
"d'événements."

#. Tag: para
#: events.xml:163
#, no-c-format
msgid ""
"First, you must configure the appropriate event listeners, to enable the use "
"of JAAS authorization."
msgstr ""
"D'abord, vous devez configurer les listeners d'événements appropriés pour "
"permettre l'utilisation d'autorisations JAAS."

#. Tag: programlisting
#: events.xml:168
#, no-c-format
msgid ""
"<![CDATA[<listener type=\"pre-delete\" class=\"org.hibernate.secure."
"JACCPreDeleteEventListener\"/>\n"
"<listener type=\"pre-update\" class=\"org.hibernate.secure."
"JACCPreUpdateEventListener\"/>\n"
"<listener type=\"pre-insert\" class=\"org.hibernate.secure."
"JACCPreInsertEventListener\"/>\n"
"<listener type=\"pre-load\" class=\"org.hibernate.secure."
"JACCPreLoadEventListener\"/>]]>"
msgstr ""

#. Tag: para
#: events.xml:170
#, fuzzy, no-c-format
msgid ""
"Note that <literal>&lt;listener type=\"...\" class=\"...\"/&gt;</literal> is "
"shorthand for <literal>&lt;event type=\"...\"&gt;&lt;listener class=\"...\"/"
"&gt;&lt;/event&gt;</literal> when there is exactly one listener for a "
"particular event type."
msgstr ""
"Notez que <literal>&lt;listener type=\"...\" class=\"...\"/&gt;</literal> "
"est juste un raccourci pour <literal>&lt;event type=\"...\"&gt;&lt;listener "
"class=\"...\"/&gt;&lt;/event&gt;</literal> quand il y a exactement un "
"listener pour un type d'événement particulier."

#. Tag: para
#: events.xml:176
#, fuzzy, no-c-format
msgid ""
"Next, while still in <literal>hibernate.cfg.xml</literal>, bind the "
"permissions to roles:"
msgstr ""
"Ensuite, toujours dans <literal>hibernate.cfg.xml</literal>, lier les "
"permissions aux rôles :"

#. Tag: programlisting
#: events.xml:180
#, no-c-format
msgid ""
"<![CDATA[<grant role=\"admin\" entity-name=\"User\" actions=\"insert,update,"
"read\"/>\n"
"<grant role=\"su\" entity-name=\"User\" actions=\"*\"/>]]>"
msgstr ""

#. Tag: para
#: events.xml:182
#, no-c-format
msgid "The role names are the roles understood by your JACC provider."
msgstr "Les noms de rôle sont les rôles compris par votre fournisseur JAAC."
