#, fuzzy
msgid ""
msgstr ""
"Report-Msgid-Bugs-To: http://bugs.kde.org\n"
"POT-Creation-Date: 2009-06-10 21:02+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Content-Type: text/plain; charset=UTF-8\n"

#. Tag: title
#: events.xml:29
#, no-c-format
msgid "Interceptors and events"
msgstr "Interceptores y eventos"

#. Tag: para
#: events.xml:31
#, fuzzy, no-c-format
msgid ""
"It is useful for the application to react to certain events that occur "
"inside Hibernate. This allows for the implementation of generic "
"functionality and the extension of Hibernate functionality."
msgstr ""
"Frecuentemente es &#x00fa;til para la aplicaci&#x00f3;n reaccionar a ciertos "
"eventos que ocurran dentro de Hibernate. Esto permite la implementaci&#x00f3;"
"n de ciertos tipos de funcionalidade gen&#x00e9;rica, y extensi&#x00f3;n de "
"la funcionalidad de Hibernate."

#. Tag: title
#: events.xml:38
#, no-c-format
msgid "Interceptors"
msgstr "Interceptores"

#. Tag: para
#: events.xml:40
#, fuzzy, no-c-format
msgid ""
"The <literal>Interceptor</literal> interface provides callbacks from the "
"session to the application, allowing the application to inspect and/or "
"manipulate properties of a persistent object before it is saved, updated, "
"deleted or loaded. One possible use for this is to track auditing "
"information. For example, the following <literal>Interceptor</literal> "
"automatically sets the <literal>createTimestamp</literal> when an "
"<literal>Auditable</literal> is created and updates the "
"<literal>lastUpdateTimestamp</literal> property when an <literal>Auditable</"
"literal> is updated."
msgstr ""
"La interface <literal>Interceptor</literal> provee callbacks desde la "
"sesi&#x00f3;n a la aplicaci&#x00f3;n permitiendo a &#x00e9;sta &#x00fa;ltima "
"inspeccionar y/o manipular las propiedades de un objeto persistente antes "
"que sea salvado, actualizado, borrado o cargado. Un uso posible de esto es "
"seguir la pista de informaci&#x00f3;n de auditor&#x00ed;a. Por ejemplo, el "
"siguiente <literal>Interceptor</literal> establece autom&#x00e1;ticamente el "
"<literal>createTimestamp</literal> cuando un <literal>Auditable</literal> es "
"creado y actualiza la propiedad <literal>lastUpdateTimestamp</literal> "
"cuando un <literal>Auditable</literal> es acutalizado."

#. Tag: para
#: events.xml:51
#, fuzzy, no-c-format
msgid ""
"You can either implement <literal>Interceptor</literal> directly or extend "
"<literal>EmptyInterceptor</literal>."
msgstr ""
"UNTRANSLATED! You may either implement <literal>Interceptor</literal> "
"directly or (better) extend <literal>EmptyInterceptor</literal>."

#. Tag: programlisting
#: events.xml:56
#, no-c-format
msgid ""
"<![CDATA[package org.hibernate.test;\n"
"\n"
"import java.io.Serializable;\n"
"import java.util.Date;\n"
"import java.util.Iterator;\n"
"\n"
"import org.hibernate.EmptyInterceptor;\n"
"import org.hibernate.Transaction;\n"
"import org.hibernate.type.Type;\n"
"\n"
"public class AuditInterceptor extends EmptyInterceptor {\n"
"\n"
"    private int updates;\n"
"    private int creates;\n"
"    private int loads;\n"
"\n"
"    public void onDelete(Object entity,\n"
"                         Serializable id,\n"
"                         Object[] state,\n"
"                         String[] propertyNames,\n"
"                         Type[] types) {\n"
"        // do nothing\n"
"    }\n"
"\n"
"    public boolean onFlushDirty(Object entity,\n"
"                                Serializable id,\n"
"                                Object[] currentState,\n"
"                                Object[] previousState,\n"
"                                String[] propertyNames,\n"
"                                Type[] types) {\n"
"\n"
"        if ( entity instanceof Auditable ) {\n"
"            updates++;\n"
"            for ( int i=0; i < propertyNames.length; i++ ) {\n"
"                if ( \"lastUpdateTimestamp\".equals( propertyNames[i] ) ) {\n"
"                    currentState[i] = new Date();\n"
"                    return true;\n"
"                }\n"
"            }\n"
"        }\n"
"        return false;\n"
"    }\n"
"\n"
"    public boolean onLoad(Object entity,\n"
"                          Serializable id,\n"
"                          Object[] state,\n"
"                          String[] propertyNames,\n"
"                          Type[] types) {\n"
"        if ( entity instanceof Auditable ) {\n"
"            loads++;\n"
"        }\n"
"        return false;\n"
"    }\n"
"\n"
"    public boolean onSave(Object entity,\n"
"                          Serializable id,\n"
"                          Object[] state,\n"
"                          String[] propertyNames,\n"
"                          Type[] types) {\n"
"\n"
"        if ( entity instanceof Auditable ) {\n"
"            creates++;\n"
"            for ( int i=0; i<propertyNames.length; i++ ) {\n"
"                if ( \"createTimestamp\".equals( propertyNames[i] ) ) {\n"
"                    state[i] = new Date();\n"
"                    return true;\n"
"                }\n"
"            }\n"
"        }\n"
"        return false;\n"
"    }\n"
"\n"
"    public void afterTransactionCompletion(Transaction tx) {\n"
"        if ( tx.wasCommitted() ) {\n"
"            System.out.println(\"Creations: \" + creates + \", Updates: \" + "
"updates, \"Loads: \" + loads);\n"
"        }\n"
"        updates=0;\n"
"        creates=0;\n"
"        loads=0;\n"
"    }\n"
"\n"
"}]]>"
msgstr ""
"<![CDATA[package org.hibernate.test;\n"
"\n"
"import java.io.Serializable;\n"
"import java.util.Date;\n"
"import java.util.Iterator;\n"
"\n"
"import org.hibernate.Interceptor;\n"
"import org.hibernate.type.Type;\n"
"\n"
"public class AuditInterceptor implements Interceptor, Serializable {\n"
"\n"
"    private int updates;\n"
"    private int creates;\n"
"\n"
"    public void onDelete(Object entity,\n"
"                         Serializable id,\n"
"                         Object[] state,\n"
"                         String[] propertyNames,\n"
"                         Type[] types) {\n"
"        // do nothing\n"
"    }\n"
"\n"
"    public boolean onFlushDirty(Object entity,\n"
"                                Serializable id,\n"
"                                Object[] currentState,\n"
"                                Object[] previousState,\n"
"                                String[] propertyNames,\n"
"                                Type[] types) {\n"
"\n"
"        if ( entity instanceof Auditable ) {\n"
"            updates++;\n"
"            for ( int i=0; i < propertyNames.length; i++ ) {\n"
"                if ( \"lastUpdateTimestamp\".equals( propertyNames[i] ) ) {\n"
"                    currentState[i] = new Date();\n"
"                    return true;\n"
"                }\n"
"            }\n"
"        }\n"
"        return false;\n"
"    }\n"
"\n"
"    public boolean onLoad(Object entity,\n"
"                          Serializable id,\n"
"                          Object[] state,\n"
"                          String[] propertyNames,\n"
"                          Type[] types) {\n"
"        return false;\n"
"    }\n"
"\n"
"    public boolean onSave(Object entity,\n"
"                          Serializable id,\n"
"                          Object[] state,\n"
"                          String[] propertyNames,\n"
"                          Type[] types) {\n"
"\n"
"        if ( entity instanceof Auditable ) {\n"
"            creates++;\n"
"            for ( int i=0; i<propertyNames.length; i++ ) {\n"
"                if ( \"createTimestamp\".equals( propertyNames[i] ) ) {\n"
"                    state[i] = new Date();\n"
"                    return true;\n"
"                }\n"
"            }\n"
"        }\n"
"        return false;\n"
"    }\n"
"\n"
"    public void postFlush(Iterator entities) {\n"
"        System.out.println(\"Creations: \" + creates + \", Updates: \" + "
"updates);\n"
"    }\n"
"\n"
"    public void preFlush(Iterator entities) {\n"
"        updates=0;\n"
"        creates=0;\n"
"    }\n"
"\n"
"    ...\n"
"\n"
"}]]>"

#. Tag: para
#: events.xml:58
#, fuzzy, no-c-format
msgid ""
"There are two kinds of inteceptors: <literal>Session</literal>-scoped and "
"<literal>SessionFactory</literal>-scoped."
msgstr ""
"UNTRANSLATED! Interceptors come in two flavors: <literal>Session</literal>-"
"scoped and <literal>SessionFactory</literal>-scoped."

#. Tag: para
#: events.xml:63
#, no-c-format
msgid ""
"A <literal>Session</literal>-scoped interceptor is specified when a session "
"is opened using one of the overloaded SessionFactory.openSession() methods "
"accepting an <literal>Interceptor</literal>."
msgstr ""
"UNTRANSLATED! A <literal>Session</literal>-scoped interceptor is specified "
"when a session is opened using one of the overloaded SessionFactory."
"openSession() methods accepting an <literal>Interceptor</literal>."

#. Tag: programlisting
#: events.xml:69
#, no-c-format
msgid "<![CDATA[Session session = sf.openSession( new AuditInterceptor() );]]>"
msgstr ""
"<![CDATA[Session session = sf.openSession( new AuditInterceptor() );]]>"

#. Tag: para
#: events.xml:71
#, fuzzy, no-c-format
msgid ""
"A <literal>SessionFactory</literal>-scoped interceptor is registered with "
"the <literal>Configuration</literal> object prior to building the "
"<literal>SessionFactory</literal>. Unless a session is opened explicitly "
"specifying the interceptor to use, the supplied interceptor will be applied "
"to all sessions opened from that <literal>SessionFactory</literal>. "
"<literal>SessionFactory</literal>-scoped interceptors must be thread safe. "
"Ensure that you do not store session-specific states, since multiple "
"sessions will use this interceptor potentially concurrently."
msgstr ""
"UNTRANSLATED! A <literal>SessionFactory</literal>-scoped interceptor is "
"registered with the <literal>Configuration</literal> object prior to "
"building the <literal>SessionFactory</literal>. In this case, the supplied "
"interceptor will be applied to all sessions opened from that "
"<literal>SessionFactory</literal>; this is true unless a session is opened "
"explicitly specifying the interceptor to use. <literal>SessionFactory</"
"literal>-scoped interceptors must be thread safe, taking care to not store "
"session-specific state since multiple sessions will use this interceptor "
"(potentially) concurrently."

#. Tag: programlisting
#: events.xml:80
#, no-c-format
msgid ""
"<![CDATA[new Configuration().setInterceptor( new AuditInterceptor() );]]>"
msgstr ""
"<![CDATA[new Configuration().setInterceptor( new AuditInterceptor() );]]>"

#. Tag: title
#: events.xml:85
#, no-c-format
msgid "Event system"
msgstr "Sistema de eventos"

#. Tag: para
#: events.xml:87
#, fuzzy, no-c-format
msgid ""
"If you have to react to particular events in your persistence layer, you can "
"also use the Hibernate3 <emphasis>event</emphasis> architecture. The event "
"system can be used in addition, or as a replacement, for interceptors."
msgstr ""
"Si tienes que reaccionar a eventos particulares en tu capa de persistencia, "
"puedes tambi&#x00e9;n la arquitectura de <emphasis>eventos</emphasis> de "
"Hibernate3. El sistema de eventos puede ser usado en adici&#x00f3;n o como "
"un remplazo a los interceptores."

#. Tag: para
#: events.xml:93
#, fuzzy, no-c-format
msgid ""
"All the methods of the <literal>Session</literal> interface correlate to an "
"event. You have a <literal>LoadEvent</literal>, a <literal>FlushEvent</"
"literal>, etc. Consult the XML configuration-file DTD or the <literal>org."
"hibernate.event</literal> package for the full list of defined event types. "
"When a request is made of one of these methods, the Hibernate "
"<literal>Session</literal> generates an appropriate event and passes it to "
"the configured event listeners for that type. Out-of-the-box, these "
"listeners implement the same processing in which those methods always "
"resulted. However, you are free to implement a customization of one of the "
"listener interfaces (i.e., the <literal>LoadEvent</literal> is processed by "
"the registered implementation of the <literal>LoadEventListener</literal> "
"interface), in which case their implementation would be responsible for "
"processing any <literal>load()</literal> requests made of the "
"<literal>Session</literal>."
msgstr ""
"Esencialmente todos los m&#x00e9;todos de la interface <literal>Session</"
"literal> se correlacionan con un evento. Tienes un <literal>LoadEvent</"
"literal>, un <literal>FlushEvent</literal>, etc (consulta el DTD del fichero "
"de configuraci&#x00f3;n XML o el paquete <literal>org.hibernate.event</"
"literal> para la lista completa de tipos de evento definidos). Cuando se "
"hace una petici&#x00f3;n de uno de estos m&#x00e9;todos, la "
"<literal>Session</literal> de Hibernate genera un evento apropiado y se lo "
"pasa al oyente (listener) de eventos configurado para ese tipo. De f&#x00e1;"
"brica, estos oyentes implementan el mismo procesamiento en los que siempre "
"resultan aquellos m&#x00e9;todos. Sin embargo, eres libre de implementar una "
"personalizaci&#x00f3;n de una de las interfaces oyentes (es decir, el "
"<literal>LoadEvent</literal> es procesado por la implementaci&#x00f3;n "
"registrada de la interface <literal>LoadEventListener</literal>), en cuyo "
"caso su implementaci&#x00f3;n ser&#x00ed;a responsable de procesar cualquier "
"petici&#x00f3;n <literal>load()</literal> hecha a la <literal>Session</"
"literal>."

#. Tag: para
#: events.xml:108
#, fuzzy, no-c-format
msgid ""
"The listeners should be considered singletons. This means they are shared "
"between requests, and should not save any state as instance variables."
msgstr ""
"Los oyentes deben ser considerados efectivamente singletons; quiere decir, "
"que son compartidos entre las peticiones, y por lo tanto no guardan "
"ning&#x00fa;n estado en variables de instancia."

#. Tag: para
#: events.xml:113
#, fuzzy, no-c-format
msgid ""
"A custom listener implements the appropriate interface for the event it "
"wants to process and/or extend one of the convenience base classes (or even "
"the default event listeners used by Hibernate out-of-the-box as these are "
"declared non-final for this purpose). Custom listeners can either be "
"registered programmatically through the <literal>Configuration</literal> "
"object, or specified in the Hibernate configuration XML. Declarative "
"configuration through the properties file is not supported. Here is an "
"example of a custom load event listener:"
msgstr ""
"Un oyente personalizado debe implementar la interface apropiada para el "
"evento que quiere procesar y/o extender una de las clases base de "
"conveniencia (o incluso los oyentes de eventos por defecto usados por "
"Hibernate de f&#x00e1;brica al ser &#x00e9;stos declarados non-final para "
"este prop&#x00f3;sito). Los oyentes personalizados pueden ser registrados "
"program&#x00e1;ticamente a trav&#x00e9;s del objeto <literal>Configuration</"
"literal>, o especificados en el XML de configuraci&#x00f3;n de Hibernate (la "
"declaraci&#x00f3;n declarativa a trav&#x00e9;s del fichero de propiedades no "
"est&#x00e1; soportada). He aqu&#x00ed; un ejemplo de un oyente personalizado "
"de eventos load:"

#. Tag: programlisting
#: events.xml:123
#, no-c-format
msgid ""
"<![CDATA[public class MyLoadListener implements LoadEventListener {\n"
"    // this is the single method defined by the LoadEventListener interface\n"
"    public void onLoad(LoadEvent event, LoadEventListener.LoadType "
"loadType)\n"
"            throws HibernateException {\n"
"        if ( !MySecurity.isAuthorized( event.getEntityClassName(), event."
"getEntityId() ) ) {\n"
"            throw MySecurityException(\"Unauthorized access\");\n"
"        }\n"
"    }\n"
"}]]>"
msgstr ""
"<![CDATA[public class MyLoadListener extends DefaultLoadEventListener {\n"
"    // this is the single method defined by the LoadEventListener interface\n"
"    public Object onLoad(LoadEvent event, LoadEventListener.LoadType "
"loadType)\n"
"            throws HibernateException {\n"
"        if ( !MySecurity.isAuthorized( event.getEntityClassName(), event."
"getEntityId() ) ) {\n"
"            throw MySecurityException(\"Unauthorized access\");\n"
"        }\n"
"        return super.onLoad(event, loadType);\n"
"    }\n"
"}]]>"

#. Tag: para
#: events.xml:125
#, no-c-format
msgid ""
"You also need a configuration entry telling Hibernate to use the listener in "
"addition to the default listener:"
msgstr ""
"Necesitas adem&#x00e1;s una entrada de configuraci&#x00f3;n dici&#x00e9;"
"ndole a Hibernate que use el oyente en vez del oyente por defecto:"

#. Tag: programlisting
#: events.xml:130
#, no-c-format
msgid ""
"<![CDATA[<hibernate-configuration>\n"
"    <session-factory>\n"
"        ...\n"
"        <event type=\"load\">\n"
"            <listener class=\"com.eg.MyLoadListener\"/>\n"
"            <listener class=\"org.hibernate.event.def."
"DefaultLoadEventListener\"/>\n"
"        </event>\n"
"    </session-factory>\n"
"</hibernate-configuration>]]>"
msgstr ""
"<![CDATA[<hibernate-configuration>\n"
"    <session-factory>\n"
"        ...\n"
"        <listener type=\"load\" class=\"MyLoadListener\"/>\n"
"    </session-factory>\n"
"</hibernate-configuration>]]>"

#. Tag: para
#: events.xml:132
#, fuzzy, no-c-format
msgid "Instead, you can register it programmatically:"
msgstr "En cambio, puedes registrarlo program&#x00e1;ticamente:"

#. Tag: programlisting
#: events.xml:136
#, no-c-format
msgid ""
"<![CDATA[Configuration cfg = new Configuration();\n"
"LoadEventListener[] stack = { new MyLoadListener(), new "
"DefaultLoadEventListener() };\n"
"cfg.EventListeners().setLoadEventListeners(stack);]]>"
msgstr ""
"<![CDATA[Configuration cfg = new Configuration();\n"
"cfg.getSessionEventListenerConfig().setLoadEventListener( new MyLoadListener"
"() );]]>"

#. Tag: para
#: events.xml:138
#, fuzzy, no-c-format
msgid ""
"Listeners registered declaratively cannot share instances. If the same class "
"name is used in multiple <literal>&lt;listener/&gt;</literal> elements, each "
"reference will result in a separate instance of that class. If you need to "
"share listener instances between listener types you must use the "
"programmatic registration approach."
msgstr ""
"Los oyentes registrados declarativamente no pueden compartir instancias. Si "
"el mismo nombre de clase es usado en m&#x00fa;ltiples elementos <literal>&lt;"
"listener/&gt;</literal>, cada referencia resultar&#x00e1; en una instancia "
"separada de esa clase. Si necesitas la capacidad de compartir instancias de "
"oyentes entre tipos de oyente debes usar el enfoque de registraci&#x00f3;n "
"program&#x00e1;tica."

#. Tag: para
#: events.xml:146
#, fuzzy, no-c-format
msgid ""
"Why implement an interface and define the specific type during "
"configuration? A listener implementation could implement multiple event "
"listener interfaces. Having the type additionally defined during "
"registration makes it easier to turn custom listeners on or off during "
"configuration."
msgstr ""
"&#x00bf;Por qu&#x00e9; implementar una interface y definir el tipo "
"espc&#x00ed;fico durante la configuraci&#x00f3;n? Bueno, una "
"implementaci&#x00f3;n de oyente podr&#x00ed;a implementar m&#x00fa;ltiples "
"interfaces de oyente de eventos. Teniendo el tipo definido adicionalmente "
"durante la registraci&#x00f3;n lo hace m&#x00e1;s f&#x00e1;cil para activar "
"o desactivar oyentes personalizados durante la configuraci&#x00f3;n."

#. Tag: title
#: events.xml:156
#, no-c-format
msgid "Hibernate declarative security"
msgstr "Seguridad declarativa de Hibernate"

#. Tag: para
#: events.xml:157
#, fuzzy, no-c-format
msgid ""
"Usually, declarative security in Hibernate applications is managed in a "
"session facade layer. Hibernate3 allows certain actions to be permissioned "
"via JACC, and authorized via JAAS. This is an optional functionality that is "
"built on top of the event architecture."
msgstr ""
"Usualmente, la seguridad declarativa en aplicaciones Hibernate es manejada "
"en una capa de fachada de sesi&#x00f3;n. Ahora, Hibernate3 permite que "
"ciertas acciones sean permitidas v&#x00ed;a JACC, y autorizadas v&#x00ed;a "
"JAAS. Esta en una funcionalidad opcional constru&#x00ed;da encima de la "
"arquitectura de eventos."

#. Tag: para
#: events.xml:163
#, no-c-format
msgid ""
"First, you must configure the appropriate event listeners, to enable the use "
"of JAAS authorization."
msgstr ""
"Primero, debes configurar los oyentes de eventos apropiados, para habilitar "
"el uso de autorizaci&#x00f3;n JAAS."

#. Tag: programlisting
#: events.xml:168
#, no-c-format
msgid ""
"<![CDATA[<listener type=\"pre-delete\" class=\"org.hibernate.secure."
"JACCPreDeleteEventListener\"/>\n"
"<listener type=\"pre-update\" class=\"org.hibernate.secure."
"JACCPreUpdateEventListener\"/>\n"
"<listener type=\"pre-insert\" class=\"org.hibernate.secure."
"JACCPreInsertEventListener\"/>\n"
"<listener type=\"pre-load\" class=\"org.hibernate.secure."
"JACCPreLoadEventListener\"/>]]>"
msgstr ""
"<![CDATA[<listener type=\"pre-delete\" class=\"org.hibernate.secure."
"JACCPreDeleteEventListener\"/>\n"
"<listener type=\"pre-update\" class=\"org.hibernate.secure."
"JACCPreUpdateEventListener\"/>\n"
"<listener type=\"pre-insert\" class=\"org.hibernate.secure."
"JACCPreInsertEventListener\"/>\n"
"<listener type=\"pre-load\" class=\"org.hibernate.secure."
"JACCPreLoadEventListener\"/>]]>"

#. Tag: para
#: events.xml:170
#, fuzzy, no-c-format
msgid ""
"Note that <literal>&lt;listener type=\"...\" class=\"...\"/&gt;</literal> is "
"shorthand for <literal>&lt;event type=\"...\"&gt;&lt;listener class=\"...\"/"
"&gt;&lt;/event&gt;</literal> when there is exactly one listener for a "
"particular event type."
msgstr ""
"UNTRANSLATED! Note that <literal>&lt;listener type=\"...\" class=\"...\"/&gt;"
"</literal> is just a shorthand for <literal>&lt;event type=\"...\"&gt;&lt;"
"listener class=\"...\"/&gt;&lt;/event&gt;</literal> when there is exactly "
"one listener for a particular event type."

#. Tag: para
#: events.xml:176
#, fuzzy, no-c-format
msgid ""
"Next, while still in <literal>hibernate.cfg.xml</literal>, bind the "
"permissions to roles:"
msgstr ""
"Seguido, a&#x00fa;n en <literal>hibernate.cfg.xml</literal>, liga los "
"permisos a roles:"

#. Tag: programlisting
#: events.xml:180
#, no-c-format
msgid ""
"<![CDATA[<grant role=\"admin\" entity-name=\"User\" actions=\"insert,update,"
"read\"/>\n"
"<grant role=\"su\" entity-name=\"User\" actions=\"*\"/>]]>"
msgstr ""
"<![CDATA[<grant role=\"admin\" entity-name=\"User\" actions=\"insert,update,"
"read\"/>\n"
"<grant role=\"su\" entity-name=\"User\" actions=\"*\"/>]]>"

#. Tag: para
#: events.xml:182
#, no-c-format
msgid "The role names are the roles understood by your JACC provider."
msgstr "Los nombres de role son los roles entendidos por tu proveedor de JACC."

#~ msgid "ROLES_OF_TRANSLATORS"
#~ msgstr "<!--TRANS:ROLES_OF_TRANSLATORS-->"

#~ msgid "CREDIT_FOR_TRANSLATORS"
#~ msgstr "<!--TRANS:CREDIT_FOR_TRANSLATORS-->"
