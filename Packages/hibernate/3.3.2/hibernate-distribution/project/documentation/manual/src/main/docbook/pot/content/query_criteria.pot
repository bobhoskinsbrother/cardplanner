# SOME DESCRIPTIVE TITLE.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"Report-Msgid-Bugs-To: http://bugs.kde.org\n"
"POT-Creation-Date: 2009-06-10 21:02+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <kde-i18n-doc@kde.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: application/x-xml2pot; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#. Tag: title
#: query_criteria.xml:29
#, no-c-format
msgid "Criteria Queries"
msgstr ""

#. Tag: para
#: query_criteria.xml:31
#, no-c-format
msgid "Hibernate features an intuitive, extensible criteria query API."
msgstr ""

#. Tag: title
#: query_criteria.xml:36
#, no-c-format
msgid "Creating a <literal>Criteria</literal> instance"
msgstr ""

#. Tag: para
#: query_criteria.xml:38
#, no-c-format
msgid "The interface <literal>org.hibernate.Criteria</literal> represents a query against a particular persistent class. The <literal>Session</literal> is a factory for <literal>Criteria</literal> instances."
msgstr ""

#. Tag: programlisting
#: query_criteria.xml:44
#, no-c-format
msgid ""
      "<![CDATA[Criteria crit = sess.createCriteria(Cat.class);\n"
      "crit.setMaxResults(50);\n"
      "List cats = crit.list();]]>"
msgstr ""

#. Tag: title
#: query_criteria.xml:49
#, no-c-format
msgid "Narrowing the result set"
msgstr ""

#. Tag: para
#: query_criteria.xml:51
#, no-c-format
msgid "An individual query criterion is an instance of the interface <literal>org.hibernate.criterion.Criterion</literal>. The class <literal>org.hibernate.criterion.Restrictions</literal> defines factory methods for obtaining certain built-in <literal>Criterion</literal> types."
msgstr ""

#. Tag: programlisting
#: query_criteria.xml:59
#, no-c-format
msgid ""
      "<![CDATA[List cats = sess.createCriteria(Cat.class)\n"
      "    .add( Restrictions.like(\"name\", \"Fritz%\") )\n"
      "    .add( Restrictions.between(\"weight\", minWeight, maxWeight) )\n"
      "    .list();]]>"
msgstr ""

#. Tag: para
#: query_criteria.xml:61
#, no-c-format
msgid "Restrictions can be grouped logically."
msgstr ""

#. Tag: programlisting
#: query_criteria.xml:65
#, no-c-format
msgid ""
      "<![CDATA[List cats = sess.createCriteria(Cat.class)\n"
      "    .add( Restrictions.like(\"name\", \"Fritz%\") )\n"
      "    .add( Restrictions.or(\n"
      "        Restrictions.eq( \"age\", new Integer(0) ),\n"
      "        Restrictions.isNull(\"age\")\n"
      "    ) )\n"
      "    .list();]]>"
msgstr ""

#. Tag: programlisting
#: query_criteria.xml:67
#, no-c-format
msgid ""
      "<![CDATA[List cats = sess.createCriteria(Cat.class)\n"
      "    .add( Restrictions.in( \"name\", new String[] { \"Fritz\", \"Izi\", \"Pk\" } ) )\n"
      "    .add( Restrictions.disjunction()\n"
      "        .add( Restrictions.isNull(\"age\") )\n"
      "        .add( Restrictions.eq(\"age\", new Integer(0) ) )\n"
      "        .add( Restrictions.eq(\"age\", new Integer(1) ) )\n"
      "        .add( Restrictions.eq(\"age\", new Integer(2) ) )\n"
      "    ) )\n"
      "    .list();]]>"
msgstr ""

#. Tag: para
#: query_criteria.xml:69
#, no-c-format
msgid "There are a range of built-in criterion types (<literal>Restrictions</literal> subclasses). One of the most useful allows you to specify SQL directly."
msgstr ""

#. Tag: programlisting
#: query_criteria.xml:74
#, no-c-format
msgid ""
      "<![CDATA[List cats = sess.createCriteria(Cat.class)\n"
      "    .add( Restrictions.sqlRestriction(\"lower({alias}.name) like lower(?)\", \"Fritz%\", Hibernate.STRING) )\n"
      "    .list();]]>"
msgstr ""

#. Tag: para
#: query_criteria.xml:76
#, no-c-format
msgid "The <literal>{alias}</literal> placeholder with be replaced by the row alias of the queried entity."
msgstr ""

#. Tag: para
#: query_criteria.xml:81
#, no-c-format
msgid "You can also obtain a criterion from a <literal>Property</literal> instance. You can create a <literal>Property</literal> by calling <literal>Property.forName()</literal>:"
msgstr ""

#. Tag: programlisting
#: query_criteria.xml:87
#, no-c-format
msgid ""
      "<![CDATA[\n"
      "Property age = Property.forName(\"age\");\n"
      "List cats = sess.createCriteria(Cat.class)\n"
      "    .add( Restrictions.disjunction()\n"
      "        .add( age.isNull() )\n"
      "        .add( age.eq( new Integer(0) ) )\n"
      "        .add( age.eq( new Integer(1) ) )\n"
      "        .add( age.eq( new Integer(2) ) )\n"
      "    ) )\n"
      "    .add( Property.forName(\"name\").in( new String[] { \"Fritz\", \"Izi\", \"Pk\" } ) )\n"
      "    .list();]]>"
msgstr ""

#. Tag: title
#: query_criteria.xml:92
#, no-c-format
msgid "Ordering the results"
msgstr ""

#. Tag: para
#: query_criteria.xml:94
#, no-c-format
msgid "You can order the results using <literal>org.hibernate.criterion.Order</literal>."
msgstr ""

#. Tag: programlisting
#: query_criteria.xml:98
#, no-c-format
msgid ""
      "<![CDATA[List cats = sess.createCriteria(Cat.class)\n"
      "    .add( Restrictions.like(\"name\", \"F%\")\n"
      "    .addOrder( Order.asc(\"name\") )\n"
      "    .addOrder( Order.desc(\"age\") )\n"
      "    .setMaxResults(50)\n"
      "    .list();]]>"
msgstr ""

#. Tag: programlisting
#: query_criteria.xml:100
#, no-c-format
msgid ""
      "<![CDATA[List cats = sess.createCriteria(Cat.class)\n"
      "    .add( Property.forName(\"name\").like(\"F%\") )\n"
      "    .addOrder( Property.forName(\"name\").asc() )\n"
      "    .addOrder( Property.forName(\"age\").desc() )\n"
      "    .setMaxResults(50)\n"
      "    .list();]]>"
msgstr ""

#. Tag: title
#: query_criteria.xml:105
#, no-c-format
msgid "Associations"
msgstr ""

#. Tag: para
#: query_criteria.xml:107
#, no-c-format
msgid "By navigating associations using <literal>createCriteria()</literal> you can specify constraints upon related entities:"
msgstr ""

#. Tag: programlisting
#: query_criteria.xml:112
#, no-c-format
msgid ""
      "<![CDATA[List cats = sess.createCriteria(Cat.class)\n"
      "    .add( Restrictions.like(\"name\", \"F%\") )\n"
      "    .createCriteria(\"kittens\")\n"
      "        .add( Restrictions.like(\"name\", \"F%\") )\n"
      "    .list();]]>"
msgstr ""

#. Tag: para
#: query_criteria.xml:114
#, no-c-format
msgid "The second <literal>createCriteria()</literal> returns a new instance of <literal>Criteria</literal> that refers to the elements of the <literal>kittens</literal> collection."
msgstr ""

#. Tag: para
#: query_criteria.xml:120
#, no-c-format
msgid "There is also an alternate form that is useful in certain circumstances:"
msgstr ""

#. Tag: programlisting
#: query_criteria.xml:124
#, no-c-format
msgid ""
      "<![CDATA[List cats = sess.createCriteria(Cat.class)\n"
      "    .createAlias(\"kittens\", \"kt\")\n"
      "    .createAlias(\"mate\", \"mt\")\n"
      "    .add( Restrictions.eqProperty(\"kt.name\", \"mt.name\") )\n"
      "    .list();]]>"
msgstr ""

#. Tag: para
#: query_criteria.xml:126
#, no-c-format
msgid "(<literal>createAlias()</literal> does not create a new instance of <literal>Criteria</literal>.)"
msgstr ""

#. Tag: para
#: query_criteria.xml:131
#, no-c-format
msgid "The kittens collections held by the <literal>Cat</literal> instances returned by the previous two queries are <emphasis>not</emphasis> pre-filtered by the criteria. If you want to retrieve just the kittens that match the criteria, you must use a <literal>ResultTransformer</literal>."
msgstr ""

#. Tag: programlisting
#: query_criteria.xml:138
#, no-c-format
msgid ""
      "<![CDATA[List cats = sess.createCriteria(Cat.class)\n"
      "    .createCriteria(\"kittens\", \"kt\")\n"
      "        .add( Restrictions.eq(\"name\", \"F%\") )\n"
      "    .setResultTransformer(Criteria.ALIAS_TO_ENTITY_MAP)\n"
      "    .list();\n"
      "Iterator iter = cats.iterator();\n"
      "while ( iter.hasNext() ) {\n"
      "    Map map = (Map) iter.next();\n"
      "    Cat cat = (Cat) map.get(Criteria.ROOT_ALIAS);\n"
      "    Cat kitten = (Cat) map.get(\"kt\");\n"
      "}]]>"
msgstr ""

#. Tag: title
#: query_criteria.xml:143
#, no-c-format
msgid "Dynamic association fetching"
msgstr ""

#. Tag: para
#: query_criteria.xml:145
#, no-c-format
msgid "You can specify association fetching semantics at runtime using <literal>setFetchMode()</literal>."
msgstr ""

#. Tag: programlisting
#: query_criteria.xml:150
#, no-c-format
msgid ""
      "<![CDATA[List cats = sess.createCriteria(Cat.class)\n"
      "    .add( Restrictions.like(\"name\", \"Fritz%\") )\n"
      "    .setFetchMode(\"mate\", FetchMode.EAGER)\n"
      "    .setFetchMode(\"kittens\", FetchMode.EAGER)\n"
      "    .list();]]>"
msgstr ""

#. Tag: para
#: query_criteria.xml:152
#, no-c-format
msgid "This query will fetch both <literal>mate</literal> and <literal>kittens</literal> by outer join. See <xref linkend=\"performance-fetching\"/> for more information."
msgstr ""

#. Tag: title
#: query_criteria.xml:160
#, no-c-format
msgid "Example queries"
msgstr ""

#. Tag: para
#: query_criteria.xml:162
#, no-c-format
msgid "The class <literal>org.hibernate.criterion.Example</literal> allows you to construct a query criterion from a given instance."
msgstr ""

#. Tag: programlisting
#: query_criteria.xml:167
#, no-c-format
msgid ""
      "<![CDATA[Cat cat = new Cat();\n"
      "cat.setSex('F');\n"
      "cat.setColor(Color.BLACK);\n"
      "List results = session.createCriteria(Cat.class)\n"
      "    .add( Example.create(cat) )\n"
      "    .list();]]>"
msgstr ""

#. Tag: para
#: query_criteria.xml:169
#, no-c-format
msgid "Version properties, identifiers and associations are ignored. By default, null valued properties are excluded."
msgstr ""

#. Tag: para
#: query_criteria.xml:174
#, no-c-format
msgid "You can adjust how the <literal>Example</literal> is applied."
msgstr ""

#. Tag: programlisting
#: query_criteria.xml:178
#, no-c-format
msgid ""
      "<![CDATA[Example example = Example.create(cat)\n"
      "    .excludeZeroes()           //exclude zero valued properties\n"
      "    .excludeProperty(\"color\")  //exclude the property named \"color\"\n"
      "    .ignoreCase()              //perform case insensitive string comparisons\n"
      "    .enableLike();             //use like for string comparisons\n"
      "List results = session.createCriteria(Cat.class)\n"
      "    .add(example)\n"
      "    .list();]]>"
msgstr ""

#. Tag: para
#: query_criteria.xml:180
#, no-c-format
msgid "You can even use examples to place criteria upon associated objects."
msgstr ""

#. Tag: programlisting
#: query_criteria.xml:184
#, no-c-format
msgid ""
      "<![CDATA[List results = session.createCriteria(Cat.class)\n"
      "    .add( Example.create(cat) )\n"
      "    .createCriteria(\"mate\")\n"
      "        .add( Example.create( cat.getMate() ) )\n"
      "    .list();]]>"
msgstr ""

#. Tag: title
#: query_criteria.xml:189
#, no-c-format
msgid "Projections, aggregation and grouping"
msgstr ""

#. Tag: para
#: query_criteria.xml:190
#, no-c-format
msgid "The class <literal>org.hibernate.criterion.Projections</literal> is a factory for <literal>Projection</literal> instances. You can apply a projection to a query by calling <literal>setProjection()</literal>."
msgstr ""

#. Tag: programlisting
#: query_criteria.xml:196
#, no-c-format
msgid ""
      "<![CDATA[List results = session.createCriteria(Cat.class)\n"
      "    .setProjection( Projections.rowCount() )\n"
      "    .add( Restrictions.eq(\"color\", Color.BLACK) )\n"
      "    .list();]]>"
msgstr ""

#. Tag: programlisting
#: query_criteria.xml:198
#, no-c-format
msgid ""
      "<![CDATA[List results = session.createCriteria(Cat.class)\n"
      "    .setProjection( Projections.projectionList()\n"
      "        .add( Projections.rowCount() )\n"
      "        .add( Projections.avg(\"weight\") )\n"
      "        .add( Projections.max(\"weight\") )\n"
      "        .add( Projections.groupProperty(\"color\") )\n"
      "    )\n"
      "    .list();]]>"
msgstr ""

#. Tag: para
#: query_criteria.xml:200
#, no-c-format
msgid "There is no explicit \"group by\" necessary in a criteria query. Certain projection types are defined to be <emphasis>grouping projections</emphasis>, which also appear in the SQL <literal>group by</literal> clause."
msgstr ""

#. Tag: para
#: query_criteria.xml:206
#, no-c-format
msgid "An alias can be assigned to a projection so that the projected value can be referred to in restrictions or orderings. Here are two different ways to do this:"
msgstr ""

#. Tag: programlisting
#: query_criteria.xml:212
#, no-c-format
msgid ""
      "<![CDATA[List results = session.createCriteria(Cat.class)\n"
      "    .setProjection( Projections.alias( Projections.groupProperty(\"color\"), \"colr\" ) )\n"
      "    .addOrder( Order.asc(\"colr\") )\n"
      "    .list();]]>"
msgstr ""

#. Tag: programlisting
#: query_criteria.xml:214
#, no-c-format
msgid ""
      "<![CDATA[List results = session.createCriteria(Cat.class)\n"
      "    .setProjection( Projections.groupProperty(\"color\").as(\"colr\") )\n"
      "    .addOrder( Order.asc(\"colr\") )\n"
      "    .list();]]>"
msgstr ""

#. Tag: para
#: query_criteria.xml:216
#, no-c-format
msgid "The <literal>alias()</literal> and <literal>as()</literal> methods simply wrap a projection instance in another, aliased, instance of <literal>Projection</literal>. As a shortcut, you can assign an alias when you add the projection to a projection list:"
msgstr ""

#. Tag: programlisting
#: query_criteria.xml:223
#, no-c-format
msgid ""
      "<![CDATA[List results = session.createCriteria(Cat.class)\n"
      "    .setProjection( Projections.projectionList()\n"
      "        .add( Projections.rowCount(), \"catCountByColor\" )\n"
      "        .add( Projections.avg(\"weight\"), \"avgWeight\" )\n"
      "        .add( Projections.max(\"weight\"), \"maxWeight\" )\n"
      "        .add( Projections.groupProperty(\"color\"), \"color\" )\n"
      "    )\n"
      "    .addOrder( Order.desc(\"catCountByColor\") )\n"
      "    .addOrder( Order.desc(\"avgWeight\") )\n"
      "    .list();]]>"
msgstr ""

#. Tag: programlisting
#: query_criteria.xml:225
#, no-c-format
msgid ""
      "<![CDATA[List results = session.createCriteria(Domestic.class, \"cat\")\n"
      "    .createAlias(\"kittens\", \"kit\")\n"
      "    .setProjection( Projections.projectionList()\n"
      "        .add( Projections.property(\"cat.name\"), \"catName\" )\n"
      "        .add( Projections.property(\"kit.name\"), \"kitName\" )\n"
      "    )\n"
      "    .addOrder( Order.asc(\"catName\") )\n"
      "    .addOrder( Order.asc(\"kitName\") )\n"
      "    .list();]]>"
msgstr ""

#. Tag: para
#: query_criteria.xml:227
#, no-c-format
msgid "You can also use <literal>Property.forName()</literal> to express projections:"
msgstr ""

#. Tag: programlisting
#: query_criteria.xml:231
#, no-c-format
msgid ""
      "<![CDATA[List results = session.createCriteria(Cat.class)\n"
      "    .setProjection( Property.forName(\"name\") )\n"
      "    .add( Property.forName(\"color\").eq(Color.BLACK) )\n"
      "    .list();]]>"
msgstr ""

#. Tag: programlisting
#: query_criteria.xml:233
#, no-c-format
msgid ""
      "<![CDATA[List results = session.createCriteria(Cat.class)\n"
      "    .setProjection( Projections.projectionList()\n"
      "        .add( Projections.rowCount().as(\"catCountByColor\") )\n"
      "        .add( Property.forName(\"weight\").avg().as(\"avgWeight\") )\n"
      "        .add( Property.forName(\"weight\").max().as(\"maxWeight\") )\n"
      "        .add( Property.forName(\"color\").group().as(\"color\" )\n"
      "    )\n"
      "    .addOrder( Order.desc(\"catCountByColor\") )\n"
      "    .addOrder( Order.desc(\"avgWeight\") )\n"
      "    .list();]]>"
msgstr ""

#. Tag: title
#: query_criteria.xml:238
#, no-c-format
msgid "Detached queries and subqueries"
msgstr ""

#. Tag: para
#: query_criteria.xml:239
#, no-c-format
msgid "The <literal>DetachedCriteria</literal> class allows you to create a query outside the scope of a session and then execute it using an arbitrary <literal>Session</literal>."
msgstr ""

#. Tag: programlisting
#: query_criteria.xml:244
#, no-c-format
msgid ""
      "<![CDATA[DetachedCriteria query = DetachedCriteria.forClass(Cat.class)\n"
      "    .add( Property.forName(\"sex\").eq('F') );\n"
      "    \n"
      "Session session = ....;\n"
      "Transaction txn = session.beginTransaction();\n"
      "List results = query.getExecutableCriteria(session).setMaxResults(100).list();\n"
      "txn.commit();\n"
      "session.close();]]>"
msgstr ""

#. Tag: para
#: query_criteria.xml:246
#, no-c-format
msgid "A <literal>DetachedCriteria</literal> can also be used to express a subquery. Criterion instances involving subqueries can be obtained via <literal>Subqueries</literal> or <literal>Property</literal>."
msgstr ""

#. Tag: programlisting
#: query_criteria.xml:252
#, no-c-format
msgid ""
      "<![CDATA[DetachedCriteria avgWeight = DetachedCriteria.forClass(Cat.class)\n"
      "    .setProjection( Property.forName(\"weight\").avg() );\n"
      "session.createCriteria(Cat.class)\n"
      "    .add( Property.forName(\"weight\").gt(avgWeight) )\n"
      "    .list();]]>"
msgstr ""

#. Tag: programlisting
#: query_criteria.xml:254
#, no-c-format
msgid ""
      "<![CDATA[DetachedCriteria weights = DetachedCriteria.forClass(Cat.class)\n"
      "    .setProjection( Property.forName(\"weight\") );\n"
      "session.createCriteria(Cat.class)\n"
      "    .add( Subqueries.geAll(\"weight\", weights) )\n"
      "    .list();]]>"
msgstr ""

#. Tag: para
#: query_criteria.xml:256
#, no-c-format
msgid "Correlated subqueries are also possible:"
msgstr ""

#. Tag: programlisting
#: query_criteria.xml:260
#, no-c-format
msgid ""
      "<![CDATA[DetachedCriteria avgWeightForSex = DetachedCriteria.forClass(Cat.class, \"cat2\")\n"
      "    .setProjection( Property.forName(\"weight\").avg() )\n"
      "    .add( Property.forName(\"cat2.sex\").eqProperty(\"cat.sex\") );\n"
      "session.createCriteria(Cat.class, \"cat\")\n"
      "    .add( Property.forName(\"weight\").gt(avgWeightForSex) )\n"
      "    .list();]]>"
msgstr ""

#. Tag: title
#: query_criteria.xml:269
#, no-c-format
msgid "Queries by natural identifier"
msgstr ""

#. Tag: para
#: query_criteria.xml:271
#, no-c-format
msgid "For most queries, including criteria queries, the query cache is not efficient because query cache invalidation occurs too frequently. However, there is a special kind of query where you can optimize the cache invalidation algorithm: lookups by a constant natural key. In some applications, this kind of query occurs frequently. The criteria API provides special provision for this use case."
msgstr ""

#. Tag: para
#: query_criteria.xml:279
#, no-c-format
msgid "First, map the natural key of your entity using <literal>&lt;natural-id&gt;</literal> and enable use of the second-level cache."
msgstr ""

#. Tag: programlisting
#: query_criteria.xml:284
#, no-c-format
msgid ""
      "<![CDATA[<class name=\"User\">\n"
      "    <cache usage=\"read-write\"/>\n"
      "    <id name=\"id\">\n"
      "        <generator class=\"increment\"/>\n"
      "    </id>\n"
      "    <natural-id>\n"
      "        <property name=\"name\"/>\n"
      "        <property name=\"org\"/>\n"
      "    </natural-id>\n"
      "    <property name=\"password\"/>\n"
      "</class>]]>"
msgstr ""

#. Tag: para
#: query_criteria.xml:286
#, no-c-format
msgid "This functionality is not intended for use with entities with <emphasis>mutable</emphasis> natural keys."
msgstr ""

#. Tag: para
#: query_criteria.xml:291
#, no-c-format
msgid "Once you have enabled the Hibernate query cache, the <literal>Restrictions.naturalId()</literal> allows you to make use of the more efficient cache algorithm."
msgstr ""

#. Tag: programlisting
#: query_criteria.xml:297
#, no-c-format
msgid ""
      "<![CDATA[session.createCriteria(User.class)\n"
      "    .add( Restrictions.naturalId()\n"
      "        .set(\"name\", \"gavin\")\n"
      "        .set(\"org\", \"hb\") \n"
      "    ).setCacheable(true)\n"
      "    .uniqueResult();]]>"
msgstr ""

