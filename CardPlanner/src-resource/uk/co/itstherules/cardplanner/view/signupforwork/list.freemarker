<script>
//<![CDATA[
           
    var cards = ${jsonSerializer.deepSerialize(cards)};
	var people = ${jsonSerializer.serialize(people)};

	Event.observe(document, 'dom:loaded', function() { 
		var cards = ${jsonSerializer.serialize(cards)};
		drawAndAssignPeople(people, 'people');
		for(var i = 0; i < cards.length; i++) {
			var card = cards[i];
			var cardTarget = card.identity+'';
			Droppables.add($(cardTarget), { onDrop: addPersonToCard } );
		}
		Droppables.add($('theBin'), { onDrop: removePersonFromCard } );
	});

	function person(identity) {
		for(var i=0;i < people.length; i++){
			if(people[i].identity == identity) {
				return people[i];
			}
		}
		return null;
	}

	function removePersonFromCard(draggable, droppable) {
		var id = draggable.parentNode.getAttribute('id');
		var personId = draggable.getAttribute('id');
		if(id != 'people') {
			personId = personId.substring(0, personId.indexOf('Initials'));
			var url = '${root}/SignUpForWork/Delete/' + id + '/?person.identity='+personId;
			draggable.parentNode.removeChild(draggable);
			new Ajax.Request(url, {
				method: 'post',
				onSuccess: function(transport) { new Effect.Highlight($('theBin'), {keepBackgroundImage: true, startcolor: "#00FF00"}); }
			});
		}
	}

	function addPersonToCard(draggable, droppable) {
		var containsDraggable = false;
		var personId = draggable.getAttribute('id');
		var children = droppable.childNodes;
		for(var i=0;i < children.length; i++){
			var childId = children[i].getAttribute('id');
			childId = childId.substring(0, childId.indexOf('Initials'))
			if(childId == personId) {
				containsDraggable = true;
			}
		}
		if(!containsDraggable) {
			var initials = createInitials(person(personId));
			new Draggable(initials, { revert: true, ghosting: false });
			droppable.appendChild(initials);
			drawAndAssignPeople(people, 'people');
			var cardId = droppable.getAttribute('id');
			var url = '${root}/SignUpForWork/Update/'+cardId+'/?person.identity='+personId;
			new Ajax.Request(url, {
				method: 'post',
				onSuccess: function(transport) {
					var data = transport.responseText.evalJSON(true);
					new Effect.Highlight($(data.identity+'Main'), {keepBackgroundImage: true, startcolor: "#00FF00"});
				}
			});
		}
	}

	function createPerson(person) {
		var element =  new Element('div', {'title': person.firstName +' '+person.lastName, 'id':person.identity, 'name':person.identity, 'class':'white_rounded', 'style':'float:left; margin-right:10px;margin-bottom:10px;text-align:right; width:100px; min-height: 100px; cursor:move;'});
		element.appendChild(new Element('span', {'style': 'float:right;margin:6px; width:100px;'}).update(person.firstName + '' + person.lastName + ' ('+person.initials+')'));
		if(person.picture.image) {
			element.appendChild(new Element('img', {'src': root+'/Attachments/Show/'+person.picture.identity+'/Thumbnail'}));
		} else {
			element.appendChild(new Element('img', {'src': root+'/Images/Show/0/initials.png'}));
		}
		return element;
	}
	
	function createInitials(person) {
		var element =  new Element('div', {'title':person.firstName +' '+person.lastName, 'id':person.identity+'Initials'+Math.floor(Math.random()*10000001), 'name':person.identity, 'class':'rounded', 'style':'background-color-#FFFFFF; float:left; margin-right:2px; padding:3px; cursor:move;'}).update(person.initials);
		return element;
	}

	function drawInitials(people, target) {
		var peeps = '';
		for(var i = 0; i < people.length; i++) {
			var initials = createInitials(people[i]);
			target.appendChild(initials);
			new Draggable(initials, { revert: true, ghosting: false });
		}
	}

	function drawPeople(people, target) {
		var peeps = '';
		for(var i = 0; i < people.length; i++) {
			var initials = createPerson(people[i]);
			target.appendChild(initials);
			new Draggable(initials, { revert: true, ghosting: false });
		}
	}

	function drawAndAssignInitials(people, target) {
		var targetElement = $(target);
		targetElement.innerHTML = '';
		drawInitials(people, targetElement);
	}

	function drawAndAssignPeople(people, target) {
		var targetElement = $(target);
		targetElement.innerHTML = '';
		drawPeople(people, targetElement);
	}
//]]>	
</script>



<div style="clear:both;"> 
<div style="float:right;"><div style="float:left;margin-right:10px;"><a id="toggleKeyVisibility" href="javascript:void(0);" onclick="javascript:void(Effect.toggle('keys', 'appear'));" title="View Keys">${tagBuilder.showImage("key.png")}</a></div><div style="float:right; display:none;" id="keys"><#list types as type><span style="float:left;color:#BBBBBB;margin-right:5px;">${type.title?html}</span><div class="rounded" style="float:left;background-color:${type.colour};width:20px;height:20px;margin-right:10px;"></div></#list></div></div>
<div style="float: left;">
<span style="float:left;"><h2>Sign Up For Work</h2></span>
<span style="float:left;margin-left:20px;margin-top:12px;">
</span>
</div>
</div>
<div style="clear:both;"> 
</div>








<div id="people" style="min-height:100px; width:85%; clear:both; float: left;" class="gray_rounded">

</div>
<div id="theBin" style="float: left; background: url('${tagBuilder.showUrl("Images", "trash.png")}'); text-align: right; width: 100px; height: 100px;"></div>



<div id="big_card" style="clear: both;display:none;"></div>

<div style="clear:both;padding-top:10px;">
<#list cards as card>
<div id="${card.identity}Main" style="float:left; margin-right:10px; margin-top:10px; width:150px; height: 100px; border: 1px solid #ECECEC; background: url('${tagBuilder.showUrl("Images", "card_medium.png")}');background-color:${card.type.colour};">
<span style="padding:2px"><strong><span style="float:left; margin-left:2px;">
<a href="${root}/Cards/Show/${card.identity}/index.xhtml" class="lightwindow"><img src="${root}/Images/Show/0/magnifying.png" /></a>
</span>${card.title?html}</strong> (${card.status.title?html})</span>
<div id="${card.identity}" style="height:130px"></div>
</div>
<script>
//<![CDATA[
drawAndAssignInitials(${jsonSerializer.serialize(card.people)}, '${card.identity}')
//]]>	
</script>
</#list>
</div>
<div style="clear:both;padding-top:10px;"></div>