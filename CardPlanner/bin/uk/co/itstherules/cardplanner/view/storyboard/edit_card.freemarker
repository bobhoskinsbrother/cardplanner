${tagBuilder.showScript("controls.js")}
${tagBuilder.showScript("tags.js")}
<script type="text/javascript">
//<![CDATA[

	var addedTags = new Array(${titleListHelper.flatten(card.tags)});
	var allTags = new Array(${titleListHelper.flatten(allTags)});
	var root = '${root}';
	var types = ${jsonSerializer.serialize(types)};


	Event.observe(this, 'load',  function() {
		new Autocompleter.Local("tag", "autocompleteTag", allTags, {});
        tagsHelper = new TagsHelper(addedTags, 'tag', 'tagsBag');
		tagsHelper.render();
	});
	
	function changeCardBackgroundColour(identity) {
		for(var i = 0; i < types.length; i++) {
			if(types[i].identity == identity) {
				$('cardCard').style.backgroundColor=types[i].colour;
			}
		}
	}

	function remove(tag) {
		tagsHelper.remove(tag);
	}

	function updateWithOptions(id, title, callbackType) {
		var options = "expanded=";
		if(callbackType=="contract") {options+="false";} 
		else { options+="true";}
		update(id, title, options);
	}
	
	function update(id, title, options) {
		var url = root+"/Relationships/Update/"+id+"/" + title + "?"+options;
		new Ajax.Request(url, {
			method: 'post',
			onSuccess: function(transport) {
				var data = transport.responseText.evalJSON(true);
				new Effect.Highlight($(data.identity+''), {keepBackgroundImage: true, startcolor: "#00FF00"});
			},
			onFailure: function(transport) {
				new Effect.Highlight($(current), {keepBackgroundImage: true, startcolor: "#FF0000"});
			}
		});
	}

	function submitTagsForm() {
		var submitForm = $('editForm');
		$('tags').value = tagsHelper.toString();
		submitForm.submit();
	}

	function selectByValue(selectBox, value) {
		var selectOptions = selectBox.options;
		for(var i=0; i < selectOptions.length;i++) {
			if(value==selectOptions[i].value) {
				selectBox.selectedIndex = i;
			}
		}
	}

	//]]>
</script>
<div style="width:720px" class="centre">
<form method="post" action="${tagBuilder.url("StoryBoard", "${action}Card", card.identity, card.title?url)}" id="editForm">
<div class="card_full" style="background-color:${card.type.colour}" id="cardCard">
<div style="clear:both;">
<span style="float:left;width:50px;">Title:</span>
<span style="float:left;width:642px;">
${tagBuilder.inputText({"name":"title", "id":"title", "class":"title", "style":"width: 100%"}, card.title?html, violations.isViolated("title"), "Please input a title")}
</span>
</div>
<div style="clear:both; text-align:left;">
${tagBuilder.textArea({"name":"body", "id":"body", "class":"bodyTextArea", "style":"width:100%;height:300px; text-align:left;"}, card.body!"", violations.isViolated("body"), "Please input a description")}
</div>
<div id="bottomCards" style="clear:both;padding-top: 5px;">
<div id="effortDiv" style="float:left;padding-top:20px;">
Effort:<br/>
${tagBuilder.inputText({"name":"effort.amount", "maxlength":"8", "style":"width: 90px"}, card.effort.amount?c, violations.isViolated("effort.amount"), "Please input an effort amount")}<br/>
${tagBuilder.select("effort.type.identity", effortTypes, card.effort.type.identity, {"style":"width:90px"})}
${tagBuilder.listLink("EffortTypes", "", "0", tagBuilder.showImage("expand.gif"), {}, {"target":"_top"})}
</div>
<div id="valueDiv" style="float: right;margin-right: -5px;padding-top:20px;">
Value:<br/>
${tagBuilder.inputText({"name":"value.amount", "maxlength":"8", "style":"width: 90px"}, card.value.amount?c, violations.isViolated("value.amount"), "Please input a value amount")}<br/>
${tagBuilder.select("value.type.identity", valueTypes, card.value.type.identity, {"style":"width: 90px"})} 
${tagBuilder.listLink("ValueTypes", "",  card.value.type.identity, tagBuilder.showImage("expand.gif"), {}, {"target":"_top"})}
</div>
<div id="centreDiv" style="margin-left: 125px;float:left">
<div style="float:left;clear:both">
<span style="float:left; width: 75px;">Card Type:</span>

<select name="type.identity" id="type.identity" style="width:150px" onchange="changeCardBackgroundColour(this.value);">
<#list types as type><option value="${type.identity}" style="background-color:${type.colour};" <#if type.identity==card.type.identity>selected="selected"</#if>>${type.title?html}</option></#list>
</select>


${tagBuilder.listLink("CardTypes", "", "0", tagBuilder.showImage("expand.gif"), {}, {"target":"_top"})}
</div>

<div style="float:left;clear:both">
<span style="float:left; width: 75px;">Status:</span>
${tagBuilder.select("status.identity", statuses, card.status.identity, {"id":"status.identity", "style":"width:150px" })}
${tagBuilder.listLink("Statuses", "", "0", tagBuilder.showImage("expand.gif"), {})}
</div>
<div style="float:left;clear:both">
<span style="float:left; width: 75px;">Parent:</span>
${tagBuilder.select("parent.identity", parents, parentIdentity,  {"style":"width:150px"})}
</div></div>
</div>
<div style="clear:both; float:left;margin-top: 30px; vertical-align: top; width:634px;">
<div style="float: left;">
<input type="text" name="tags" id="tags" value="" style="display:none;"/>
Tag: <a name="tagBox"></a>
</div>
<div style="float: left;">
${tagBuilder.inputText({"name":"tag", "id":"tag", "autocomplete":"off"}, "", false, "")}<br/>
<div id="autocompleteTag" class="autocomplete"></div>
</div>
<div style="float: left;">
<input type="button" id="addTagButton" value="Add" onclick="tagsHelper.add()"/>
</div>
<div id="tagsBag" class="white_rounded" style="float: left;"></div>
<div style="float: right; clear:both;">
<input type="button" value="${action}" onclick="submitTagsForm()" id="completeAction" name="completeAction" />
</div>
</div>
</div>
${tagBuilder.hidden({"name":"cardIdentity"}, cardIdentity)}
${tagBuilder.hidden({"name":"cardTitle"}, cardTitle)}
</form>
</div>